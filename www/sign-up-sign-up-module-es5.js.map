{"version":3,"sources":["webpack:///src/app/_helpers/must-match.validator.ts","webpack:///src/app/sign-up/sign-up.module.ts","webpack:///src/app/sign-up/sign-up.page.html","webpack:///src/app/sign-up/sign-up.page.scss","webpack:///src/app/sign-up/sign-up.page.ts"],"names":["MustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","value","setErrors","routes","path","component","SignUpPageModule","imports","forChild","declarations","providers","SignUpPage","formBuilder","sharedService","navController","authService","router","isSubmitted","type","showPass","gaTrackView","signUpForm","group","email","compose","required","pattern","confirmEmail","password","fullName","termsOfUse","privacyPolicy","validator","event","patchValue","target","trim","gaTrackEvent","invalid","presentToast","presentLoader","user","loginType","removeNativeStorage","setNativeStorage","signUp","toPromise","res","login","loginRes","token","token$","authSubject","next","setDirection","navigate","presentAlert","error","dismissLoader","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;;;AACO,eAASA,SAAT,CAAmBC,WAAnB,EAAwCC,mBAAxC,EAAqE;AAC1E,eAAO,UAACC,SAAD,EAA0B;AAC/B,cAAMC,OAAO,GAAGD,SAAS,CAACE,QAAV,CAAmBJ,WAAnB,CAAhB;AACA,cAAMK,eAAe,GAAGH,SAAS,CAACE,QAAV,CAAmBH,mBAAnB,CAAxB;;AAEA,cAAII,eAAe,CAACC,MAAhB,IAA0B,CAACD,eAAe,CAACC,MAAhB,CAAuBC,SAAtD,EAAiE;AAC/D;AACA;AACD,WAP8B,CAS/B;;;AACA,cAAIJ,OAAO,CAACK,KAAR,KAAkBH,eAAe,CAACG,KAAtC,EAA6C;AAC3CH,2BAAe,CAACI,SAAhB,CAA0B;AAACF,uBAAS,EAAE;AAAZ,aAA1B;AACD,WAFD,MAEO;AACLF,2BAAe,CAACI,SAAhB,CAA0B,IAA1B;AACD;AACF,SAfD;AAgBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXD,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAkBaC,gBAAgB;AAAA;AAAA,O;;AAAhBA,sBAAgB,6DAX5B,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,6DAAaC,QAAb,CAAsBL,MAAtB,CALO,CADD;AAQRM,oBAAY,EAAE,CAAC,wDAAD,CARN;AASRC,iBAAS,EAAE;AATH,OAAT,CAW4B,GAAhBJ,gBAAgB,CAAhB;;;;;;;;;;;;;;;;AC3Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFK,UAAU;AAMrB,4BACUC,WADV,EAEUC,aAFV,EAGSC,aAHT,EAIUC,WAJV,EAKUC,MALV,EAKwB;AAAA;;AAJd,eAAAJ,WAAA,GAAAA,WAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACD,eAAAC,aAAA,GAAAA,aAAA;AACC,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AATV,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,IAAA,GAAO,UAAP;AACA,eAAAC,QAAA,GAAW,KAAX;AASE,eAAKN,aAAL,CAAmBO,WAAnB,CAA+B,cAA/B;AACD;;AAdoB;AAAA;AAAA,iBAgBrB,oBAAW;AACT,iBAAKC,UAAL,GAAkB,KAAKT,WAAL,CAAiBU,KAAjB,CAChB;AACEC,mBAAK,EAAE,CACL,EADK,EAEL,0DAAWC,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWC,OAAX,CACE,qEADF,CAFiB,CAAnB,CAFK,CADT;AAUEC,0BAAY,EAAE,CACZ,EADY,EAEZ,0DAAWH,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWC,OAAX,CACE,qEADF,CAFiB,CAAnB,CAFY,CAVhB;AAmBEE,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CAnBZ;AAoBEI,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CApBZ;AAqBEK,wBAAU,EAAE,CAAC,KAAD,EAAQ,0DAAWL,QAAnB,CArBd;AAsBEM,2BAAa,EAAE,CAAC,KAAD,EAAQ,0DAAWN,QAAnB;AAtBjB,aADgB,EAyBhB;AACEO,uBAAS,EAAE,gFAAU,OAAV,EAAmB,cAAnB;AADb,aAzBgB,CAAlB;AA6BD;AA9CoB;AAAA;AAAA,eAgDrB,eAAQ;AACN,mBAAO,KAAKX,UAAL,CAAgBxB,QAAvB;AACD;AAlDoB;AAAA;AAAA,iBAoDrB,mBAAUoC,KAAV,EAAiBf,IAAjB,EAAuB;AACrB,gBAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB,mBAAKG,UAAL,CAAgBa,UAAhB,CAA2B;AACzBX,qBAAK,EAAEU,KAAK,CAACE,MAAN,CAAalC,KAAb,CAAmBmC,IAAnB;AADkB,eAA3B;AAGD,aAJD,MAIO;AACL,mBAAKf,UAAL,CAAgBa,UAAhB,CAA2B;AACzBP,4BAAY,EAAEM,KAAK,CAACE,MAAN,CAAalC,KAAb,CAAmBmC,IAAnB;AADW,eAA3B;AAGD;AACF;AA9DoB;AAAA;AAAA,iBAgErB,wBAAe;AACb,iBAAKjB,QAAL,GAAgB,CAAC,KAAKA,QAAtB;;AAEA,gBAAI,KAAKA,QAAT,EAAmB;AACjB,mBAAKD,IAAL,GAAY,MAAZ;AACD,aAFD,MAEO;AACL,mBAAKA,IAAL,GAAY,UAAZ;AACD;AACF;AAxEoB;AAAA;AAAA,iBA0Ef,kBAAS;;;;;;;AACb,2BAAKL,aAAL,CAAmBwB,YAAnB,CAAgC,cAAhC,EAAgD,cAAhD;AACA,2BAAKpB,WAAL,GAAmB,IAAnB;;2BAEI,KAAKI,UAAL,CAAgBiB,O;;;;;;;;0BAIf,KAAKjB,UAAL,CAAgBpB,KAAhB,CAAsB6B,U;;;;;AACzB,2BAAKjB,aAAL,CAAmB0B,YAAnB,CACE,oEADF;;;;0BAMG,KAAKlB,UAAL,CAAgBpB,KAAhB,CAAsB8B,a;;;;;AACzB,2BAAKlB,aAAL,CAAmB0B,YAAnB,CACE,oEADF;;;;AAMF,2BAAK1B,aAAL,CAAmB2B,aAAnB,CAAiC,gBAAjC;AAEMC,0B,GAAO,KAAKpB,UAAL,CAAgBpB,K;AAC7BwC,0BAAI,CAAClB,KAAL,GAAa,KAAKF,UAAL,CAAgBpB,KAAhB,CAAsBsB,KAAtB,CAA4Ba,IAA5B,EAAb;AACAK,0BAAI,CAACZ,QAAL,GAAgB,KAAKR,UAAL,CAAgBpB,KAAhB,CAAsB4B,QAAtB,CAA+BO,IAA/B,EAAhB;AACAK,0BAAI,CAACC,SAAL,GAAiB,OAAjB;AAEA,2BAAK7B,aAAL,CAAmB8B,mBAAnB,CAAuC,UAAvC;AACA,2BAAK9B,aAAL,CAAmB+B,gBAAnB,CAAoC,gBAApC,EAAsD,KAAtD;AACA,2BAAK/B,aAAL,CAAmB+B,gBAAnB,CAAoC,kCAApC,EAAwE,KAAxE;AACA,2BAAK/B,aAAL,CAAmB+B,gBAAnB,CAAoC,+BAApC,EAAqE,KAArE;AACA,2BAAK/B,aAAL,CAAmB+B,gBAAnB,CAAoC,iCAApC,EAAuE,KAAvE;AACA,2BAAK/B,aAAL,CAAmB+B,gBAAnB,CAAoC,2BAApC,EAAiE,KAAjE;AACA,2BAAK/B,aAAL,CAAmB+B,gBAAnB,CAAoC,sBAApC,EAA4D,KAA5D;;;AAGc,6BAAM,KAAK7B,WAAL,CAAiB8B,MAAjB,CAAwBJ,IAAxB,EAA8BK,SAA9B,EAAN;;;AAANC,yB;;2BAEFA,G;;;;;;AACe,6BAAM,KAAKhC,WAAL,CACpBiC,KADoB,CACd;AACLzB,6BAAK,EAAEkB,IAAI,CAAClB,KADP;AAELK,gCAAQ,EAAEa,IAAI,CAACb,QAFV;AAGLc,iCAAS,EAAED,IAAI,CAACC;AAHX,uBADc,EAMpBI,SANoB,EAAN;;;AAAXG,8B;;2BAQFA,QAAQ,CAACC,K;;;;;;AACX,6BAAM,KAAKrC,aAAL,CAAmB+B,gBAAnB,CAAoC,OAApC,EAA6CK,QAAQ,CAACC,KAAtD,CAAN;;;AACA,2BAAKnC,WAAL,CAAiBoC,MAAjB,GAA0B,IAAI,qDAAJ,CAAoBF,QAAQ,CAACC,KAA7B,CAA1B;AACA,2BAAKnC,WAAL,CAAiBqC,WAAjB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,2BAAKvC,aAAL,CAAmBwC,YAAnB,CAAgC,MAAhC;AACA,2BAAKtC,MAAL,CAAYuC,QAAZ,CAAqB,CAAC,oBAAD,CAArB;;;;;;;;;AAIJ;AACA,2BAAK1C,aAAL,CAAmB2C,YAAnB,CAAgC,OAAhC,EAAyC,YAAIC,KAA7C;;;AAGF,2BAAK5C,aAAL,CAAmB6C,aAAnB;;;;;;;;;AACD;AAzIoB;;AAAA;AAAA,S;;;;gBAZJ;;gBAEX;;gBACA;;gBALA;;gBAGA;;;;AAWK/C,gBAAU,6DALtB,gEAAU;AACTgD,gBAAQ,EAAE,aADD;AAETC,gBAAQ,EAAR,qEAFS;;AAAA,OAAV,CAKsB,E,+EAOE,0D,EACE,sE,EACD,4D,EACD,kE,EACL,sD,EAXG,GAAVjD,UAAU,CAAV","file":"sign-up-sign-up-module-es5.js","sourcesContent":["import {FormGroup} from '@angular/forms'\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n    const control = formGroup.controls[controlName]\n    const matchingControl = formGroup.controls[matchingControlName]\n\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      // return if another validator has already found an error on the matchingControl\n      return\n    }\n\n    // set error on matchingControl if validation fails\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({mustMatch: true})\n    } else {\n      matchingControl.setErrors(null)\n    }\n  }\n}\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\nimport {Routes, RouterModule} from '@angular/router'\n\nimport {IonicModule} from '@ionic/angular'\n\nimport {SignUpPage} from './sign-up.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignUpPage,\n  },\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [SignUpPage],\n  providers: [],\n})\nexport class SignUpPageModule {}\n","export default \"<ion-content>\\n  <ion-grid class=\\\"ion-padding h-100\\\">\\n    <ion-row class=\\\"h-100 auth-form ion-align-items-center\\\">\\n      <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\n          <!-- <ion-col sizeXs=\\\"4\\\" sizeSm=\\\"4\\\" sizeLg=\\\"2\\\" sizeXl=\\\"1\\\" sizeMd=\\\"2\\\" class=\\\"ion-padding ion-align-self-center\\\">\\n            <img src=\\\"/assets/images/logo.png\\\">\\n          </ion-col> -->\\n          <ion-col size-xs=\\\"8\\\" size-sm=\\\"8\\\" size-lg=\\\"4\\\" size-md=\\\"4\\\" size-xl=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n            <img src=\\\"../../assets/images/Speaky-Peaky-Logo.png\\\" />\\n          </ion-col>\\n        </ion-row>\\n        <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"signUp()\\\">\\n          <ion-row class=\\\"ion-justify-content-center\\\">\\n            <ion-col class=\\\"ion-align-self-center\\\" sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeLg=\\\"5\\\" sizeXl=\\\"4\\\" sizeMd=\\\"6\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  <ion-item\\n                    mode=\\\"ios\\\"\\n                    class=\\\"auth-inputs ion-no-padding\\\"\\n                    [class.invalid]=\\\"!f.fullName.valid && (f.fullName.touched || f.fullName.dirty || isSubmitted)\\\"\\n                  >\\n                    <ion-label position=\\\"floating\\\">Name</ion-label>\\n                    <ion-input type=\\\"text\\\" formControlName=\\\"fullName\\\" required></ion-input>\\n                  </ion-item>\\n                  <ion-text\\n                    color=\\\"danger\\\"\\n                    *ngIf=\\\"\\n                      !f.fullName.valid && (f.fullName.touched || f.fullName.dirty || isSubmitted) && f.fullName.errors\\n                    \\\"\\n                  >\\n                    <small *ngIf=\\\"f.fullName.errors.required\\\">Name is required</small>\\n                  </ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  <ion-item\\n                    mode=\\\"ios\\\"\\n                    class=\\\"auth-inputs ion-no-padding\\\"\\n                    [class.invalid]=\\\"!f.email.valid && (f.email.touched || f.email.dirty || isSubmitted)\\\"\\n                  >\\n                    <ion-label position=\\\"floating\\\">Email</ion-label>\\n                    <ion-input\\n                      email\\n                      (ionBlur)=\\\"trimEmail($event, 'email')\\\"\\n                      formControlName=\\\"email\\\"\\n                      pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n                      required\\n                    ></ion-input>\\n                  </ion-item>\\n                  <ion-text\\n                    color=\\\"danger\\\"\\n                    *ngIf=\\\"!f.email.valid && (f.email.touched || f.email.dirty || isSubmitted) && f.email.errors\\\"\\n                  >\\n                    <small *ngIf=\\\"f.email.errors.required\\\">Email is required</small>\\n                    <small *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</small>\\n                  </ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  <ion-item\\n                    mode=\\\"ios\\\"\\n                    class=\\\"auth-inputs ion-no-padding\\\"\\n                    [class.invalid]=\\\"\\n                      !f.confirmEmail.valid && (f.confirmEmail.touched || f.confirmEmail.dirty || isSubmitted)\\n                    \\\"\\n                  >\\n                    <ion-label position=\\\"floating\\\">Confirm Email</ion-label>\\n                    <ion-input\\n                      email\\n                      (ionBlur)=\\\"trimEmail($event, 'confirmEmail')\\\"\\n                      formControlName=\\\"confirmEmail\\\"\\n                      pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n                      required\\n                    ></ion-input>\\n                  </ion-item>\\n\\n                  <ion-text\\n                    color=\\\"danger\\\"\\n                    *ngIf=\\\"\\n                      !f.confirmEmail.valid &&\\n                      (f.confirmEmail.touched || f.confirmEmail.dirty || isSubmitted) &&\\n                      f.confirmEmail.errors\\n                    \\\"\\n                  >\\n                    <small *ngIf=\\\"f.confirmEmail.errors.mustMatch\\\">Confirm email must match</small>\\n                    <small *ngIf=\\\"f.confirmEmail.errors.required\\\">Confirm email is required</small>\\n                    <small *ngIf=\\\"f.confirmEmail.errors.email\\\">Confirm email must be a valid email address</small>\\n                  </ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row class=\\\"ion-margin-bottom\\\">\\n                <ion-col size=\\\"12\\\">\\n                  <ion-item\\n                    mode=\\\"ios\\\"\\n                    class=\\\"auth-inputs ion-no-padding\\\"\\n                    [class.invalid]=\\\"!f.password.valid && (f.password.touched || f.password.dirty || isSubmitted)\\\"\\n                  >\\n                    <ion-label position=\\\"floating\\\">Password</ion-label>\\n                    <ion-input [type]=\\\"!showPass ? 'password' : 'text'\\\" formControlName=\\\"password\\\" required>\\n                    </ion-input>\\n                    <ion-icon\\n                      *ngIf=\\\"showPass === false; else viewPassword\\\"\\n                      slot=\\\"end\\\"\\n                      class=\\\"pwd-btn\\\"\\n                      name=\\\"eye-off\\\"\\n                      (click)=\\\"showPassword()\\\"\\n                    ></ion-icon>\\n                    <ng-template #viewPassword>\\n                      <ion-icon class=\\\"pwd-btn\\\" slot=\\\"end\\\" name=\\\"eye\\\" (click)=\\\"showPassword()\\\"></ion-icon>\\n                    </ng-template>\\n                  </ion-item>\\n                  <ion-text color=\\\"danger\\\" *ngIf=\\\"!f.password.valid && (f.password.dirty || isSubmitted)\\\">\\n                    <small>Please enter a password.</small>\\n                  </ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row class=\\\"termsOfUse\\\">\\n                <ion-col size=\\\"12\\\">\\n                  <ion-checkbox color=\\\"danger\\\" mode=\\\"md\\\" formControlName=\\\"termsOfUse\\\" required> </ion-checkbox>\\n                  <ion-label>\\n                    <small\\n                      >I agree to the\\n                      <a class=\\\"c-orange\\\" href=\\\"https://www.newsite.speakypeaky.com/terms-and-conditions/\\\" target=\\\"_blank\\\">\\n                        Terms of Use.\\n                      </a>\\n                    </small>\\n                  </ion-label>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row class=\\\"termsOfUse\\\">\\n                <ion-col size=\\\"12\\\">\\n                  <ion-checkbox color=\\\"danger\\\" mode=\\\"md\\\" formControlName=\\\"privacyPolicy\\\" required> </ion-checkbox>\\n\\n                  <ion-label>\\n                    <small\\n                      >I agree to the\\n                      <a class=\\\"c-orange\\\" href=\\\"https://www.newsite.speakypeaky.com/privacypolicy/\\\" target=\\\"_blank\\\">\\n                        Privacy Policy.\\n                      </a>\\n                    </small>\\n                  </ion-label>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row class=\\\"ion-margin-top\\\">\\n                <ion-col size=\\\"12\\\">\\n                  <ion-button mode=\\\"ios\\\" color=\\\"danger\\\" shape=\\\"round\\\" expand=\\\"block\\\" type=\\\"submit\\\">\\n                    <strong>SIGN UP</strong>\\n                  </ion-button>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  <p class=\\\"ion-text-center ion-no-margin\\\">\\n                    Already have an account?\\n                    <a class=\\\"c-orange\\\" [routerLink]=\\\"['/login']\\\" routerLinkActive=\\\"router-link-active\\\">\\n                      Login\\n                    </a>\\n                    here.\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-col>\\n          </ion-row>\\n        </form>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \"ion-checkbox {\\n  margin-right: 16px;\\n  vertical-align: middle;\\n}\\n\\n.termsOfUse {\\n  font-size: 18px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NpZ24tdXAucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUNBO0VBQ0UsZUFBQTtBQUVGIiwiZmlsZSI6InNpZ24tdXAucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNoZWNrYm94IHtcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuLnRlcm1zT2ZVc2Uge1xuICBmb250LXNpemU6IDE4cHg7XG59XG4iXX0= */\";","import {AuthService} from './../services/auth.service'\nimport {Component, OnInit} from '@angular/core'\nimport {FormGroup, FormBuilder, Validators, AbstractControl} from '@angular/forms'\nimport {Router} from '@angular/router'\nimport {SharedService} from '../services/shared.service'\nimport {NavController} from '@ionic/angular'\nimport {MustMatch} from '../_helpers/must-match.validator'\nimport {BehaviorSubject} from 'rxjs'\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.page.html',\n  styleUrls: ['./sign-up.page.scss'],\n})\nexport class SignUpPage implements OnInit {\n  signUpForm: FormGroup\n  isSubmitted = false\n  type = 'password'\n  showPass = false\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private sharedService: SharedService,\n    public navController: NavController,\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.sharedService.gaTrackView('SignUpScreen')\n  }\n\n  ngOnInit() {\n    this.signUpForm = this.formBuilder.group(\n      {\n        email: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.pattern(\n              '^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$',\n            ),\n          ]),\n        ],\n        confirmEmail: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.pattern(\n              '^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$',\n            ),\n          ]),\n        ],\n        password: ['', Validators.required],\n        fullName: ['', Validators.required],\n        termsOfUse: [false, Validators.required],\n        privacyPolicy: [false, Validators.required],\n      },\n      {\n        validator: MustMatch('email', 'confirmEmail'),\n      },\n    )\n  }\n\n  get f() {\n    return this.signUpForm.controls\n  }\n\n  trimEmail(event, type) {\n    if (type === 'email') {\n      this.signUpForm.patchValue({\n        email: event.target.value.trim(),\n      })\n    } else {\n      this.signUpForm.patchValue({\n        confirmEmail: event.target.value.trim(),\n      })\n    }\n  }\n\n  showPassword() {\n    this.showPass = !this.showPass\n\n    if (this.showPass) {\n      this.type = 'text'\n    } else {\n      this.type = 'password'\n    }\n  }\n\n  async signUp() {\n    this.sharedService.gaTrackEvent('SignUpButton', 'SignUpScreen')\n    this.isSubmitted = true\n\n    if (this.signUpForm.invalid) {\n      return\n    }\n\n    if (!this.signUpForm.value.termsOfUse) {\n      this.sharedService.presentToast(\n        'You must agree the Terms of Use and The Privacy Policy to sign up.',\n      )\n      return\n    }\n\n    if (!this.signUpForm.value.privacyPolicy) {\n      this.sharedService.presentToast(\n        'You must agree the Terms of Use and The Privacy Policy to sign up.',\n      )\n      return\n    }\n\n    this.sharedService.presentLoader('Please wait...')\n\n    const user = this.signUpForm.value\n    user.email = this.signUpForm.value.email.trim()\n    user.fullName = this.signUpForm.value.fullName.trim()\n    user.loginType = 'Email'\n\n    this.sharedService.removeNativeStorage('reminder')\n    this.sharedService.setNativeStorage('isHelpModeDone', false)\n    this.sharedService.setNativeStorage('isHelpScreenForDictationStepDone', false)\n    this.sharedService.setNativeStorage('isHelpScreenForReviewStepDone', false)\n    this.sharedService.setNativeStorage('isHelpScreenForPracticeStepDone', false)\n    this.sharedService.setNativeStorage('isTodayLessonHelpModeDone', false)\n    this.sharedService.setNativeStorage('isReviewHelpModeDone', false)\n\n    try {\n      const res = await this.authService.signUp(user).toPromise()\n\n      if (res) {\n        const loginRes = await this.authService\n          .login({\n            email: user.email,\n            password: user.password,\n            loginType: user.loginType,\n          })\n          .toPromise()\n\n        if (loginRes.token) {\n          await this.sharedService.setNativeStorage('token', loginRes.token)\n          this.authService.token$ = new BehaviorSubject(loginRes.token)\n          this.authService.authSubject.next(true)\n          this.navController.setDirection('root')\n          this.router.navigate(['/on-boarding-level'])\n        }\n      }\n    } catch (err) {\n      // console.error(err)\n      this.sharedService.presentAlert('Alert', err.error)\n    }\n\n    this.sharedService.dismissLoader()\n  }\n}\n"]}