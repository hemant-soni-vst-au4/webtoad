{"version":3,"sources":["webpack:///src/reactapp/useStore.tsx","webpack:///src/reactapp/apollo-client.ts","webpack:///fs (ignored)","webpack:///src/reactapp/types-and-hooks.tsx","webpack:///src/environments/environment.ts","webpack:///src/app/services/on-boarding.service.ts","webpack:///src/app/components/channel-io-mobile/channel-io-mobile.component.scss","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/subscription.service.ts","webpack:///node_modules/@ionic/pwa-elements/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/components/channel-io-mobile/channel-io-mobile.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///node_modules/@ionic/angular/node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/services/auth.service.ts","webpack:///src/reactapp/typePolicies.ts","webpack:///src/app/services/lessons.service.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/components/channel-io-mobile/channel-io-mobile.component.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/components/channel-io-mobile/channel-io-mobile.component.html","webpack:///src/app/services/shared.service.ts"],"names":["useStore","set","deviceInfo","client","navController","platform","sharedService","route","profile","setProfile","useProfile","store","cachePolicy","NO_CACHE","cacheLife","onNewData","curData","newData","data","get","loading","error","cache","refetch","Storage","getNativeStorage","key","ret","value","JSON","parse","errorLink","graphQLErrors","networkError","map","message","locations","path","console","log","httpLink","uri","GRAPHQL_URL","authLink","_","headers","token","authorization","typePolicies","link","typeDefs","defaultOptions","LevelName","LessonFieldsFragmentDoc","DashboardLessonFieldsFragmentDoc","GetProfileDocument","useGetProfileQuery","baseOptions","options","useGetProfileLazyQuery","PopularLessonsDocument","usePopularLessonsQuery","usePopularLessonsLazyQuery","MyCoursesDocument","useMyCoursesQuery","useMyCoursesLazyQuery","GetDashboardDocument","useGetDashboardQuery","useGetDashboardLazyQuery","GetDashboardDraftLessonsDocument","useGetDashboardDraftLessonsQuery","useGetDashboardDraftLessonsLazyQuery","GetLessonDeatilDocument","useGetLessonDeatilQuery","useGetLessonDeatilLazyQuery","SetLessonSavedDocument","useSetLessonSavedMutation","SetLessonCompletedDocument","useSetLessonCompletedMutation","GetCourseDocument","useGetCourseQuery","useGetCourseLazyQuery","AddToMyLessonDocument","useAddToMyLessonMutation","SetNoteDocument","useSetNoteMutation","ReportLessonIssueDocument","useReportLessonIssueMutation","SearchDictionaryDocument","useSearchDictionaryQuery","useSearchDictionaryLazyQuery","GetDictationDocument","useGetDictationQuery","useGetDictationLazyQuery","GetRecordsDocument","useGetRecordsQuery","useGetRecordsLazyQuery","GetNotesDocument","useGetNotesQuery","useGetNotesLazyQuery","MoreNotesDocument","useMoreNotesQuery","useMoreNotesLazyQuery","DeleteNoteDocument","useDeleteNoteMutation","GerReviewCompletedLessonsDocument","useGerReviewCompletedLessonsQuery","useGerReviewCompletedLessonsLazyQuery","UploadProfilePictureDocument","useUploadProfilePictureMutation","GetUserProgressDocument","useGetUserProgressQuery","useGetUserProgressLazyQuery","GetLevelsDocument","useGetLevelsQuery","useGetLevelsLazyQuery","SetLevelDocument","useSetLevelMutation","GetUserGuideDocument","useGetUserGuideQuery","useGetUserGuideLazyQuery","environment","production","API_URL","accessKeyId","secretAccessKey","region","bucket","assetBaseUrl","validatorURL","stripePublicKey","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","OnBoardingService","apiService","post","noCache","self","req","pipe","e","profileCache","timestamp","Date","email","subTitleLanguageId","ApiService","router","httpClient","url","accesstoken","err","presentAlert","status","removeNativeStorage","navigate","providedIn","SubscriptionService","customerId","subscriptionId","webpackAsyncContext","__webpack_require__","o","Promise","resolve","then","Error","code","ids","id","keys","webpackAsyncContextKeys","Object","module","exports","ChannelIoMobileModule","imports","declarations","schemas","SplashScreen","StatusBar","App","Device","AppComponent","authService","modalCtrl","alertController","onBoardingService","swUpdate","swPush","lastTimeBackPress","timePeriodToExit","show","showDuration","autoHide","getDeviceInfo","info","setState","document","location","hostname","protocol","window","addEventListener","preventDefault","deferredPrompt","addToHome","initializeApp","backButton","subscribe","handleBackButton","hide","getTop","element","dismiss","routerOutlet","canGoBack","pop","getTime","isEnabled","available","confirm","reload","notificationClicks","action","notification","create","header","buttons","text","role","handler","expires","open","alert","present","updateServiceWorker","isApp","setStyle","style","Dark","isMobileWeb","suggestDownload","getUserProfile","navigateRoot","authSubject","next","isOnBoarding","event","matchMedia","matches","undefined","prompt","userChoice","choiceResult","outcome","toPromise","selector","template","AppModule","forRoot","register","enabled","providers","provide","useClass","bootstrap","all","slice","AuthService","user","postWithoutToken","localTypeDefs","currentLessonIdVar","dictationsVar","recordsVar","Query","fields","currentLessonId","read","variables","dictation","sceneIdx","lessonId","records","moreNotes","merge","existing","incoming","readField","args","nodes","cursor","forEach","node","idx","hasMore","length","size","values","moreCompletedLessons","Mutation","updateDictation","LessonProgress","datetimes","d","User","Lesson","videoLevelLabel","level","levelLabel","Course","levelMap","UpperBeginner","Elementary","Intermediate","Advanced","LessonsService","weekdays","page","today","getDay","payload","day","videoLevel","userLevelName","getSubLessonDetails","isDraft","type","entry","res","AuthGuard","state","isLoggedIn","setDirection","routes","loadChildren","m","SignUpPageModule","LoginPageModule","DashboardPageModule","canActivate","OnBoardingPageModule","ForgotPasswordPageModule","OnBoardingLevelPageModule","OnBoardingLanguagePageModule","OnBoardingReminderPageModule","LessonDetailsPageModule","pathMatch","LessonStepsPageModule","LessonCompletePageModule","StripeManagePageModule","StripePaymentPageModule","PopularLessonsPageModule","NewUploadsPageModule","DraftLessonsPageModule","SavedLessonsPageModule","SearchListPageModule","MyCoursesPageModule","CourseDetailsPageModule","SettingPageModule","AccountPageModule","EditEmailPageModule","EditNamePageModule","EditPasswordPageModule","ReminderPageModule","DeleteAccountPageModule","SupportPageModule","LanguagePageModule","ShareAppPageModule","AppInfoPageModule","SubscriptionPageModule","SubscriptionPlansPageModule","FaqsPageModule","EmailTheTeamPageModule","redirectTo","AppRoutingModule","preloadingStrategy","ChannelIoMobileComponent","showChat","hasTabbar","paths","events","val","is","some","startsWith","href","bootstrapModule","webpackEmptyAsyncContext","Toast","ERR_TOKEN_EXP","SharedService","loadingController","toastController","actionSheetController","ga","video","storageCache","alertShow","rnWebview","getInfo","includes","operatingSystem","isDesktop","title","startTrackerWithId","trackView","category","trackEvent","loadingPromise","duration","toast","postMessage","stringify","method","remove","subHeader","myArr","prop","filter","obj","pos","arr","mapObj","indexOf","subTitle","meaning","split","s","trim","rs","newElem","oldElem","old","word","i","oldText","toLowerCase","replace","newText","html","steps","onClose","delay","setTimeout","driver","allowClose","overlayClickNext","doneBtnText","closeBtnText","nextBtnText","prevBtnText","keyboardControl","onHighlightStarted","Element","getNode","scrollIntoView","onDeselected","isActivated","defineSteps","start"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {ActivatedRoute} from '@angular/router'\nimport {NavController, Platform} from '@ionic/angular'\nimport React from 'react'\nimport {MyDeviceInfo, SharedService} from 'src/app/services/shared.service'\nimport useFetch, {CachePolicies} from 'use-http'\nimport create from 'zustand'\nimport {client} from './apollo-client'\nimport {ApolloClient, NormalizedCacheObject} from '@apollo/client'\n\ntype State = {\n  client: ApolloClient<NormalizedCacheObject>\n  deviceInfo: MyDeviceInfo | null\n  navController: NavController | null\n  route: ActivatedRoute | null\n  platform: Platform | null\n  sharedService: SharedService | null\n  profile: any\n  setProfile: (profile: any) => void\n  // bears: number\n  // increase: (by: number) => void\n}\n\nexport const useStore = create<State>((set) => ({\n  // bears: 0,\n  deviceInfo: null,\n  client: client,\n  navController: null,\n  platform: null,\n  sharedService: null,\n  route: null,\n  profile: null,\n  setProfile: (profile: any) => set({profile}),\n\n  // increase: (by) => set((state) => ({bears: state.bears + by})),\n}))\n\nexport function useProfile() {\n  const profile = useStore((store) => store.profile)\n  const setProfile = useStore((store) => store.setProfile)\n\n  const {get, loading, error, cache} = useFetch(\n    '/user/get-profile',\n    {\n      cachePolicy: CachePolicies.NO_CACHE,\n      cacheLife: 1000,\n      onNewData: (curData, newData) => {\n        setProfile(newData?.data)\n      },\n    },\n    [],\n  )\n  function refetch() {\n    get()\n  }\n  // const profile = data?.data\n\n  return {profile, loading, error, get, cache, refetch}\n}\n","import {\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n  gql,\n  from,\n  makeVar,\n  TypePolicies,\n} from '@apollo/client'\nimport {setContext} from '@apollo/client/link/context'\nimport {onError} from '@apollo/client/link/error'\nimport {Plugins} from '@capacitor/core'\nimport {environment} from 'src/environments/environment'\n\nimport {localTypeDefs, typePolicies} from './typePolicies'\nexport {currentLessonIdVar, dictationsVar, recordsVar} from './typePolicies'\n\nconst {Storage} = Plugins\n\nasync function getNativeStorage(key) {\n  const ret = await Storage.get({key})\n  let value = JSON.parse(ret.value)\n  if (!value) {\n    value = {data: null}\n  }\n  return value\n}\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({message, locations, path}) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      ),\n    )\n\n  if (networkError) console.log(`[Network error]: ${networkError}`)\n})\n\nconst httpLink = createHttpLink({\n  // uri: 'http://localhost:4044/',\n  // uri: 'http://192.168.0.3:4044/',\n  uri: environment.GRAPHQL_URL,\n\n  //   uri: 'https://gql-dev.speakypeaky.com/',\n})\n\nconst authLink = setContext(async (_, {headers}) => {\n  // get the authentication token from local storage if it exists\n  const token = await getNativeStorage('token')\n\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token?.data ? token.data : '',\n    },\n  }\n})\n\nconst cache = new InMemoryCache({\n  typePolicies: typePolicies,\n})\n\nexport const client = new ApolloClient({\n  link: from([authLink, errorLink, httpLink]),\n  cache,\n  typeDefs: localTypeDefs,\n  // queryDeduplication: false,\n})\n","/* (ignored) */","import {gql} from '@apollo/client'\nimport * as Apollo from '@apollo/client'\nexport type Maybe<T> = T | null\nexport type Exact<T extends {[key: string]: unknown}> = {[K in keyof T]: T[K]}\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> &\n  {[SubKey in K]?: Maybe<T[SubKey]>}\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> &\n  {[SubKey in K]: Maybe<T[SubKey]>}\nconst defaultOptions = {}\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string\n  String: string\n  Boolean: boolean\n  Int: number\n  Float: number\n  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */\n  DateTime: any\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any\n}\n\nexport type AudioRecordResult = {\n  __typename?: 'AudioRecordResult'\n  audioAsBase64?: Maybe<Scalars['String']>\n  audioUrl?: Maybe<Scalars['String']>\n  sampleRate?: Maybe<Scalars['Int']>\n  stt?: Maybe<SpeechToTextResult>\n}\n\nexport type Course = {\n  __typename?: 'Course'\n  _id: Scalars['ID']\n  createdAt: Scalars['String']\n  introduction: Scalars['String']\n  isSingle: Scalars['String']\n  lessonCount: Scalars['Int']\n  lessonTopicId: Scalars['String']\n  lessons: Array<Lesson>\n  subLessons: Array<Scalars['JSON']>\n  tags: Scalars['String']\n  title?: Maybe<Scalars['String']>\n  topicDetails: Scalars['JSON']\n  topicTitle: Scalars['String']\n  updatedAt: Scalars['String']\n  videoLevel: LevelName\n  videoLevelLabel?: Maybe<Scalars['String']>\n  youtubeId: Scalars['String']\n}\n\nexport type Cred = {\n  userPlatform: Scalars['String']\n  email: Scalars['String']\n  password: Scalars['String']\n}\n\nexport type DictionaryResult = {\n  __typename?: 'DictionaryResult'\n  entry: Scalars['String']\n  meaning: DictionaryResultMeaning\n  ipa: Scalars['String']\n}\n\nexport type DictionaryResultMeaning = {\n  __typename?: 'DictionaryResultMeaning'\n  korean: Scalars['String']\n  noun: Scalars['String']\n  verb: Scalars['String']\n  adverb: Scalars['String']\n  adjective: Scalars['String']\n}\n\nexport type Lesson = {\n  __typename?: 'Lesson'\n  _id: Scalars['ID']\n  completedAt?: Maybe<Scalars['DateTime']>\n  course?: Maybe<Course>\n  courseId: Scalars['String']\n  createdAt: Scalars['String']\n  day?: Maybe<Scalars['String']>\n  endTime: Scalars['String']\n  introduction?: Maybe<Scalars['String']>\n  isCompleted?: Maybe<Scalars['Boolean']>\n  isDraft: Scalars['Boolean']\n  isMy?: Maybe<Scalars['Boolean']>\n  isSaved?: Maybe<Scalars['Boolean']>\n  isSingle?: Maybe<Scalars['String']>\n  lessonId: Scalars['String']\n  lessonName: Scalars['String']\n  lessonTopicId: Scalars['String']\n  phrases?: Maybe<Array<Phrase>>\n  savedCreatedAt?: Maybe<Scalars['String']>\n  scenes: Array<Scene>\n  /** @deprecated don't use anymore */\n  srtFile?: Maybe<Scalars['String']>\n  startTime: Scalars['String']\n  subCreatedAt: Scalars['String']\n  /** @deprecated wrong naming */\n  subLessonId: Scalars['String']\n  subUpdatedAt: Scalars['String']\n  tags?: Maybe<Scalars['String']>\n  title?: Maybe<Scalars['String']>\n  updatedAt: Scalars['String']\n  videoLevel?: Maybe<LevelName>\n  videoLevelLabel?: Maybe<Scalars['String']>\n  videoType?: Maybe<Scalars['String']>\n  youtubeId: Scalars['String']\n}\n\nexport type LessonCursorPage = {\n  __typename?: 'LessonCursorPage'\n  cursor?: Maybe<Scalars['String']>\n  hasMore?: Maybe<Scalars['Boolean']>\n  nodes: Array<Lesson>\n}\n\nexport type LessonPage = {\n  __typename?: 'LessonPage'\n  total: Scalars['Float']\n  totalLessons: Scalars['Float']\n  data: Array<Lesson>\n}\n\nexport type LessonProgress = {\n  __typename?: 'LessonProgress'\n  totalCount: Scalars['Int']\n  datetimes: Array<Scalars['DateTime']>\n  counts: Array<LessonProgressCount>\n}\n\nexport type LessonProgressCount = {\n  __typename?: 'LessonProgressCount'\n  type: Scalars['String']\n  count: Scalars['Int']\n  datetimes: Array<Scalars['DateTime']>\n}\n\nexport type LessonReport = {\n  message: Scalars['String']\n  scene: Scalars['Float']\n  step: Scalars['String']\n  lessonName: Scalars['String']\n  userPlatform: Scalars['String']\n}\n\nexport type Level = {\n  __typename?: 'Level'\n  _id: Scalars['ID']\n  name: Scalars['String']\n}\n\nexport enum LevelName {\n  UpperBeginner = 'UpperBeginner',\n  Intermediate = 'Intermediate',\n  Advanced = 'Advanced',\n}\n\nexport type Meaning = {\n  __typename?: 'Meaning'\n  lang: Scalars['String']\n  meaning: Scalars['String']\n}\n\nexport type Mutation = {\n  __typename?: 'Mutation'\n  addToMyLesson?: Maybe<Lesson>\n  /** return ID */\n  deleteNote: Scalars['String']\n  login?: Maybe<Scalars['String']>\n  reportLessonIssue?: Maybe<Scalars['Boolean']>\n  setLessonCompleted?: Maybe<Lesson>\n  setLessonSaved?: Maybe<Lesson>\n  setLevel: User\n  setNote?: Maybe<Scalars['String']>\n  updateDictation?: Maybe<Scalars['String']>\n  uploadProfilePicture: User\n}\n\nexport type MutationAddToMyLessonArgs = {\n  lessonId: Scalars['String']\n}\n\nexport type MutationDeleteNoteArgs = {\n  id: Scalars['String']\n}\n\nexport type MutationLoginArgs = {\n  cred: Cred\n}\n\nexport type MutationReportLessonIssueArgs = {\n  report: LessonReport\n}\n\nexport type MutationSetLessonCompletedArgs = {\n  lessonId: Scalars['String']\n}\n\nexport type MutationSetLessonSavedArgs = {\n  isSave: Scalars['Boolean']\n  lessonId: Scalars['String']\n}\n\nexport type MutationSetLevelArgs = {\n  levelName: LevelName\n}\n\nexport type MutationSetNoteArgs = {\n  wordData: WordData\n}\n\nexport type MutationUpdateDictationArgs = {\n  id: Scalars['ID']\n}\n\nexport type MutationUploadProfilePictureArgs = {\n  imageBase64: Scalars['String']\n}\n\nexport type NativeLanguage = {\n  __typename?: 'NativeLanguage'\n  _id: Scalars['ID']\n  languageKey: Scalars['String']\n  languageName: Scalars['String']\n}\n\nexport type Phrase = {\n  __typename?: 'Phrase'\n  word: Scalars['String']\n  meaning: Scalars['String']\n  meanings: Array<Meaning>\n}\n\nexport type Query = {\n  __typename?: 'Query'\n  completedLessons: Array<Lesson>\n  course?: Maybe<Course>\n  currentLessonId?: Maybe<Scalars['String']>\n  dictation?: Maybe<Scalars['String']>\n  dictionary?: Maybe<DictionaryResult>\n  draftLessons?: Maybe<LessonPage>\n  getNotes?: Maybe<WordNotePage>\n  healthCheck?: Maybe<Scalars['String']>\n  lesson?: Maybe<Lesson>\n  levels?: Maybe<Array<Level>>\n  moreCompletedLessons: LessonCursorPage\n  moreNotes?: Maybe<WordNoteCursorPage>\n  myCourses?: Maybe<Array<Course>>\n  newUploadLessons?: Maybe<LessonPage>\n  popularLessons?: Maybe<LessonPage>\n  profile?: Maybe<User>\n  progressState: LessonProgress\n  records?: Maybe<Array<Maybe<AudioRecordResult>>>\n  savedLessons?: Maybe<LessonPage>\n  subscription?: Maybe<Subscription>\n  todayLesson?: Maybe<Lesson>\n  user?: Maybe<User>\n  userGuide: UserGuide\n}\n\nexport type QueryCompletedLessonsArgs = {\n  end?: Maybe<Scalars['DateTime']>\n  start?: Maybe<Scalars['DateTime']>\n}\n\nexport type QueryCourseArgs = {\n  id: Scalars['String']\n}\n\nexport type QueryDictationArgs = {\n  sceneIdx: Scalars['Int']\n}\n\nexport type QueryDictionaryArgs = {\n  search: Scalars['String']\n}\n\nexport type QueryDraftLessonsArgs = {\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryGetNotesArgs = {\n  size?: Maybe<Scalars['Int']>\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryLessonArgs = {\n  id: Scalars['String']\n}\n\nexport type QueryMoreCompletedLessonsArgs = {\n  size: Scalars['Int']\n  cursor?: Maybe<Scalars['String']>\n}\n\nexport type QueryMoreNotesArgs = {\n  size: Scalars['Int']\n  cursor?: Maybe<Scalars['String']>\n}\n\nexport type QueryMyCoursesArgs = {\n  size?: Maybe<Scalars['Int']>\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryNewUploadLessonsArgs = {\n  videoLevel: LevelName\n  day: Scalars['String']\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryPopularLessonsArgs = {\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryRecordsArgs = {\n  sceneIdx: Scalars['Int']\n}\n\nexport type QuerySavedLessonsArgs = {\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryTodayLessonArgs = {\n  day: Scalars['String']\n}\n\nexport type QueryUserArgs = {\n  id: Scalars['String']\n}\n\nexport type Scene = {\n  __typename?: 'Scene'\n  start: Scalars['Float']\n  end: Scalars['Float']\n  langs: Scalars['JSON']\n}\n\nexport type SpeechToTextResult = {\n  __typename?: 'SpeechToTextResult'\n  error?: Maybe<Scalars['Boolean']>\n  confidence?: Maybe<Scalars['Float']>\n  transcript?: Maybe<Scalars['String']>\n  percent?: Maybe<Scalars['Float']>\n}\n\nexport type Subscription = {\n  __typename?: 'Subscription'\n  type: Scalars['String']\n}\n\nexport type User = {\n  __typename?: 'User'\n  _id: Scalars['ID']\n  status?: Maybe<Scalars['String']>\n  currentPackage?: Maybe<Scalars['String']>\n  subscriptionType?: Maybe<Scalars['String']>\n  completedLesson?: Maybe<Scalars['Int']>\n  subscriptionLesson?: Maybe<Scalars['Int']>\n  trialLessonLimit?: Maybe<Scalars['Int']>\n  extraSubscriptionLesson?: Maybe<Scalars['Int']>\n  isLevel?: Maybe<Scalars['Boolean']>\n  isAdmin?: Maybe<Scalars['Boolean']>\n  signupType?: Maybe<Scalars['String']>\n  fullName?: Maybe<Scalars['String']>\n  email?: Maybe<Scalars['String']>\n  platform?: Maybe<Scalars['String']>\n  userLevelId?: Maybe<Scalars['String']>\n  userLevelName?: Maybe<LevelName>\n  stripeSandBoxCustomerId?: Maybe<Scalars['String']>\n  stripeLiveCustomerId?: Maybe<Scalars['String']>\n  subscriptionProductId?: Maybe<Scalars['String']>\n  androidPurchaseToken?: Maybe<Scalars['String']>\n  iOSPurchaseToken?: Maybe<Scalars['String']>\n  subTitleLanguage?: Maybe<Scalars['String']>\n  userSubscriptionStartDate?: Maybe<Scalars['String']>\n  userSubscriptionEndDate?: Maybe<Scalars['String']>\n  profilePic?: Maybe<Scalars['String']>\n  nativeLanguage?: Maybe<NativeLanguage>\n  isPasswordExists?: Maybe<Scalars['Boolean']>\n  total?: Maybe<Scalars['Float']>\n}\n\nexport type UserGuide = {\n  __typename?: 'UserGuide'\n  introduction: Scalars['String']\n  youtubeId: Scalars['String']\n}\n\nexport type WordData = {\n  word: Scalars['String']\n  meaning: Scalars['String']\n  kor: Scalars['String']\n  noun: Scalars['String']\n  verb: Scalars['String']\n  adv: Scalars['String']\n  adj: Scalars['String']\n}\n\nexport type WordNote = {\n  __typename?: 'WordNote'\n  _id: Scalars['ID']\n  userId: Scalars['String']\n  word: Scalars['String']\n  meaning: Scalars['String']\n  kor: Scalars['String']\n  noun: Scalars['String']\n  verb: Scalars['String']\n  adv: Scalars['String']\n  adj: Scalars['String']\n  createdAt: Scalars['DateTime']\n}\n\nexport type WordNoteCursorPage = {\n  __typename?: 'WordNoteCursorPage'\n  cursor?: Maybe<Scalars['String']>\n  hasMore?: Maybe<Scalars['Boolean']>\n  nodes: Array<WordNote>\n}\n\nexport type WordNotePage = {\n  __typename?: 'WordNotePage'\n  page: Scalars['Float']\n  size: Scalars['Float']\n  total: Scalars['Float']\n  totalPage: Scalars['Float']\n  data: Array<WordNote>\n}\n\nexport type GetProfileQueryVariables = Exact<{[key: string]: never}>\n\nexport type GetProfileQuery = {__typename?: 'Query'} & {\n  profile?: Maybe<\n    {__typename?: 'User'} & Pick<\n      User,\n      | '_id'\n      | 'status'\n      | 'completedLesson'\n      | 'subscriptionLesson'\n      | 'currentPackage'\n      | 'subscriptionType'\n      | 'trialLessonLimit'\n      | 'isLevel'\n      | 'isAdmin'\n      | 'signupType'\n      | 'fullName'\n      | 'email'\n      | 'platform'\n      | 'userLevelId'\n      | 'userLevelName'\n      | 'stripeSandBoxCustomerId'\n      | 'stripeLiveCustomerId'\n      | 'extraSubscriptionLesson'\n      | 'subscriptionProductId'\n      | 'subTitleLanguage'\n      | 'userSubscriptionStartDate'\n      | 'userSubscriptionEndDate'\n      | 'profilePic'\n      | 'total'\n    > & {\n        nativeLanguage?: Maybe<\n          {__typename?: 'NativeLanguage'} & Pick<\n            NativeLanguage,\n            '_id' | 'languageKey' | 'languageName'\n          >\n        >\n      }\n  >\n}\n\nexport type PopularLessonsQueryVariables = Exact<{[key: string]: never}>\n\nexport type PopularLessonsQuery = {__typename?: 'Query'} & {\n  popularLessons?: Maybe<\n    {__typename?: 'LessonPage'} & Pick<LessonPage, 'total' | 'totalLessons'> & {\n        data: Array<\n          {__typename?: 'Lesson'} & Pick<\n            Lesson,\n            | 'subLessonId'\n            | 'lessonName'\n            | 'srtFile'\n            | 'startTime'\n            | 'endTime'\n            | 'createdAt'\n            | 'updatedAt'\n            | 'lessonId'\n            | 'videoLevel'\n            | 'videoLevelLabel'\n            | 'youtubeId'\n            | 'title'\n            | 'introduction'\n            | 'tags'\n            | 'isSingle'\n            | 'day'\n            | 'savedCreatedAt'\n            | 'isCompleted'\n          >\n        >\n      }\n  >\n}\n\nexport type LessonFieldsFragment = {__typename?: 'Lesson'} & Pick<\n  Lesson,\n  | '_id'\n  | 'subLessonId'\n  | 'lessonName'\n  | 'srtFile'\n  | 'startTime'\n  | 'endTime'\n  | 'createdAt'\n  | 'updatedAt'\n  | 'lessonId'\n  | 'videoLevel'\n  | 'videoLevelLabel'\n  | 'videoType'\n  | 'youtubeId'\n  | 'title'\n  | 'introduction'\n  | 'tags'\n  | 'isSingle'\n  | 'day'\n  | 'savedCreatedAt'\n  | 'isCompleted'\n>\n\nexport type DashboardLessonFieldsFragment = {__typename?: 'Lesson'} & Pick<\n  Lesson,\n  '_id' | 'lessonName' | 'videoLevel' | 'videoLevelLabel' | 'videoType' | 'youtubeId'\n>\n\nexport type MyCoursesQueryVariables = Exact<{\n  page: Scalars['Int']\n}>\n\nexport type MyCoursesQuery = {__typename?: 'Query'} & {\n  myCourses?: Maybe<\n    Array<\n      {__typename?: 'Course'} & Pick<\n        Course,\n        | '_id'\n        | 'title'\n        | 'introduction'\n        | 'youtubeId'\n        | 'videoLevel'\n        | 'videoLevelLabel'\n        | 'topicTitle'\n        | 'lessonCount'\n      >\n    >\n  >\n}\n\nexport type GetDashboardQueryVariables = Exact<{\n  day: Scalars['String']\n  videoLevel: LevelName\n}>\n\nexport type GetDashboardQuery = {__typename?: 'Query'} & {\n  todayLesson?: Maybe<{__typename?: 'Lesson'} & DashboardLessonFieldsFragment>\n  popularLessons?: Maybe<\n    {__typename?: 'LessonPage'} & Pick<LessonPage, 'total' | 'totalLessons'> & {\n        data: Array<{__typename?: 'Lesson'} & DashboardLessonFieldsFragment>\n      }\n  >\n  savedLessons?: Maybe<\n    {__typename?: 'LessonPage'} & Pick<LessonPage, 'total' | 'totalLessons'> & {\n        data: Array<{__typename?: 'Lesson'} & DashboardLessonFieldsFragment>\n      }\n  >\n  myCourses?: Maybe<\n    Array<\n      {__typename?: 'Course'} & Pick<\n        Course,\n        | '_id'\n        | 'title'\n        | 'introduction'\n        | 'youtubeId'\n        | 'videoLevel'\n        | 'videoLevelLabel'\n        | 'topicTitle'\n        | 'lessonCount'\n      >\n    >\n  >\n  newUploadLessons?: Maybe<\n    {__typename?: 'LessonPage'} & Pick<LessonPage, 'total' | 'totalLessons'> & {\n        data: Array<{__typename?: 'Lesson'} & DashboardLessonFieldsFragment>\n      }\n  >\n}\n\nexport type GetDashboardDraftLessonsQueryVariables = Exact<{[key: string]: never}>\n\nexport type GetDashboardDraftLessonsQuery = {__typename?: 'Query'} & {\n  draftLessons?: Maybe<\n    {__typename?: 'LessonPage'} & Pick<LessonPage, 'total' | 'totalLessons'> & {\n        data: Array<{__typename?: 'Lesson'} & LessonFieldsFragment>\n      }\n  >\n}\n\nexport type GetLessonDeatilQueryVariables = Exact<{\n  id: Scalars['String']\n}>\n\nexport type GetLessonDeatilQuery = {__typename?: 'Query'} & Pick<\n  Query,\n  'currentLessonId'\n> & {\n    lesson?: Maybe<\n      {__typename?: 'Lesson'} & Pick<\n        Lesson,\n        | '_id'\n        | 'lessonId'\n        | 'courseId'\n        | 'youtubeId'\n        | 'lessonName'\n        | 'isSaved'\n        | 'isCompleted'\n        | 'title'\n        | 'tags'\n        | 'videoLevel'\n        | 'videoLevelLabel'\n        | 'introduction'\n        | 'isMy'\n      > & {\n          scenes: Array<{__typename?: 'Scene'} & Pick<Scene, 'start' | 'end' | 'langs'>>\n          phrases?: Maybe<\n            Array<\n              {__typename?: 'Phrase'} & Pick<Phrase, 'word' | 'meaning'> & {\n                  meanings: Array<\n                    {__typename?: 'Meaning'} & Pick<Meaning, 'lang' | 'meaning'>\n                  >\n                }\n            >\n          >\n        }\n    >\n  }\n\nexport type SetLessonSavedMutationVariables = Exact<{\n  id: Scalars['String']\n  isSave: Scalars['Boolean']\n}>\n\nexport type SetLessonSavedMutation = {__typename?: 'Mutation'} & {\n  setLessonSaved?: Maybe<{__typename?: 'Lesson'} & Pick<Lesson, '_id' | 'isSaved'>>\n}\n\nexport type SetLessonCompletedMutationVariables = Exact<{\n  lessonId: Scalars['String']\n}>\n\nexport type SetLessonCompletedMutation = {__typename?: 'Mutation'} & {\n  setLessonCompleted?: Maybe<\n    {__typename?: 'Lesson'} & Pick<Lesson, '_id' | 'isCompleted'>\n  >\n}\n\nexport type GetCourseQueryVariables = Exact<{\n  id: Scalars['String']\n}>\n\nexport type GetCourseQuery = {__typename?: 'Query'} & {\n  course?: Maybe<\n    {__typename?: 'Course'} & Pick<\n      Course,\n      | '_id'\n      | 'tags'\n      | 'title'\n      | 'introduction'\n      | 'topicTitle'\n      | 'videoLevel'\n      | 'videoLevelLabel'\n      | 'youtubeId'\n    > & {\n        lessons: Array<\n          {__typename?: 'Lesson'} & Pick<Lesson, '_id' | 'lessonName' | 'completedAt'> & {\n              scenes: Array<{__typename?: 'Scene'} & Pick<Scene, 'start' | 'end'>>\n            }\n        >\n      }\n  >\n}\n\nexport type AddToMyLessonMutationVariables = Exact<{\n  lessonId: Scalars['String']\n}>\n\nexport type AddToMyLessonMutation = {__typename?: 'Mutation'} & {\n  addToMyLesson?: Maybe<{__typename?: 'Lesson'} & Pick<Lesson, '_id' | 'isMy'>>\n}\n\nexport type SetNoteMutationVariables = Exact<{\n  wordData: WordData\n}>\n\nexport type SetNoteMutation = {__typename?: 'Mutation'} & Pick<Mutation, 'setNote'>\n\nexport type ReportLessonIssueMutationVariables = Exact<{\n  report: LessonReport\n}>\n\nexport type ReportLessonIssueMutation = {__typename?: 'Mutation'} & Pick<\n  Mutation,\n  'reportLessonIssue'\n>\n\nexport type SearchDictionaryQueryVariables = Exact<{\n  search: Scalars['String']\n}>\n\nexport type SearchDictionaryQuery = {__typename?: 'Query'} & {\n  dictionary?: Maybe<\n    {__typename?: 'DictionaryResult'} & Pick<DictionaryResult, 'entry' | 'ipa'> & {\n        meaning: {__typename?: 'DictionaryResultMeaning'} & Pick<\n          DictionaryResultMeaning,\n          'korean' | 'noun' | 'verb' | 'adverb' | 'adjective'\n        >\n      }\n  >\n}\n\nexport type GetDictationQueryVariables = Exact<{\n  sceneIdx: Scalars['Int']\n}>\n\nexport type GetDictationQuery = {__typename?: 'Query'} & Pick<Query, 'dictation'>\n\nexport type GetRecordsQueryVariables = Exact<{\n  sceneIdx: Scalars['Int']\n}>\n\nexport type GetRecordsQuery = {__typename?: 'Query'} & {\n  records?: Maybe<\n    Array<\n      Maybe<\n        {__typename?: 'AudioRecordResult'} & Pick<\n          AudioRecordResult,\n          'audioAsBase64' | 'audioUrl' | 'sampleRate'\n        > & {\n            stt?: Maybe<\n              {__typename?: 'SpeechToTextResult'} & Pick<\n                SpeechToTextResult,\n                'error' | 'confidence' | 'transcript' | 'percent'\n              >\n            >\n          }\n      >\n    >\n  >\n}\n\nexport type GetNotesQueryVariables = Exact<{\n  size: Scalars['Int']\n  page: Scalars['Int']\n}>\n\nexport type GetNotesQuery = {__typename?: 'Query'} & {\n  getNotes?: Maybe<\n    {__typename?: 'WordNotePage'} & Pick<\n      WordNotePage,\n      'page' | 'size' | 'total' | 'totalPage'\n    > & {\n        data: Array<\n          {__typename?: 'WordNote'} & Pick<WordNote, '_id' | 'word' | 'meaning'>\n        >\n      }\n  >\n}\n\nexport type MoreNotesQueryVariables = Exact<{\n  cursor?: Maybe<Scalars['String']>\n  size: Scalars['Int']\n}>\n\nexport type MoreNotesQuery = {__typename?: 'Query'} & {\n  moreNotes?: Maybe<\n    {__typename?: 'WordNoteCursorPage'} & Pick<\n      WordNoteCursorPage,\n      'cursor' | 'hasMore'\n    > & {\n        nodes: Array<\n          {__typename?: 'WordNote'} & Pick<\n            WordNote,\n            '_id' | 'word' | 'meaning' | 'kor' | 'noun' | 'verb' | 'adv' | 'adj'\n          >\n        >\n      }\n  >\n}\n\nexport type DeleteNoteMutationVariables = Exact<{\n  id: Scalars['String']\n}>\n\nexport type DeleteNoteMutation = {__typename?: 'Mutation'} & Pick<Mutation, 'deleteNote'>\n\nexport type GerReviewCompletedLessonsQueryVariables = Exact<{\n  cursor?: Maybe<Scalars['String']>\n  size: Scalars['Int']\n}>\n\nexport type GerReviewCompletedLessonsQuery = {__typename?: 'Query'} & {\n  moreCompletedLessons: {__typename?: 'LessonCursorPage'} & Pick<\n    LessonCursorPage,\n    'cursor' | 'hasMore'\n  > & {\n      nodes: Array<\n        {__typename?: 'Lesson'} & Pick<\n          Lesson,\n          | '_id'\n          | 'lessonName'\n          | 'completedAt'\n          | 'videoLevel'\n          | 'videoLevelLabel'\n          | 'videoType'\n          | 'youtubeId'\n        >\n      >\n    }\n}\n\nexport type UploadProfilePictureMutationVariables = Exact<{\n  imageBase64: Scalars['String']\n}>\n\nexport type UploadProfilePictureMutation = {__typename?: 'Mutation'} & {\n  uploadProfilePicture: {__typename?: 'User'} & Pick<User, '_id' | 'profilePic'>\n}\n\nexport type GetUserProgressQueryVariables = Exact<{[key: string]: never}>\n\nexport type GetUserProgressQuery = {__typename?: 'Query'} & {\n  progressState: {__typename?: 'LessonProgress'} & Pick<\n    LessonProgress,\n    'totalCount' | 'datetimes'\n  > & {\n      counts: Array<\n        {__typename?: 'LessonProgressCount'} & Pick<LessonProgressCount, 'type' | 'count'>\n      >\n    }\n}\n\nexport type GetLevelsQueryVariables = Exact<{[key: string]: never}>\n\nexport type GetLevelsQuery = {__typename?: 'Query'} & {\n  levels?: Maybe<Array<{__typename?: 'Level'} & Pick<Level, '_id' | 'name'>>>\n}\n\nexport type SetLevelMutationVariables = Exact<{\n  levelName: LevelName\n}>\n\nexport type SetLevelMutation = {__typename?: 'Mutation'} & {\n  setLevel: {__typename?: 'User'} & Pick<User, '_id' | 'userLevelId' | 'userLevelName'>\n}\n\nexport type GetUserGuideQueryVariables = Exact<{[key: string]: never}>\n\nexport type GetUserGuideQuery = {__typename?: 'Query'} & {\n  userGuide: {__typename?: 'UserGuide'} & Pick<UserGuide, 'introduction' | 'youtubeId'>\n}\n\nexport const LessonFieldsFragmentDoc = gql`\n  fragment LessonFields on Lesson {\n    _id\n    subLessonId\n    lessonName\n    srtFile\n    startTime\n    endTime\n    createdAt\n    updatedAt\n    lessonId\n    videoLevel\n    videoLevelLabel @client\n    videoType\n    youtubeId\n    title\n    introduction\n    tags\n    isSingle\n    day\n    savedCreatedAt\n    isCompleted\n  }\n`\nexport const DashboardLessonFieldsFragmentDoc = gql`\n  fragment DashboardLessonFields on Lesson {\n    _id\n    lessonName\n    videoLevel\n    videoLevelLabel @client\n    videoType\n    youtubeId\n  }\n`\nexport const GetProfileDocument = gql`\n  query getProfile {\n    profile {\n      _id\n      status\n      completedLesson\n      subscriptionLesson\n      currentPackage\n      subscriptionType\n      trialLessonLimit\n      isLevel\n      isAdmin\n      signupType\n      fullName\n      email\n      platform\n      userLevelId\n      userLevelName\n      stripeSandBoxCustomerId\n      stripeLiveCustomerId\n      extraSubscriptionLesson\n      subscriptionProductId\n      subTitleLanguage\n      userSubscriptionStartDate\n      userSubscriptionEndDate\n      profilePic\n      nativeLanguage {\n        _id\n        languageKey\n        languageName\n      }\n      total\n    }\n  }\n`\n\n/**\n * __useGetProfileQuery__\n *\n * To run a query within a React component, call `useGetProfileQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetProfileQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetProfileQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetProfileQuery(\n  baseOptions?: Apollo.QueryHookOptions<GetProfileQuery, GetProfileQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetProfileQuery, GetProfileQueryVariables>(\n    GetProfileDocument,\n    options,\n  )\n}\nexport function useGetProfileLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetProfileQuery, GetProfileQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetProfileQuery, GetProfileQueryVariables>(\n    GetProfileDocument,\n    options,\n  )\n}\nexport type GetProfileQueryHookResult = ReturnType<typeof useGetProfileQuery>\nexport type GetProfileLazyQueryHookResult = ReturnType<typeof useGetProfileLazyQuery>\nexport type GetProfileQueryResult = Apollo.QueryResult<\n  GetProfileQuery,\n  GetProfileQueryVariables\n>\nexport const PopularLessonsDocument = gql`\n  query popularLessons {\n    popularLessons {\n      total\n      totalLessons\n      data {\n        subLessonId\n        lessonName\n        srtFile\n        startTime\n        endTime\n        createdAt\n        updatedAt\n        lessonId\n        videoLevel\n        videoLevelLabel @client\n        youtubeId\n        title\n        introduction\n        tags\n        isSingle\n        day\n        savedCreatedAt\n        isCompleted\n      }\n    }\n  }\n`\n\n/**\n * __usePopularLessonsQuery__\n *\n * To run a query within a React component, call `usePopularLessonsQuery` and pass it any options that fit your needs.\n * When your component renders, `usePopularLessonsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePopularLessonsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function usePopularLessonsQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    PopularLessonsQuery,\n    PopularLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<PopularLessonsQuery, PopularLessonsQueryVariables>(\n    PopularLessonsDocument,\n    options,\n  )\n}\nexport function usePopularLessonsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    PopularLessonsQuery,\n    PopularLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<PopularLessonsQuery, PopularLessonsQueryVariables>(\n    PopularLessonsDocument,\n    options,\n  )\n}\nexport type PopularLessonsQueryHookResult = ReturnType<typeof usePopularLessonsQuery>\nexport type PopularLessonsLazyQueryHookResult = ReturnType<\n  typeof usePopularLessonsLazyQuery\n>\nexport type PopularLessonsQueryResult = Apollo.QueryResult<\n  PopularLessonsQuery,\n  PopularLessonsQueryVariables\n>\nexport const MyCoursesDocument = gql`\n  query myCourses($page: Int!) {\n    myCourses(page: $page) {\n      _id\n      title\n      introduction\n      youtubeId\n      videoLevel\n      videoLevelLabel @client\n      topicTitle\n      lessonCount\n    }\n  }\n`\n\n/**\n * __useMyCoursesQuery__\n *\n * To run a query within a React component, call `useMyCoursesQuery` and pass it any options that fit your needs.\n * When your component renders, `useMyCoursesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMyCoursesQuery({\n *   variables: {\n *      page: // value for 'page'\n *   },\n * });\n */\nexport function useMyCoursesQuery(\n  baseOptions: Apollo.QueryHookOptions<MyCoursesQuery, MyCoursesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<MyCoursesQuery, MyCoursesQueryVariables>(\n    MyCoursesDocument,\n    options,\n  )\n}\nexport function useMyCoursesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<MyCoursesQuery, MyCoursesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<MyCoursesQuery, MyCoursesQueryVariables>(\n    MyCoursesDocument,\n    options,\n  )\n}\nexport type MyCoursesQueryHookResult = ReturnType<typeof useMyCoursesQuery>\nexport type MyCoursesLazyQueryHookResult = ReturnType<typeof useMyCoursesLazyQuery>\nexport type MyCoursesQueryResult = Apollo.QueryResult<\n  MyCoursesQuery,\n  MyCoursesQueryVariables\n>\nexport const GetDashboardDocument = gql`\n  query getDashboard($day: String!, $videoLevel: LevelName!) {\n    todayLesson(day: $day) {\n      ...DashboardLessonFields\n    }\n    popularLessons {\n      total\n      totalLessons\n      data {\n        ...DashboardLessonFields\n      }\n    }\n    savedLessons {\n      total\n      totalLessons\n      data {\n        ...DashboardLessonFields\n      }\n    }\n    myCourses(size: 3) {\n      _id\n      title\n      introduction\n      youtubeId\n      videoLevel\n      videoLevelLabel @client\n      topicTitle\n      lessonCount\n    }\n    newUploadLessons(day: $day, videoLevel: $videoLevel) {\n      total\n      totalLessons\n      data {\n        ...DashboardLessonFields\n      }\n    }\n  }\n  ${DashboardLessonFieldsFragmentDoc}\n`\n\n/**\n * __useGetDashboardQuery__\n *\n * To run a query within a React component, call `useGetDashboardQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetDashboardQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetDashboardQuery({\n *   variables: {\n *      day: // value for 'day'\n *      videoLevel: // value for 'videoLevel'\n *   },\n * });\n */\nexport function useGetDashboardQuery(\n  baseOptions: Apollo.QueryHookOptions<GetDashboardQuery, GetDashboardQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetDashboardQuery, GetDashboardQueryVariables>(\n    GetDashboardDocument,\n    options,\n  )\n}\nexport function useGetDashboardLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetDashboardQuery,\n    GetDashboardQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetDashboardQuery, GetDashboardQueryVariables>(\n    GetDashboardDocument,\n    options,\n  )\n}\nexport type GetDashboardQueryHookResult = ReturnType<typeof useGetDashboardQuery>\nexport type GetDashboardLazyQueryHookResult = ReturnType<typeof useGetDashboardLazyQuery>\nexport type GetDashboardQueryResult = Apollo.QueryResult<\n  GetDashboardQuery,\n  GetDashboardQueryVariables\n>\nexport const GetDashboardDraftLessonsDocument = gql`\n  query getDashboardDraftLessons {\n    draftLessons {\n      total\n      totalLessons\n      data {\n        ...LessonFields\n      }\n    }\n  }\n  ${LessonFieldsFragmentDoc}\n`\n\n/**\n * __useGetDashboardDraftLessonsQuery__\n *\n * To run a query within a React component, call `useGetDashboardDraftLessonsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetDashboardDraftLessonsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetDashboardDraftLessonsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetDashboardDraftLessonsQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    GetDashboardDraftLessonsQuery,\n    GetDashboardDraftLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<\n    GetDashboardDraftLessonsQuery,\n    GetDashboardDraftLessonsQueryVariables\n  >(GetDashboardDraftLessonsDocument, options)\n}\nexport function useGetDashboardDraftLessonsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetDashboardDraftLessonsQuery,\n    GetDashboardDraftLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<\n    GetDashboardDraftLessonsQuery,\n    GetDashboardDraftLessonsQueryVariables\n  >(GetDashboardDraftLessonsDocument, options)\n}\nexport type GetDashboardDraftLessonsQueryHookResult = ReturnType<\n  typeof useGetDashboardDraftLessonsQuery\n>\nexport type GetDashboardDraftLessonsLazyQueryHookResult = ReturnType<\n  typeof useGetDashboardDraftLessonsLazyQuery\n>\nexport type GetDashboardDraftLessonsQueryResult = Apollo.QueryResult<\n  GetDashboardDraftLessonsQuery,\n  GetDashboardDraftLessonsQueryVariables\n>\nexport const GetLessonDeatilDocument = gql`\n  query getLessonDeatil($id: String!) {\n    currentLessonId @client\n    lesson(id: $id) {\n      _id\n      lessonId\n      courseId\n      youtubeId\n      lessonName\n      isSaved\n      isCompleted\n      title\n      tags\n      videoLevel\n      videoLevelLabel @client\n      introduction\n      isMy\n      scenes {\n        start\n        end\n        langs\n      }\n      phrases {\n        word\n        meaning\n        meanings {\n          lang\n          meaning\n        }\n      }\n    }\n  }\n`\n\n/**\n * __useGetLessonDeatilQuery__\n *\n * To run a query within a React component, call `useGetLessonDeatilQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetLessonDeatilQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetLessonDeatilQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useGetLessonDeatilQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    GetLessonDeatilQuery,\n    GetLessonDeatilQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetLessonDeatilQuery, GetLessonDeatilQueryVariables>(\n    GetLessonDeatilDocument,\n    options,\n  )\n}\nexport function useGetLessonDeatilLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetLessonDeatilQuery,\n    GetLessonDeatilQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetLessonDeatilQuery, GetLessonDeatilQueryVariables>(\n    GetLessonDeatilDocument,\n    options,\n  )\n}\nexport type GetLessonDeatilQueryHookResult = ReturnType<typeof useGetLessonDeatilQuery>\nexport type GetLessonDeatilLazyQueryHookResult = ReturnType<\n  typeof useGetLessonDeatilLazyQuery\n>\nexport type GetLessonDeatilQueryResult = Apollo.QueryResult<\n  GetLessonDeatilQuery,\n  GetLessonDeatilQueryVariables\n>\nexport const SetLessonSavedDocument = gql`\n  mutation setLessonSaved($id: String!, $isSave: Boolean!) {\n    setLessonSaved(lessonId: $id, isSave: $isSave) {\n      _id\n      isSaved\n    }\n  }\n`\nexport type SetLessonSavedMutationFn = Apollo.MutationFunction<\n  SetLessonSavedMutation,\n  SetLessonSavedMutationVariables\n>\n\n/**\n * __useSetLessonSavedMutation__\n *\n * To run a mutation, you first call `useSetLessonSavedMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSetLessonSavedMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [setLessonSavedMutation, { data, loading, error }] = useSetLessonSavedMutation({\n *   variables: {\n *      id: // value for 'id'\n *      isSave: // value for 'isSave'\n *   },\n * });\n */\nexport function useSetLessonSavedMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    SetLessonSavedMutation,\n    SetLessonSavedMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<SetLessonSavedMutation, SetLessonSavedMutationVariables>(\n    SetLessonSavedDocument,\n    options,\n  )\n}\nexport type SetLessonSavedMutationHookResult = ReturnType<\n  typeof useSetLessonSavedMutation\n>\nexport type SetLessonSavedMutationResult = Apollo.MutationResult<SetLessonSavedMutation>\nexport type SetLessonSavedMutationOptions = Apollo.BaseMutationOptions<\n  SetLessonSavedMutation,\n  SetLessonSavedMutationVariables\n>\nexport const SetLessonCompletedDocument = gql`\n  mutation setLessonCompleted($lessonId: String!) {\n    setLessonCompleted(lessonId: $lessonId) {\n      _id\n      isCompleted\n    }\n  }\n`\nexport type SetLessonCompletedMutationFn = Apollo.MutationFunction<\n  SetLessonCompletedMutation,\n  SetLessonCompletedMutationVariables\n>\n\n/**\n * __useSetLessonCompletedMutation__\n *\n * To run a mutation, you first call `useSetLessonCompletedMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSetLessonCompletedMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [setLessonCompletedMutation, { data, loading, error }] = useSetLessonCompletedMutation({\n *   variables: {\n *      lessonId: // value for 'lessonId'\n *   },\n * });\n */\nexport function useSetLessonCompletedMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    SetLessonCompletedMutation,\n    SetLessonCompletedMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<\n    SetLessonCompletedMutation,\n    SetLessonCompletedMutationVariables\n  >(SetLessonCompletedDocument, options)\n}\nexport type SetLessonCompletedMutationHookResult = ReturnType<\n  typeof useSetLessonCompletedMutation\n>\nexport type SetLessonCompletedMutationResult = Apollo.MutationResult<SetLessonCompletedMutation>\nexport type SetLessonCompletedMutationOptions = Apollo.BaseMutationOptions<\n  SetLessonCompletedMutation,\n  SetLessonCompletedMutationVariables\n>\nexport const GetCourseDocument = gql`\n  query getCourse($id: String!) {\n    course(id: $id) {\n      _id\n      tags\n      title\n      introduction\n      topicTitle\n      videoLevel\n      videoLevelLabel @client\n      youtubeId\n      lessons {\n        _id\n        lessonName\n        completedAt\n        scenes {\n          start\n          end\n        }\n      }\n    }\n  }\n`\n\n/**\n * __useGetCourseQuery__\n *\n * To run a query within a React component, call `useGetCourseQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetCourseQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetCourseQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useGetCourseQuery(\n  baseOptions: Apollo.QueryHookOptions<GetCourseQuery, GetCourseQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetCourseQuery, GetCourseQueryVariables>(\n    GetCourseDocument,\n    options,\n  )\n}\nexport function useGetCourseLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetCourseQuery, GetCourseQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetCourseQuery, GetCourseQueryVariables>(\n    GetCourseDocument,\n    options,\n  )\n}\nexport type GetCourseQueryHookResult = ReturnType<typeof useGetCourseQuery>\nexport type GetCourseLazyQueryHookResult = ReturnType<typeof useGetCourseLazyQuery>\nexport type GetCourseQueryResult = Apollo.QueryResult<\n  GetCourseQuery,\n  GetCourseQueryVariables\n>\nexport const AddToMyLessonDocument = gql`\n  mutation addToMyLesson($lessonId: String!) {\n    addToMyLesson(lessonId: $lessonId) {\n      _id\n      isMy\n    }\n  }\n`\nexport type AddToMyLessonMutationFn = Apollo.MutationFunction<\n  AddToMyLessonMutation,\n  AddToMyLessonMutationVariables\n>\n\n/**\n * __useAddToMyLessonMutation__\n *\n * To run a mutation, you first call `useAddToMyLessonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddToMyLessonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addToMyLessonMutation, { data, loading, error }] = useAddToMyLessonMutation({\n *   variables: {\n *      lessonId: // value for 'lessonId'\n *   },\n * });\n */\nexport function useAddToMyLessonMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    AddToMyLessonMutation,\n    AddToMyLessonMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<AddToMyLessonMutation, AddToMyLessonMutationVariables>(\n    AddToMyLessonDocument,\n    options,\n  )\n}\nexport type AddToMyLessonMutationHookResult = ReturnType<typeof useAddToMyLessonMutation>\nexport type AddToMyLessonMutationResult = Apollo.MutationResult<AddToMyLessonMutation>\nexport type AddToMyLessonMutationOptions = Apollo.BaseMutationOptions<\n  AddToMyLessonMutation,\n  AddToMyLessonMutationVariables\n>\nexport const SetNoteDocument = gql`\n  mutation setNote($wordData: WordData!) {\n    setNote(wordData: $wordData)\n  }\n`\nexport type SetNoteMutationFn = Apollo.MutationFunction<\n  SetNoteMutation,\n  SetNoteMutationVariables\n>\n\n/**\n * __useSetNoteMutation__\n *\n * To run a mutation, you first call `useSetNoteMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSetNoteMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [setNoteMutation, { data, loading, error }] = useSetNoteMutation({\n *   variables: {\n *      wordData: // value for 'wordData'\n *   },\n * });\n */\nexport function useSetNoteMutation(\n  baseOptions?: Apollo.MutationHookOptions<SetNoteMutation, SetNoteMutationVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<SetNoteMutation, SetNoteMutationVariables>(\n    SetNoteDocument,\n    options,\n  )\n}\nexport type SetNoteMutationHookResult = ReturnType<typeof useSetNoteMutation>\nexport type SetNoteMutationResult = Apollo.MutationResult<SetNoteMutation>\nexport type SetNoteMutationOptions = Apollo.BaseMutationOptions<\n  SetNoteMutation,\n  SetNoteMutationVariables\n>\nexport const ReportLessonIssueDocument = gql`\n  mutation reportLessonIssue($report: LessonReport!) {\n    reportLessonIssue(report: $report)\n  }\n`\nexport type ReportLessonIssueMutationFn = Apollo.MutationFunction<\n  ReportLessonIssueMutation,\n  ReportLessonIssueMutationVariables\n>\n\n/**\n * __useReportLessonIssueMutation__\n *\n * To run a mutation, you first call `useReportLessonIssueMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReportLessonIssueMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reportLessonIssueMutation, { data, loading, error }] = useReportLessonIssueMutation({\n *   variables: {\n *      report: // value for 'report'\n *   },\n * });\n */\nexport function useReportLessonIssueMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    ReportLessonIssueMutation,\n    ReportLessonIssueMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<\n    ReportLessonIssueMutation,\n    ReportLessonIssueMutationVariables\n  >(ReportLessonIssueDocument, options)\n}\nexport type ReportLessonIssueMutationHookResult = ReturnType<\n  typeof useReportLessonIssueMutation\n>\nexport type ReportLessonIssueMutationResult = Apollo.MutationResult<ReportLessonIssueMutation>\nexport type ReportLessonIssueMutationOptions = Apollo.BaseMutationOptions<\n  ReportLessonIssueMutation,\n  ReportLessonIssueMutationVariables\n>\nexport const SearchDictionaryDocument = gql`\n  query searchDictionary($search: String!) {\n    dictionary(search: $search) {\n      entry\n      meaning {\n        korean\n        noun\n        verb\n        adverb\n        adjective\n      }\n      ipa\n    }\n  }\n`\n\n/**\n * __useSearchDictionaryQuery__\n *\n * To run a query within a React component, call `useSearchDictionaryQuery` and pass it any options that fit your needs.\n * When your component renders, `useSearchDictionaryQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSearchDictionaryQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useSearchDictionaryQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    SearchDictionaryQuery,\n    SearchDictionaryQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<SearchDictionaryQuery, SearchDictionaryQueryVariables>(\n    SearchDictionaryDocument,\n    options,\n  )\n}\nexport function useSearchDictionaryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    SearchDictionaryQuery,\n    SearchDictionaryQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<SearchDictionaryQuery, SearchDictionaryQueryVariables>(\n    SearchDictionaryDocument,\n    options,\n  )\n}\nexport type SearchDictionaryQueryHookResult = ReturnType<typeof useSearchDictionaryQuery>\nexport type SearchDictionaryLazyQueryHookResult = ReturnType<\n  typeof useSearchDictionaryLazyQuery\n>\nexport type SearchDictionaryQueryResult = Apollo.QueryResult<\n  SearchDictionaryQuery,\n  SearchDictionaryQueryVariables\n>\nexport const GetDictationDocument = gql`\n  query getDictation($sceneIdx: Int!) {\n    dictation(sceneIdx: $sceneIdx) @client\n  }\n`\n\n/**\n * __useGetDictationQuery__\n *\n * To run a query within a React component, call `useGetDictationQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetDictationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetDictationQuery({\n *   variables: {\n *      sceneIdx: // value for 'sceneIdx'\n *   },\n * });\n */\nexport function useGetDictationQuery(\n  baseOptions: Apollo.QueryHookOptions<GetDictationQuery, GetDictationQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetDictationQuery, GetDictationQueryVariables>(\n    GetDictationDocument,\n    options,\n  )\n}\nexport function useGetDictationLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetDictationQuery,\n    GetDictationQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetDictationQuery, GetDictationQueryVariables>(\n    GetDictationDocument,\n    options,\n  )\n}\nexport type GetDictationQueryHookResult = ReturnType<typeof useGetDictationQuery>\nexport type GetDictationLazyQueryHookResult = ReturnType<typeof useGetDictationLazyQuery>\nexport type GetDictationQueryResult = Apollo.QueryResult<\n  GetDictationQuery,\n  GetDictationQueryVariables\n>\nexport const GetRecordsDocument = gql`\n  query getRecords($sceneIdx: Int!) {\n    records(sceneIdx: $sceneIdx) @client {\n      audioAsBase64\n      audioUrl\n      sampleRate\n      stt {\n        error\n        confidence\n        transcript\n        percent\n      }\n    }\n  }\n`\n\n/**\n * __useGetRecordsQuery__\n *\n * To run a query within a React component, call `useGetRecordsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetRecordsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetRecordsQuery({\n *   variables: {\n *      sceneIdx: // value for 'sceneIdx'\n *   },\n * });\n */\nexport function useGetRecordsQuery(\n  baseOptions: Apollo.QueryHookOptions<GetRecordsQuery, GetRecordsQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetRecordsQuery, GetRecordsQueryVariables>(\n    GetRecordsDocument,\n    options,\n  )\n}\nexport function useGetRecordsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetRecordsQuery, GetRecordsQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetRecordsQuery, GetRecordsQueryVariables>(\n    GetRecordsDocument,\n    options,\n  )\n}\nexport type GetRecordsQueryHookResult = ReturnType<typeof useGetRecordsQuery>\nexport type GetRecordsLazyQueryHookResult = ReturnType<typeof useGetRecordsLazyQuery>\nexport type GetRecordsQueryResult = Apollo.QueryResult<\n  GetRecordsQuery,\n  GetRecordsQueryVariables\n>\nexport const GetNotesDocument = gql`\n  query getNotes($size: Int!, $page: Int!) {\n    getNotes(size: $size, page: $page) {\n      page\n      size\n      total\n      totalPage\n      data {\n        _id\n        word\n        meaning\n      }\n    }\n  }\n`\n\n/**\n * __useGetNotesQuery__\n *\n * To run a query within a React component, call `useGetNotesQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetNotesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetNotesQuery({\n *   variables: {\n *      size: // value for 'size'\n *      page: // value for 'page'\n *   },\n * });\n */\nexport function useGetNotesQuery(\n  baseOptions: Apollo.QueryHookOptions<GetNotesQuery, GetNotesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetNotesQuery, GetNotesQueryVariables>(GetNotesDocument, options)\n}\nexport function useGetNotesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetNotesQuery, GetNotesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetNotesQuery, GetNotesQueryVariables>(\n    GetNotesDocument,\n    options,\n  )\n}\nexport type GetNotesQueryHookResult = ReturnType<typeof useGetNotesQuery>\nexport type GetNotesLazyQueryHookResult = ReturnType<typeof useGetNotesLazyQuery>\nexport type GetNotesQueryResult = Apollo.QueryResult<\n  GetNotesQuery,\n  GetNotesQueryVariables\n>\nexport const MoreNotesDocument = gql`\n  query moreNotes($cursor: String, $size: Int!) {\n    moreNotes(cursor: $cursor, size: $size) {\n      cursor\n      hasMore @client\n      nodes {\n        _id\n        word\n        meaning\n        kor\n        noun\n        verb\n        adv\n        adj\n      }\n    }\n  }\n`\n\n/**\n * __useMoreNotesQuery__\n *\n * To run a query within a React component, call `useMoreNotesQuery` and pass it any options that fit your needs.\n * When your component renders, `useMoreNotesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMoreNotesQuery({\n *   variables: {\n *      cursor: // value for 'cursor'\n *      size: // value for 'size'\n *   },\n * });\n */\nexport function useMoreNotesQuery(\n  baseOptions: Apollo.QueryHookOptions<MoreNotesQuery, MoreNotesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<MoreNotesQuery, MoreNotesQueryVariables>(\n    MoreNotesDocument,\n    options,\n  )\n}\nexport function useMoreNotesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<MoreNotesQuery, MoreNotesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<MoreNotesQuery, MoreNotesQueryVariables>(\n    MoreNotesDocument,\n    options,\n  )\n}\nexport type MoreNotesQueryHookResult = ReturnType<typeof useMoreNotesQuery>\nexport type MoreNotesLazyQueryHookResult = ReturnType<typeof useMoreNotesLazyQuery>\nexport type MoreNotesQueryResult = Apollo.QueryResult<\n  MoreNotesQuery,\n  MoreNotesQueryVariables\n>\nexport const DeleteNoteDocument = gql`\n  mutation deleteNote($id: String!) {\n    deleteNote(id: $id)\n  }\n`\nexport type DeleteNoteMutationFn = Apollo.MutationFunction<\n  DeleteNoteMutation,\n  DeleteNoteMutationVariables\n>\n\n/**\n * __useDeleteNoteMutation__\n *\n * To run a mutation, you first call `useDeleteNoteMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteNoteMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteNoteMutation, { data, loading, error }] = useDeleteNoteMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteNoteMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    DeleteNoteMutation,\n    DeleteNoteMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<DeleteNoteMutation, DeleteNoteMutationVariables>(\n    DeleteNoteDocument,\n    options,\n  )\n}\nexport type DeleteNoteMutationHookResult = ReturnType<typeof useDeleteNoteMutation>\nexport type DeleteNoteMutationResult = Apollo.MutationResult<DeleteNoteMutation>\nexport type DeleteNoteMutationOptions = Apollo.BaseMutationOptions<\n  DeleteNoteMutation,\n  DeleteNoteMutationVariables\n>\nexport const GerReviewCompletedLessonsDocument = gql`\n  query gerReviewCompletedLessons($cursor: String, $size: Int!) {\n    moreCompletedLessons(cursor: $cursor, size: $size) {\n      cursor\n      hasMore @client\n      nodes {\n        _id\n        lessonName\n        completedAt\n        videoLevel\n        videoLevelLabel @client\n        videoType\n        youtubeId\n      }\n    }\n  }\n`\n\n/**\n * __useGerReviewCompletedLessonsQuery__\n *\n * To run a query within a React component, call `useGerReviewCompletedLessonsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGerReviewCompletedLessonsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGerReviewCompletedLessonsQuery({\n *   variables: {\n *      cursor: // value for 'cursor'\n *      size: // value for 'size'\n *   },\n * });\n */\nexport function useGerReviewCompletedLessonsQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    GerReviewCompletedLessonsQuery,\n    GerReviewCompletedLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<\n    GerReviewCompletedLessonsQuery,\n    GerReviewCompletedLessonsQueryVariables\n  >(GerReviewCompletedLessonsDocument, options)\n}\nexport function useGerReviewCompletedLessonsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GerReviewCompletedLessonsQuery,\n    GerReviewCompletedLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<\n    GerReviewCompletedLessonsQuery,\n    GerReviewCompletedLessonsQueryVariables\n  >(GerReviewCompletedLessonsDocument, options)\n}\nexport type GerReviewCompletedLessonsQueryHookResult = ReturnType<\n  typeof useGerReviewCompletedLessonsQuery\n>\nexport type GerReviewCompletedLessonsLazyQueryHookResult = ReturnType<\n  typeof useGerReviewCompletedLessonsLazyQuery\n>\nexport type GerReviewCompletedLessonsQueryResult = Apollo.QueryResult<\n  GerReviewCompletedLessonsQuery,\n  GerReviewCompletedLessonsQueryVariables\n>\nexport const UploadProfilePictureDocument = gql`\n  mutation uploadProfilePicture($imageBase64: String!) {\n    uploadProfilePicture(imageBase64: $imageBase64) {\n      _id\n      profilePic\n    }\n  }\n`\nexport type UploadProfilePictureMutationFn = Apollo.MutationFunction<\n  UploadProfilePictureMutation,\n  UploadProfilePictureMutationVariables\n>\n\n/**\n * __useUploadProfilePictureMutation__\n *\n * To run a mutation, you first call `useUploadProfilePictureMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUploadProfilePictureMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [uploadProfilePictureMutation, { data, loading, error }] = useUploadProfilePictureMutation({\n *   variables: {\n *      imageBase64: // value for 'imageBase64'\n *   },\n * });\n */\nexport function useUploadProfilePictureMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    UploadProfilePictureMutation,\n    UploadProfilePictureMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<\n    UploadProfilePictureMutation,\n    UploadProfilePictureMutationVariables\n  >(UploadProfilePictureDocument, options)\n}\nexport type UploadProfilePictureMutationHookResult = ReturnType<\n  typeof useUploadProfilePictureMutation\n>\nexport type UploadProfilePictureMutationResult = Apollo.MutationResult<UploadProfilePictureMutation>\nexport type UploadProfilePictureMutationOptions = Apollo.BaseMutationOptions<\n  UploadProfilePictureMutation,\n  UploadProfilePictureMutationVariables\n>\nexport const GetUserProgressDocument = gql`\n  query getUserProgress {\n    progressState {\n      totalCount\n      datetimes\n      counts {\n        type\n        count\n      }\n    }\n  }\n`\n\n/**\n * __useGetUserProgressQuery__\n *\n * To run a query within a React component, call `useGetUserProgressQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetUserProgressQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetUserProgressQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetUserProgressQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    GetUserProgressQuery,\n    GetUserProgressQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetUserProgressQuery, GetUserProgressQueryVariables>(\n    GetUserProgressDocument,\n    options,\n  )\n}\nexport function useGetUserProgressLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetUserProgressQuery,\n    GetUserProgressQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetUserProgressQuery, GetUserProgressQueryVariables>(\n    GetUserProgressDocument,\n    options,\n  )\n}\nexport type GetUserProgressQueryHookResult = ReturnType<typeof useGetUserProgressQuery>\nexport type GetUserProgressLazyQueryHookResult = ReturnType<\n  typeof useGetUserProgressLazyQuery\n>\nexport type GetUserProgressQueryResult = Apollo.QueryResult<\n  GetUserProgressQuery,\n  GetUserProgressQueryVariables\n>\nexport const GetLevelsDocument = gql`\n  query getLevels {\n    levels {\n      _id\n      name\n    }\n  }\n`\n\n/**\n * __useGetLevelsQuery__\n *\n * To run a query within a React component, call `useGetLevelsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetLevelsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetLevelsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetLevelsQuery(\n  baseOptions?: Apollo.QueryHookOptions<GetLevelsQuery, GetLevelsQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetLevelsQuery, GetLevelsQueryVariables>(\n    GetLevelsDocument,\n    options,\n  )\n}\nexport function useGetLevelsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetLevelsQuery, GetLevelsQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetLevelsQuery, GetLevelsQueryVariables>(\n    GetLevelsDocument,\n    options,\n  )\n}\nexport type GetLevelsQueryHookResult = ReturnType<typeof useGetLevelsQuery>\nexport type GetLevelsLazyQueryHookResult = ReturnType<typeof useGetLevelsLazyQuery>\nexport type GetLevelsQueryResult = Apollo.QueryResult<\n  GetLevelsQuery,\n  GetLevelsQueryVariables\n>\nexport const SetLevelDocument = gql`\n  mutation setLevel($levelName: LevelName!) {\n    setLevel(levelName: $levelName) {\n      _id\n      userLevelId\n      userLevelName\n    }\n  }\n`\nexport type SetLevelMutationFn = Apollo.MutationFunction<\n  SetLevelMutation,\n  SetLevelMutationVariables\n>\n\n/**\n * __useSetLevelMutation__\n *\n * To run a mutation, you first call `useSetLevelMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSetLevelMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [setLevelMutation, { data, loading, error }] = useSetLevelMutation({\n *   variables: {\n *      levelName: // value for 'levelName'\n *   },\n * });\n */\nexport function useSetLevelMutation(\n  baseOptions?: Apollo.MutationHookOptions<SetLevelMutation, SetLevelMutationVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<SetLevelMutation, SetLevelMutationVariables>(\n    SetLevelDocument,\n    options,\n  )\n}\nexport type SetLevelMutationHookResult = ReturnType<typeof useSetLevelMutation>\nexport type SetLevelMutationResult = Apollo.MutationResult<SetLevelMutation>\nexport type SetLevelMutationOptions = Apollo.BaseMutationOptions<\n  SetLevelMutation,\n  SetLevelMutationVariables\n>\nexport const GetUserGuideDocument = gql`\n  query getUserGuide {\n    userGuide {\n      introduction\n      youtubeId\n    }\n  }\n`\n\n/**\n * __useGetUserGuideQuery__\n *\n * To run a query within a React component, call `useGetUserGuideQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetUserGuideQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetUserGuideQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetUserGuideQuery(\n  baseOptions?: Apollo.QueryHookOptions<GetUserGuideQuery, GetUserGuideQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetUserGuideQuery, GetUserGuideQueryVariables>(\n    GetUserGuideDocument,\n    options,\n  )\n}\nexport function useGetUserGuideLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetUserGuideQuery,\n    GetUserGuideQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetUserGuideQuery, GetUserGuideQueryVariables>(\n    GetUserGuideDocument,\n    options,\n  )\n}\nexport type GetUserGuideQueryHookResult = ReturnType<typeof useGetUserGuideQuery>\nexport type GetUserGuideLazyQueryHookResult = ReturnType<typeof useGetUserGuideLazyQuery>\nexport type GetUserGuideQueryResult = Apollo.QueryResult<\n  GetUserGuideQuery,\n  GetUserGuideQueryVariables\n>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'https://api.speakypeaky.com/api/v1',\n  GRAPHQL_URL: 'https://api.speakypeaky.com/graphql',\n  // API_URL: 'https://api-dev.speakypeaky.com/api/v1',\n  // GRAPHQL_URL: 'https://api-dev.speakypeaky.com/graphql',\n  // GRAPHQL_URL: 'http://localhost:4044/',\n  // GRAPHQL_URL: 'http://192.168.0.3:4044/',\n  // API_URL: 'http://localhost:4043/api/v1',\n  // API_URL: 'http://localhost:4044/dev/api/v1',\n\n  // S3 Bucket\n  accessKeyId: 'AKIAIQV2FPU2ROUJB2QA',\n  secretAccessKey: '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',\n  region: 'us-east-1',\n  bucket: 'start-english-learning',\n  assetBaseUrl: 'https://asset.speakypeaky.com/',\n\n  // This is for Speaky Peaky\n  validatorURL:\n    'https://validator.fovea.cc/v1/validate?appName=com.summer.startenglishnow&apiKey=f8ba72c1-7125-4f97-9c57-da5ae62fbc45',\n\n  stripePublicKey: 'pk_test_J2UsK5W9xq4swWJN0ZdhEn0W00uGeII06q',\n\n  firebase: {\n    apiKey: 'AIzaSyBcuf15jDOG-Q6pIyc2ZNYCjiV1u5pTLHU',\n    authDomain: 'start-english-now-android.firebaseapp.com',\n    databaseURL: 'https://start-english-now-android.firebaseio.com',\n    projectId: 'start-english-now-android',\n    storageBucket: 'start-english-now-android.appspot.com',\n    messagingSenderId: '73688891988',\n    appId: '1:73688891988:web:74a17a3e4bf8a063',\n  },\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core'\nimport {Observable, of} from 'rxjs'\nimport {catchError, tap, map, shareReplay, switchMap} from 'rxjs/operators'\nimport {ApiService} from './api.service'\n\n@Injectable()\nexport class OnBoardingService {\n  token: any\n  public profileCache: any\n\n  constructor(public apiService: ApiService) {}\n\n  userGuid(data): Observable<any> {\n    return this.apiService.post('/static/user-guide', data)\n  }\n\n  levelList(): Observable<any> {\n    return this.apiService.get('/changelevel/list')\n  }\n\n  changeLevel(data): Observable<any> {\n    return this.apiService.post('/changelevel/update', data)\n  }\n\n  getUserProfile(noCache: boolean = false): Observable<any> {\n    const self = this\n    const req = this.apiService.get('/user/get-profile').pipe(\n      tap((e) => {\n        self.profileCache = {\n          timestamp: +new Date(),\n          profile: e.data,\n        }\n      }),\n    )\n    if (noCache) {\n      return req\n    }\n    if (this.profileCache) {\n      if (+new Date() - this.profileCache.timestamp < 5000) {\n        return of({data: this.profileCache.profile})\n      }\n    }\n    return req\n  }\n\n  verifyEmail(email): Observable<any> {\n    return this.apiService.post('/user/resend-email', {email})\n  }\n\n  updateUserName(data): Observable<any> {\n    return this.apiService.post('/user/update-name', data)\n  }\n\n  updateUserEmail(data): Observable<any> {\n    return this.apiService.post('/user/update-email', data)\n  }\n\n  updateUserPassword(data): Observable<any> {\n    return this.apiService.post('/user/update-password', data)\n  }\n\n  contactToAdmin(data): Observable<any> {\n    return this.apiService.post('/contactus/user/set-contact-us', data)\n  }\n\n  getSubTitleLanguages(): Observable<any> {\n    return this.apiService.get('/subTitleLanguages/list')\n  }\n\n  setUserSubTitleLanguage(data): Observable<any> {\n    return this.apiService.post('/user/set-subtitleLanguage', data)\n  }\n\n  uploadProfilePicture(data): Observable<any> {\n    return this.apiService.post('/user/uploadProfilePicture', data)\n  }\n\n  getUserSubTitleLanguage(subTitleLanguageId): Observable<any> {\n    return this.apiService.get('/subTitleLanguages/details/' + subTitleLanguageId)\n  }\n}\n","export default \".chat {\\n  z-index: 10;\\n  display: inline;\\n  position: fixed;\\n  bottom: 1%;\\n  right: 1%;\\n}\\n.chat.hasTabbar {\\n  bottom: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NoYW5uZWwtaW8tbW9iaWxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7QUFDRjtBQUFFO0VBQ0UsV0FBQTtBQUVKIiwiZmlsZSI6ImNoYW5uZWwtaW8tbW9iaWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXQge1xuICB6LWluZGV4OiAxMDtcbiAgZGlzcGxheTogaW5saW5lO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMSU7XG4gIHJpZ2h0OiAxJTtcbiAgJi5oYXNUYWJiYXIge1xuICAgIGJvdHRvbTogMTAlO1xuICB9XG59XG4iXX0= */\";","import {Injectable} from '@angular/core'\nimport {HttpClient, HttpHeaders} from '@angular/common/http'\nimport {Observable, throwError, from} from 'rxjs'\nimport {environment} from './../../environments/environment'\nimport {catchError, retry, map, shareReplay, switchMap} from 'rxjs/operators'\nimport {SharedService} from './shared.service'\nimport {Router} from '@angular/router'\n\n@Injectable({providedIn: 'root'})\nexport class ApiService {\n  constructor(\n    private router: Router,\n    private httpClient: HttpClient,\n    public sharedService: SharedService,\n  ) {}\n\n  post(path: string, data: object): Observable<any> {\n    return from(this.sharedService.getNativeStorage('token')).pipe(\n      switchMap((token) => {\n        const url = environment.API_URL + path\n        return this.httpClient.post(url, data, {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            accesstoken: token?.data,\n          }),\n        })\n      }),\n      // shareReplay(1),\n      // map((res) => res),\n      // retry(1),\n      catchError((err) => {\n        console.log(err)\n\n        this.sharedService.presentAlert('Alert', err.error)\n\n        if (err.error.status === 502) {\n          this.sharedService.removeNativeStorage('token')\n          this.router.navigate(['/login'])\n\n          return throwError(err.error)\n        } else {\n          return throwError(err.error)\n        }\n      }),\n    )\n  }\n\n  postWithoutToken(path: string, data: object): Observable<any> {\n    const url = environment.API_URL + path\n    return this.httpClient\n      .post(url, data, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n        }),\n      })\n      .pipe(\n        catchError((err) => {\n          // this.sharedService.presentAlert('Alert', err.error)\n          return throwError(err.error)\n        }),\n      )\n  }\n\n  get(path: string, data?: object): Observable<any> {\n    return from(this.sharedService.getNativeStorage('token')).pipe(\n      switchMap((token) => {\n        const options = {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            accesstoken: token?.data,\n          }),\n          data,\n        }\n        const url = environment.API_URL + path\n        return this.httpClient.get(url, options)\n      }),\n      catchError((err) => {\n        this.sharedService.presentAlert('Alert', '', err.error.error)\n\n        return throwError(err.error)\n        // if (err.error.status === 502 || err.error.error === ERR_TOKEN_EXP) {\n        //   // this.sharedService.removeNativeStorage('token')\n        //   // this.router.navigate(['/login'])\n\n        //   return throwError(err.error)\n        // } else {\n        //   return throwError(err.error)\n        // }\n      }),\n    )\n  }\n\n  getWithoutToken(path: string, data?: object): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n      data,\n    }\n    const url = environment.API_URL + path\n    return this.httpClient.get(url, options).pipe(\n      catchError((err) => {\n        console.log(err)\n        // this.sharedService.presentAlert('Alert', err.error)\n        return throwError(err.error)\n      }),\n    )\n  }\n}\n","import {Injectable} from '@angular/core'\nimport {ApiService} from './api.service'\n\n@Injectable()\nexport class SubscriptionService {\n  constructor(public apiService: ApiService) {}\n\n  getAllStripePlans() {\n    return this.apiService.get('/payments/get_all_plans')\n  }\n\n  getCustomerDetails(customerId) {\n    return this.apiService.get('/payments/get_user/' + customerId)\n  }\n\n  createStripeCustomer(data) {\n    return this.apiService.post('/payments/create_user', data)\n  }\n\n  attachSourceToCustomer(data) {\n    return this.apiService.post('/payments/create_card_method', data)\n  }\n\n  getCustomerAllPaymentMethods(data) {\n    return this.apiService.post('/payments/get_payment_methods', data)\n  }\n\n  processedToPayUsingStripe(data) {\n    return this.apiService.post('/payments/create_subscription', data)\n  }\n\n  turnOffAutoRenewalForStripe(subscriptionId) {\n    return this.apiService.get('/payments/updateSubscription/' + subscriptionId)\n  }\n\n  getStripeSubscriptionDetails(subscriptionId) {\n    return this.apiService.get('/payments/subscription-details/' + subscriptionId)\n  }\n\n  setUserSubscription(data) {\n    return this.apiService.post('/userSubscription/setUserSubscription', data)\n  }\n\n  getUserSubscription(data) {\n    return this.apiService.post('/userSubscription/getUserSubscription', data)\n  }\n\n  verifySubscription(data) {\n    return this.apiService.post('/userSubscription/userV2', data)\n  }\n\n  setStripeCustomerId(data) {\n    return this.apiService.post('/user/setStripeCustomerId', data)\n  }\n}\n","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t\"jDxf\",\n\t\t90\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t\"37vE\",\n\t\t91\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t\"cJxf\",\n\t\t92\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t\"eGHz\",\n\t\t93\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t\"fHjd\",\n\t\t94\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"KwcL\";\nmodule.exports = webpackAsyncContext;","import {ChannelIoMobileComponent} from './channel-io-mobile.component'\nimport {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {IonicModule} from '@ionic/angular'\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [ChannelIoMobileComponent],\n  exports: [ChannelIoMobileComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class ChannelIoMobileModule {}\n","import {LessonsService} from './services/lessons.service'\nimport {SwUpdate} from '@angular/service-worker'\nimport {SubscriptionService} from './services/subscription.service'\nimport {OnBoardingService} from './services/on-boarding.service'\nimport {ActivatedRoute, Router} from '@angular/router'\nimport {AuthService} from './services/auth.service'\nimport {SharedService} from './services/shared.service'\nimport {Component, ViewChild} from '@angular/core'\n\nimport {\n  Platform,\n  NavController,\n  ModalController,\n  IonRouterOutlet,\n  AlertController,\n} from '@ionic/angular'\nimport {Plugins, StatusBarStyle, AppState, Capacitor} from '@capacitor/core'\nconst {SplashScreen, StatusBar, App, Device} = Plugins\nimport {SwPush} from '@angular/service-worker'\nimport Cookies from 'js-cookie'\nimport {useStore} from 'src/reactapp/useStore'\nimport {environment} from 'src/environments/environment'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n})\nexport class AppComponent {\n  // isOnBoarding = false\n  // set up hardware back button event.\n\n  lastTimeBackPress = 0\n  timePeriodToExit = 2000\n  deferredPrompt\n  @ViewChild(IonRouterOutlet, {static: false}) routerOutlet: IonRouterOutlet\n\n  constructor(\n    private platform: Platform,\n    private sharedService: SharedService,\n    private authService: AuthService,\n    private navController: NavController,\n    public modalCtrl: ModalController,\n    public alertController: AlertController,\n    private onBoardingService: OnBoardingService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private swUpdate: SwUpdate,\n    readonly swPush: SwPush,\n  ) {\n    SplashScreen.show({\n      showDuration: 3000,\n      autoHide: true,\n    })\n    sharedService.getDeviceInfo().then((info) => {\n      useStore.setState({navController, route, deviceInfo: info, platform, sharedService})\n      if (info.platform === 'web') {\n        if (\n          document.location.hostname !== 'localhost' &&\n          document.location.protocol === 'http:'\n        ) {\n          // document.location.href = document.location.href.replace('http:', 'https:')\n        }\n      }\n\n      window.addEventListener('beforeinstallprompt', (e) => {\n        console.log('beforeinstallprompt Event fired')\n        // Prevent Chrome 67 and earlier from automatically showing the prompt\n        e.preventDefault()\n        // Stash the event so it can be triggered later.\n        this.deferredPrompt = e\n        this.addToHome()\n      })\n\n      this.initializeApp()\n\n      this.platform.backButton.subscribe(this.handleBackButton)\n      SplashScreen.hide()\n    })\n  }\n\n  async handleBackButton() {\n    // close modal\n    try {\n      const element = await this.modalCtrl.getTop()\n      if (element) {\n        element.dismiss()\n        return\n      }\n    } catch (error) {}\n    if (this.routerOutlet && this.routerOutlet.canGoBack()) {\n      this.routerOutlet.pop()\n    } else if (this.router.url === '/dashboard/lessons' || this.router.url === '/login') {\n      if (new Date().getTime() - this.lastTimeBackPress < this.timePeriodToExit) {\n        // navigator.app.exitApp(); // work for ionic 4\n      } else {\n        this.lastTimeBackPress = new Date().getTime()\n      }\n    }\n  }\n\n  updateServiceWorker() {\n    if (this.swUpdate.isEnabled) {\n      this.swUpdate.available.subscribe(() => {\n        if (confirm('New version available. Load New Version?')) {\n          window.location.reload()\n        }\n      })\n\n      this.swPush.notificationClicks.subscribe(({action, notification}) => {\n        console.log('====================================')\n        console.log(action)\n        console.log(notification)\n        console.log('====================================')\n        // TODO: Do something in response to notification click.\n      })\n    }\n  }\n\n  async suggestDownload() {\n    const alert = await this.alertController.create({\n      header: 'Hey there,',\n      message: 'For better experience, would you like to download the Speaky Peaky app?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          handler: () => {\n            Cookies.set('did-suggest-app', 'yes', {expires: 7})\n          },\n        },\n        {\n          text: 'Download',\n          handler: () => {\n            Cookies.set('did-suggest-app', 'yes', {expires: 7})\n            window.open('https://speakypeaky.page.link/home')\n          },\n        },\n      ],\n    })\n\n    await alert.present()\n  }\n\n  async initializeApp() {\n    this.updateServiceWorker()\n\n    const info = await this.sharedService.getDeviceInfo()\n    if (info.isApp) {\n      StatusBar.setStyle({\n        style: StatusBarStyle.Dark,\n      })\n    }\n    if (info.isMobileWeb && !Cookies.get('did-suggest-app')) {\n      this.suggestDownload()\n    }\n\n    try {\n      const token = await this.sharedService.getNativeStorage('token')\n\n      if (token?.data) {\n        try {\n          const profile = await this.getUserProfile()\n          console.log({profile})\n          if (profile.data) {\n            if (info.isApp) {\n              // if(|| document.location.hostname !== 'localhost')\n            }\n            if (environment.production) {\n              this.navController.navigateRoot('/dashboard')\n            } else {\n              // this.navController.navigateRoot('/dashboard')\n            }\n            return\n          }\n        } catch {}\n\n        this.authService.authSubject.next(false)\n        this.navController.navigateRoot('/login')\n      } else {\n        const isOnBoarding = await this.sharedService.getNativeStorage('isOnBoarding')\n        if (isOnBoarding?.data === true) {\n          this.authService.authSubject.next(false)\n          this.navController.navigateRoot('/login')\n          return\n        }\n      }\n    } catch (error) {\n      console.error(error)\n    }\n    this.authService.authSubject.next(false)\n    this.navController.navigateRoot('/on-boarding')\n  }\n\n  ionViewWillEnter() {\n    // button click event to show the promt\n\n    window.addEventListener('appinstalled', (event) => {\n      alert('installed')\n    })\n\n    if (window.matchMedia('(display-mode: standalone)').matches) {\n      alert('display-mode is standalone')\n    }\n  }\n\n  addToHome() {\n    if (this.deferredPrompt !== undefined && this.deferredPrompt !== null) {\n      // Show the prompt\n      this.deferredPrompt.prompt()\n      // Wait for the user to respond to the prompt\n      this.deferredPrompt.userChoice.then((choiceResult) => {\n        if (choiceResult.outcome === 'accepted') {\n          console.log('User accepted the A2HS prompt')\n        } else {\n          console.log('User dismissed the A2HS prompt')\n        }\n        // We no longer need the prompt.  Clear it up.\n        this.deferredPrompt = null\n      })\n    }\n  }\n\n  getUserProfile() {\n    return this.onBoardingService.getUserProfile().toPromise()\n  }\n}\n","export default \"<ion-app>\\n  <ion-router-outlet></ion-router-outlet>\\n  <app-channel-io-mobile></app-channel-io-mobile>\\n</ion-app>\";","import {LessonsService} from './services/lessons.service'\nimport {SubscriptionService} from './services/subscription.service'\nimport {OnBoardingService} from './services/on-boarding.service'\nimport {NgModule} from '@angular/core'\nimport {BrowserModule} from '@angular/platform-browser'\nimport {RouteReuseStrategy} from '@angular/router'\n\nimport {IonicModule, IonicRouteStrategy} from '@ionic/angular'\n\nimport {AppComponent} from './app.component'\nimport {AppRoutingModule} from './app-routing.module'\nimport {HttpClientModule} from '@angular/common/http'\n\nimport {ServiceWorkerModule} from '@angular/service-worker'\nimport {environment} from '../environments/environment'\nimport {PushNotificationsModule} from 'ng-push'\nimport {GoogleAnalytics} from '@ionic-native/google-analytics/ngx'\nimport {ChannelIoMobileModule} from './components/channel-io-mobile/channel-io-mobile.module'\nimport {Base64} from '@ionic-native/base64/ngx'\n@NgModule({\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production}),\n    PushNotificationsModule,\n    ChannelIoMobileModule,\n  ],\n  declarations: [AppComponent],\n  providers: [\n    {provide: RouteReuseStrategy, useClass: IonicRouteStrategy},\n    OnBoardingService,\n    SubscriptionService,\n    LessonsService,\n    GoogleAnalytics,\n    Base64,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dBYC\",\n\t\t\"common\",\n\t\t42\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"dd9K\",\n\t\t\"common\",\n\t\t43\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"w3/4\",\n\t\t\"common\",\n\t\t44\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"IJvw\",\n\t\t\"common\",\n\t\t45\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Bzea\",\n\t\t\"common\",\n\t\t46\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"XUvO\",\n\t\t47\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"EZXS\",\n\t\t\"common\",\n\t\t48\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"35tz\",\n\t\t\"common\",\n\t\t49\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"CwRq\",\n\t\t\"common\",\n\t\t50\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"13mQ\",\n\t\t\"common\",\n\t\t51\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"Vw/N\",\n\t\t52\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"FaZn\",\n\t\t\"common\",\n\t\t53\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"4jfp\",\n\t\t\"common\",\n\t\t54\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"Fmwn\",\n\t\t55\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"pVu2\",\n\t\t56\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"osmV\",\n\t\t\"common\",\n\t\t57\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"BeVK\",\n\t\t\"common\",\n\t\t58\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"0sPl\",\n\t\t\"common\",\n\t\t59\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"L19J\",\n\t\t\"common\",\n\t\t60\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"/uLI\",\n\t\t\"common\",\n\t\t61\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"Tfpq\",\n\t\t\"common\",\n\t\t62\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"a/9b\",\n\t\t\"common\",\n\t\t63\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"PLk7\",\n\t\t\"common\",\n\t\t64\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"9iIR\",\n\t\t\"common\",\n\t\t65\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"NkB0\",\n\t\t\"common\",\n\t\t66\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"+K8/\",\n\t\t\"common\",\n\t\t67\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"XcmX\",\n\t\t\"common\",\n\t\t68\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"Up0A\",\n\t\t\"common\",\n\t\t69\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"vQEB\",\n\t\t70\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"DXEm\",\n\t\t\"common\",\n\t\t71\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"tv4E\",\n\t\t\"common\",\n\t\t72\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"q+qH\",\n\t\t\"common\",\n\t\t73\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"pS87\",\n\t\t\"common\",\n\t\t74\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"dLII\",\n\t\t75\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"Lnq6\",\n\t\t\"common\",\n\t\t76\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"n4jw\",\n\t\t77\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"+gxd\",\n\t\t\"common\",\n\t\t78\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"DdnD\",\n\t\t\"common\",\n\t\t79\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"zwDB\",\n\t\t\"common\",\n\t\t80\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"RwqG\",\n\t\t\"common\",\n\t\t81\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"CHyx\",\n\t\t\"common\",\n\t\t82\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"8yey\",\n\t\t\"common\",\n\t\t83\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"A/r9\",\n\t\t84\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"ZNya\";\nmodule.exports = webpackAsyncContext;","import {Injectable} from '@angular/core'\nimport {Observable, BehaviorSubject} from 'rxjs'\nimport {first} from 'rxjs/operators'\nimport {SharedService} from './shared.service'\nimport {ApiService} from './api.service'\n\n@Injectable({providedIn: 'root'})\nexport class AuthService {\n  token: any\n  authSubject = new BehaviorSubject(true)\n  token$: BehaviorSubject<any>\n\n  constructor(public sharedService: SharedService, public apiService: ApiService) {}\n\n  login(user): Observable<any> {\n    return this.apiService.postWithoutToken('/user/authenticate', user)\n  }\n\n  signUp(user): Observable<any> {\n    return this.apiService.postWithoutToken('/user/signup', user)\n  }\n\n  forgotPassword(email): Observable<any> {\n    return this.apiService.postWithoutToken('/user/requestPasswordURL', email)\n  }\n\n  get isLoggedIn(): Observable<boolean> {\n    return this.authSubject.pipe(first())\n  }\n}\n","import {gql, makeVar, TypePolicies} from '@apollo/client'\nimport {LevelName} from './types-and-hooks'\n\nexport const localTypeDefs = gql`\n  extend type Query {\n    currentLessonId: String\n    dictation(lessonId: Int!, sceneIdx: Int!): String\n  }\n  extend type Mutation {\n    updateDictation(id: ID!): String\n  }\n  extend type WordNoteCursorPage {\n    hasMore: Boolean\n  }\n  extend type LessonCursorPage {\n    hasMore: Boolean\n  }\n  extend type Lesson {\n    videoLevelLabel: String\n  }\n  extend type Course {\n    videoLevelLabel: String\n  }\n`\n\nexport const currentLessonIdVar = makeVar<any>(null)\nexport const dictationsVar = makeVar<any>({})\nexport const recordsVar = makeVar<any>({})\n\nexport const typePolicies: TypePolicies = {\n  Query: {\n    fields: {\n      currentLessonId: {\n        read(_, {variables}) {\n          if (variables.id) {\n            return variables.id\n          }\n\n          return currentLessonIdVar()\n        },\n      },\n      dictation: {\n        read(_, {variables}) {\n          console.log({variables})\n\n          const {sceneIdx} = variables\n          const lessonId = currentLessonIdVar()\n\n          return dictationsVar()[`${lessonId}:${sceneIdx}`] || ''\n        },\n      },\n      records: {\n        read(_, {variables}) {\n          console.log({variables})\n\n          const {sceneIdx} = variables\n          const lessonId = currentLessonIdVar()\n\n          return recordsVar()[`${lessonId}:${sceneIdx}`] || []\n        },\n      },\n      moreNotes: {\n        merge(existing, incoming, {readField, args}) {\n          const nodes = args.cursor && existing ? {...existing.nodes} : {}\n          incoming.nodes.forEach((node) => {\n            const idx = readField('_id', node)\n            nodes[idx as number] = node\n          })\n\n          return {\n            cursor: incoming.cursor,\n            hasMore: incoming.nodes.length === args.size,\n            nodes,\n          }\n        },\n\n        read(existing) {\n          if (existing) {\n            return {\n              cursor: existing.cursor,\n              hasMore: existing.hasMore,\n              nodes: Object.values(existing.nodes),\n            }\n          }\n        },\n      },\n      moreCompletedLessons: {\n        merge(existing, incoming, {readField, args}) {\n          const nodes = args.cursor && existing ? {...existing.nodes} : {}\n          incoming.nodes.forEach((node) => {\n            const idx = readField('_id', node)\n            nodes[idx as number] = node\n          })\n\n          return {\n            cursor: incoming.cursor,\n            hasMore: incoming.nodes.length === args.size,\n            nodes,\n          }\n        },\n\n        read(existing) {\n          if (existing) {\n            return {\n              cursor: existing.cursor,\n              hasMore: existing.hasMore,\n              nodes: Object.values(existing.nodes),\n            }\n          }\n        },\n      },\n    },\n  },\n  Mutation: {\n    fields: {\n      updateDictation: {\n        read(...args) {\n          console.log('read', args)\n        },\n        merge(...args) {\n          console.log('merge', args)\n        },\n      },\n    },\n  },\n  LessonProgress: {\n    fields: {\n      datetimes: {\n        read(datetimes) {\n          return datetimes.map((d) => new Date(d))\n        },\n      },\n    },\n  },\n  User: {\n    fields: {\n      // userLevelName: {\n      //   read(userLevelName) {\n      //     return levelMap[userLevelName]\n      //   },\n      // },\n    },\n  },\n  Lesson: {\n    fields: {\n      videoLevelLabel: {\n        read(_, {readField}) {\n          const level = readField('videoLevel') as LevelName\n          return levelLabel[level]\n          // return levelLabel[userLevelName]\n        },\n      },\n    },\n  },\n  Course: {\n    fields: {\n      videoLevelLabel: {\n        read(_, {readField}) {\n          const level = readField('videoLevel') as LevelName\n          return levelLabel[level]\n        },\n      },\n    },\n  },\n}\n\nconst levelMap = {\n  UpperBeginner: 'UpperBeginner',\n  'Upper-beginner': 'UpperBeginner',\n  Elementary: 'UpperBeginner',\n  Intermediate: 'Intermediate',\n  Advanced: 'Advanced',\n}\nconst levelLabel = {\n  [LevelName.UpperBeginner]: 'Upper-beginner',\n  [LevelName.Intermediate]: 'Intermediate',\n  [LevelName.Advanced]: 'Advanced',\n}\n","import {Injectable} from '@angular/core'\nimport {HttpClient, HttpHeaders} from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs'\nimport {catchError, retry, map} from 'rxjs/operators'\nimport {ApiService} from './api.service'\nimport {OnBoardingService} from './on-boarding.service'\n\n@Injectable()\nexport class LessonsService {\n  constructor(\n    private httpClient: HttpClient,\n    private apiService: ApiService,\n    private onBoardingService: OnBoardingService,\n  ) {}\n  weekdays = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ]\n\n  getTodaysLessons(data): Observable<any> {\n    return this.apiService.get(`/lesson/recommendation/${data}`)\n  }\n\n  getNewUploadsLessons(page): Observable<any> {\n    const today = this.weekdays[new Date().getDay()]\n    const profile = this.onBoardingService.profileCache.profile\n    const payload = {\n      day: today === 'Saturday' || today === 'Sunday' ? 'Weekend' : today,\n      videoLevel: profile.userLevelName,\n    }\n    return this.apiService.post(`/lesson/get-newUploadLessons/${page}`, payload)\n  }\n\n  getTodaysLesson(): Observable<any> {\n    const day = this.weekdays[new Date().getDay()]\n    return this.getSubLessonDetails({day}, false)\n  }\n\n  getSubLessonDetails(data, isDraft) {\n    if (isDraft === true) {\n      return this.apiService.post(`/lesson/drafted-lesson-details`, data)\n    } else {\n      return this.apiService.post(`/lesson/details-lessons`, data)\n    }\n  }\n\n  getDraftLessonsForAdmin(page) {\n    return this.apiService.get(`/lesson/drafted-lessons/${page}`)\n  }\n\n  getDraftSubLessonDetails(data) {\n    return this.apiService.get(`/lesson/drafted-lesson-details`, data)\n  }\n\n  saveLesson(data) {\n    return this.apiService.post(`/lesson/add-savedLesson`, data)\n  }\n\n  removeSavedLesson(data) {\n    return this.apiService.post(`/lesson/remove-savedLesson`, data)\n  }\n\n  getSavedLessons(page) {\n    return this.apiService.get(`/lesson/savedLessons/${page}`)\n  }\n\n  getPopularLessons(page) {\n    return this.apiService.get(`/lesson/popularLessons/${page}`)\n  }\n\n  getCourseList(page, data) {\n    return this.apiService.post(`/lesson/course-list/${page}`, data)\n  }\n\n  getMyCourse() {\n    return this.apiService.get(`/lesson/my-course`)\n  }\n\n  getCompletedLessons() {\n    return this.apiService.get(`/lesson/completedLessons`)\n  }\n\n  getCourseDetails(lessonId, type) {\n    return this.apiService.get(`/lesson/course-details/${lessonId}/${type}`)\n  }\n\n  completeLesson(data) {\n    return this.apiService.post(`/lesson/completed`, data)\n  }\n\n  addMyCourseLesson(data) {\n    return this.apiService.post(`/lesson/add-course-lesson`, data)\n  }\n\n  completedLessonsWithTimeRange(data) {\n    return this.apiService.post(`/lesson/completedLessons-within-timeRange`, data)\n  }\n\n  reportAnIssueToAdmin(data) {\n    return this.apiService.post(`/reportIssues/user/set-report-issue`, data)\n  }\n\n  setUserNotes(data) {\n    return this.apiService.post(`/user/set-notes`, data)\n  }\n\n  getUserNotes(page) {\n    return this.apiService.get(`/user/get-notes/${page}`)\n  }\n\n  deleteUserNotes(data) {\n    return this.apiService.post(`/user/delete-notes`, data)\n  }\n\n  getAcronymsList() {\n    return this.apiService.get(`/user/acronyms-list`)\n  }\n\n  // Find a meaning for word\n  findWordMeaning(entry: string): Observable<any> {\n    const url = `https://twinword-word-graph-dictionary.p.rapidapi.com/definition_kr/?entry=${entry}`\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'x-rapidapi-key': 'cRKV2Kl60tmshr5Yw1eForDx52Fdp19YCpQjsn0SpP4r1sNWol',\n      }),\n    }\n\n    return this.httpClient.get(url, options).pipe(\n      map((res) => res),\n      retry(1),\n      catchError((err) => {\n        console.log(err)\n\n        return throwError(err)\n      }),\n    )\n  }\n}\n","import {NavController} from '@ionic/angular'\nimport {AuthService} from './services/auth.service'\nimport {Injectable} from '@angular/core'\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  CanActivate,\n  Router,\n} from '@angular/router'\nimport {Observable} from 'rxjs'\nimport {map, catchError, retry} from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private navController: NavController,\n    private router: Router,\n    private authService: AuthService,\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.authService.isLoggedIn.pipe(\n      map((res) => {\n        if (res) {\n          return true\n        } else {\n          this.navController.setDirection('root')\n          this.router.navigate(['/login'])\n          return false\n        }\n      }),\n    )\n  }\n}\n","import {AuthGuard} from './auth.guard'\nimport {NgModule} from '@angular/core'\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router'\n\nconst routes: Routes = [\n  // {\n  //   path: '',\n  //   redirectTo: 'on-boarding',\n  //   pathMatch: 'full',\n  // },\n  {\n    path: 'sign-up',\n    loadChildren: () =>\n      import('./sign-up/sign-up.module').then((m) => m.SignUpPageModule),\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./login/login.module').then((m) => m.LoginPageModule),\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () =>\n      import('./dashboard/dashboard.module').then((m) => m.DashboardPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'on-boarding',\n    loadChildren: () =>\n      import('./on-boarding/on-boarding.module').then((m) => m.OnBoardingPageModule),\n  },\n  {\n    path: 'forgot-password',\n    loadChildren: () =>\n      import('./forgot-password/forgot-password.module').then(\n        (m) => m.ForgotPasswordPageModule,\n      ),\n  },\n  {\n    path: 'on-boarding-level',\n    loadChildren: () =>\n      import('./on-boarding/on-boarding-level/on-boarding-level.module').then(\n        (m) => m.OnBoardingLevelPageModule,\n      ),\n  },\n  {\n    path: 'on-boarding-language',\n    loadChildren: () =>\n      import('./on-boarding/on-boarding-language/on-boarding-language.module').then(\n        (m) => m.OnBoardingLanguagePageModule,\n      ),\n  },\n  {\n    path: 'on-boarding-reminder',\n    loadChildren: () =>\n      import('./on-boarding/on-boarding-reminder/on-boarding-reminder.module').then(\n        (m) => m.OnBoardingReminderPageModule,\n      ),\n  },\n  {\n    path: 'lesson-details/:subLessonId/:isCompleted/:isDraft',\n    loadChildren: () =>\n      import('./dashboard/lessons/lesson-details/lesson-details.module').then(\n        (m) => m.LessonDetailsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'lesson-steps/:subLessonId/:isDraft',\n    pathMatch: 'prefix',\n    loadChildren: () =>\n      import('./dashboard/lessons/lesson-details/lesson-steps/lesson-steps.module').then(\n        (m) => m.LessonStepsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'lesson-complete',\n    loadChildren: () =>\n      import(\n        './dashboard/lessons/lesson-details/lesson-complete/lesson-complete.module'\n      ).then((m) => m.LessonCompletePageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'payment/manage',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/subscription-plans/stripe-manage/stripe-manage.module'\n      ).then((m) => m.StripeManagePageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'payment/:productId',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/subscription-plans/stripe-payment/stripe-payment.module'\n      ).then((m) => m.StripePaymentPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'popular',\n    loadChildren: () =>\n      import('./dashboard/lessons/popular-lessons/popular-lessons.module').then(\n        (m) => m.PopularLessonsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'new-uploads',\n    loadChildren: () =>\n      import('./dashboard/lessons/new-uploads/new-uploads.module').then(\n        (m) => m.NewUploadsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'draft-lessons',\n    loadChildren: () =>\n      import('./dashboard/lessons/draft-lessons/draft-lessons.module').then(\n        (m) => m.DraftLessonsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'saved-lessons',\n    loadChildren: () =>\n      import('./dashboard/lessons/saved-lessons/saved-lessons.module').then(\n        (m) => m.SavedLessonsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path:\n      'search-list/:suggestedCurriculumId/:suggestedCurriculumTitle/:suggestedCurriculumDay',\n    loadChildren: () =>\n      import('./dashboard/search-lessons/search-list/search-list.module').then(\n        (m) => m.SearchListPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'my-courses',\n    loadChildren: () =>\n      import('./dashboard/lessons/my-courses/my-courses.module').then(\n        (m) => m.MyCoursesPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'course-details/:lessonId/:type',\n    loadChildren: () =>\n      import('./dashboard/lessons/my-courses/course-details/course-details.module').then(\n        (m) => m.CourseDetailsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'setting',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/setting.module').then(\n        (m) => m.SettingPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'account',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/account/account.module').then(\n        (m) => m.AccountPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'edit-email',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/edit-email/edit-email.module'\n      ).then((m) => m.EditEmailPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'edit-name',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/account/edit-name/edit-name.module').then(\n        (m) => m.EditNamePageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'edit-password',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/edit-password/edit-password.module'\n      ).then((m) => m.EditPasswordPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'reminder',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/reminder/reminder.module').then(\n        (m) => m.ReminderPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'delete-account',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/delete-account/delete-account.module'\n      ).then((m) => m.DeleteAccountPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'support',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/support/support.module').then(\n        (m) => m.SupportPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'language',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/account/language/language.module').then(\n        (m) => m.LanguagePageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'share-app',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/share-app/share-app.module').then(\n        (m) => m.ShareAppPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'app-info',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/app-info/app-info.module').then(\n        (m) => m.AppInfoPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'subscription',\n    pathMatch: 'full',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/subscription/subscription.module'\n      ).then((m) => m.SubscriptionPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'subscriptionplans',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/subscription-plans/subscription-plans.module'\n      ).then((m) => m.SubscriptionPlansPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'faqs/:type',\n    loadChildren: () =>\n      import('././dashboard/user-profile/setting/support/faqs/faqs.module').then(\n        (m) => m.FaqsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'email-the-team',\n    loadChildren: () =>\n      import(\n        '././dashboard/user-profile/setting/support/email-the-team/email-the-team.module'\n      ).then((m) => m.EmailTheTeamPageModule),\n    canActivate: [AuthGuard],\n  },\n  {path: '**', redirectTo: ''},\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {preloadingStrategy: PreloadAllModules})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {Component} from '@angular/core'\nimport {NavigationEnd, Router} from '@angular/router'\nimport {Platform} from '@ionic/angular'\n\n@Component({\n  selector: 'app-channel-io-mobile',\n  templateUrl: './channel-io-mobile.component.html',\n  styleUrls: ['./channel-io-mobile.component.scss'],\n})\nexport class ChannelIoMobileComponent {\n  public showChat: boolean = false\n  public hasTabbar: boolean = false\n  private paths = [\n    '/dashboard/profile',\n    '/setting',\n    '/account',\n    '/edit-email',\n    '/edit-name',\n    '/edit-password',\n    '/reminder',\n    '/delete-account',\n    '/support',\n    '/language',\n    '/share-app',\n    '/app-info',\n    '/subscription',\n    '/subscriptionplans',\n    '/faqs/',\n    '/email-the-team',\n  ]\n\n  constructor(private platform: Platform, private router: Router) {\n    router.events.subscribe((val) => {\n      if (val instanceof NavigationEnd) {\n        if (\n          this.platform.is('mobileweb') ||\n          this.platform.is('ios') ||\n          this.platform.is('android')\n        ) {\n          this.showChat = this.paths.some((path) => val.url.startsWith(path))\n          this.hasTabbar = val.url.startsWith('/dashboard/profile')\n        } else if (this.platform.is('desktop')) {\n          this.showChat = false\n        }\n      }\n    })\n  }\n\n  // triggers redirect to channel.io on mobile and tablet devices only\n  async viewChat() {\n    window.location.href = 'https://speakypeaky.channel.io/'\n  }\n}\n","import {enableProdMode} from '@angular/core'\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic'\nimport {defineCustomElements} from '@ionic/pwa-elements/loader'\nimport {AppModule} from './app/app.module'\nimport {environment} from './environments/environment'\nimport 'hammerjs' // HAMMER TIME\nif (environment.production) {\n  enableProdMode()\n}\ndefineCustomElements(window)\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err))\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export default \"<!-- Floating chat widget -->\\n<div *ngIf=\\\"showChat\\\" class=\\\"chat ion-text-end\\\" [class.hasTabbar]=\\\"hasTabbar\\\">\\n  <img src=\\\"../../../../assets/images/user-progress/chat.svg\\\" alt=\\\"chat\\\" (click)=\\\"viewChat()\\\" />\\n</div>\";","import {environment} from './../../environments/environment'\nimport {Injectable} from '@angular/core'\nimport {\n  ActionSheetController,\n  LoadingController,\n  NavController,\n  Platform,\n} from '@ionic/angular'\nimport {ToastController} from '@ionic/angular'\nimport {AlertController} from '@ionic/angular'\nimport {DeviceInfo, Plugins} from '@capacitor/core'\nconst {Storage, Toast, Device} = Plugins\nimport {Router} from '@angular/router'\nimport {BehaviorSubject} from 'rxjs'\nimport {chunk, fromPairs} from 'lodash'\nimport * as S3 from 'aws-sdk/clients/s3'\nimport {GoogleAnalytics} from '@ionic-native/google-analytics/ngx'\nimport * as Driver from 'driver.js'\n\nconst ERR_TOKEN_EXP = 'Your session has expired, please login again'\n\ninterface ReactNativeWebView {\n  postMessage: (data: string) => {}\n}\n\nexport interface MyDeviceInfo extends DeviceInfo {\n  isApp: boolean\n  isMobileWeb: boolean\n  isDesktop: boolean\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SharedService {\n  loadingPromise: Promise<HTMLIonLoadingElement>\n  loading: HTMLIonLoadingElement\n  alertShow: boolean\n  video = new BehaviorSubject<any>({})\n  storageCache = {}\n  deviceInfo\n  rnWebview: ReactNativeWebView\n\n  constructor(\n    public loadingController: LoadingController,\n    public alertController: AlertController,\n    public router: Router,\n    public platform: Platform,\n    public toastController: ToastController,\n    public actionSheetController: ActionSheetController,\n    public navController: NavController,\n    private ga: GoogleAnalytics,\n  ) {\n    this.alertShow = false\n    this.getDeviceInfo().then((info) => console.log({info}))\n    this.rnWebview = window['ReactNativeWebView']\n  }\n\n  async getDeviceInfo(): Promise<MyDeviceInfo> {\n    if (!this.deviceInfo) {\n      const info = await Device.getInfo()\n\n      const isApp = ['ios', 'android'].includes(info.platform)\n      const isMobileWeb =\n        info.platform === 'web' && ['ios', 'android'].includes(info.operatingSystem)\n      const isDesktop = info.platform === 'web' && !isMobileWeb\n\n      this.deviceInfo = {...info, isApp, isMobileWeb, isDesktop}\n    }\n    return this.deviceInfo\n  }\n\n  gaTrackView(title) {\n    this.getDeviceInfo().then((info) => {\n      if (info.isApp) {\n        this.ga\n          .startTrackerWithId('UA-118705303-1')\n          .then(() => {\n            console.log('Google analytics is ready now')\n            this.ga.trackView(title)\n          })\n          .catch((e) => console.log('Error starting GoogleAnalytics', e))\n      }\n    })\n  }\n  gaTrackEvent(category, action) {\n    this.getDeviceInfo().then((info) => {\n      if (info.isApp) {\n        this.ga.trackEvent(category, action)\n      }\n    })\n  }\n\n  async presentLoader(message) {\n    if (!this.loading) {\n      this.loadingPromise = this.loadingController.create({message})\n      this.loading = await this.loadingPromise\n      this.loadingPromise = null\n      await this.loading.present()\n    }\n  }\n\n  dismissLoader() {\n    if (this.loading) {\n      return this.loading.dismiss().then(() => {\n        this.loading = null\n      })\n    }\n    if (!this.loading && this.loadingPromise) {\n      return this.loadingPromise.then((loading) => {\n        loading.dismiss().then(() => {\n          this.loading = null\n        })\n      })\n    }\n  }\n\n  async presentToast(text) {\n    if (this.platform.is('capacitor')) {\n      await Toast.show({\n        text,\n        duration: 'long',\n      })\n    } else {\n      const toast = await this.toastController.create({\n        message: text,\n        duration: 2000,\n      })\n      toast.present()\n    }\n  }\n\n  async setNativeStorage(key, value) {\n    this.rnWebview?.postMessage(JSON.stringify({method: 'set', key, value}))\n    this.storageCache[key] = {data: value}\n    return await Storage.set({\n      key,\n      value: JSON.stringify({\n        data: value,\n      }),\n    })\n  }\n\n  async getNativeStorage(key) {\n    if (this.storageCache[key]) {\n      return this.storageCache[key]\n    }\n    const ret = await Storage.get({key})\n    let value = JSON.parse(ret.value)\n    if (!value) {\n      value = {data: null}\n    }\n    this.storageCache[key] = value\n    return value\n  }\n\n  async removeNativeStorage(key) {\n    this.rnWebview?.postMessage(JSON.stringify({method: 'remove', key}))\n    delete this.storageCache[key]\n    return await Storage.remove({key})\n  }\n\n  async presentAlert(header, subHeader?, message?) {\n    const self = this\n\n    console.log({message})\n    if (!self.alertShow) {\n      self.alertShow = true\n      const alert = await this.alertController.create({\n        header,\n        subHeader,\n        message,\n        buttons: [\n          {\n            text: 'Ok',\n            handler: () => {\n              self.alertShow = false\n              if (message === ERR_TOKEN_EXP) {\n                this.removeNativeStorage('token')\n                this.router.navigate(['/login'])\n              }\n            },\n          },\n        ],\n      })\n\n      await alert.present()\n    }\n  }\n\n  removeDuplicatesByProperty(myArr, prop) {\n    return myArr.filter((obj, pos, arr) => {\n      return arr.map((mapObj) => mapObj[prop]).indexOf(obj[prop]) === pos\n    })\n  }\n\n  getS3Bucket(): any {\n    const bucket = new S3({\n      accessKeyId: environment.accessKeyId,\n      secretAccessKey: environment.secretAccessKey,\n      region: environment.region,\n      // apiVersion: '2010-12-01'\n      // ,\n      // signatureVersion: 'v2',\n      // endpoint: 's3-us-east-1.amazonaws.com/'\n    })\n\n    return bucket\n  }\n\n  acronymsWordParser(subTitle) {\n    const meaning = subTitle\n    let [_, ...rs] = meaning.split(/\\((?<key>[A-Z][a-z]{2})\\)/).map((s) => s.trim())\n    let obj = fromPairs(chunk(rs, 2))\n    return obj\n  }\n\n  compareAndHighlight(newElem, oldElem) {\n    const old = oldElem.text().trim().split(' ')\n    let text = ''\n    newElem\n      .text()\n      .trim()\n      .split(' ')\n      .forEach((word, i) => {\n        const oldText = old[i].toLowerCase().replace(/[^a-zA-Z ]/g, '')\n        const newText = word.toLowerCase().replace(/[^a-zA-Z ]/g, '')\n\n        if (newText !== oldText) {\n          text += \" <span class='highlight-difference'>\" + word + '</span>'\n        } else {\n          text += ' ' + word\n        }\n      })\n    newElem.html(text)\n  }\n\n  showHelpGuide({steps, onClose, delay = 1000}) {\n    setTimeout(() => {\n      const driver = new Driver({\n        // animate: false, // Whether to animate or not\n        // opacity: 0,\n        allowClose: false, // Whether the click on overlay should close or not\n        overlayClickNext: true, // Whether the click on overlay should move next\n        doneBtnText: 'Done', // Text on the final button\n        closeBtnText: 'Skip', // Text on the close button for this step\n        // stageBackground: '#ffffff', // Background color for the staged behind highlighted element\n        nextBtnText: 'Next', // Next button text for this step\n        prevBtnText: 'Previous', // Previous button text for this step\n        keyboardControl: false, // Allow controlling through keyboard (escape to close, arrow keys to move)\n        // onNext: (Element) => {},\n        onHighlightStarted: (Element) => {\n          const node = Element.getNode() as HTMLElement\n          node.scrollIntoView(false)\n        },\n        onDeselected: (Element) => {\n          console.log('onDeselected')\n          if (!driver.isActivated) {\n            onClose()\n          }\n        },\n      })\n\n      driver.defineSteps(steps)\n\n      driver.start()\n    }, delay)\n  }\n}\n"]}