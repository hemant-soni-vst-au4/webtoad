{"version":3,"sources":["webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-manage/add-card/add-card.component.html","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-manage/stripe-manage.module.ts","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-manage/stripe-manage.page.html","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-manage/stripe-manage.page.ts","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-manage/stripe-manage.page.scss","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-manage/add-card/add-card.component.scss","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-manage/add-card/add-card.component.ts"],"names":["routes","path","component","StripeManagePageModule","imports","forChild","declarations","entryComponents","providers","StripeManagePage","sharedService","onBoardingService","navController","router","modalController","loadingController","subscriptionService","stripe","Stripe","stripePublicKey","paymentCards","customerDetails","undefined","isDevelopmentMode","console","log","getCustomer","presentLoader","getUserProfile","toPromise","profileRes","data","profile","stripeCustomerId","stripeSandBoxCustomerId","stripeLiveCustomerId","getAllPaymentMethods","dismissLoader","type","customerId","getCustomerAllPaymentMethods","res","length","getCustomerDetails","map","card","id","default_source","create","componentProps","mode","modal","present","onDidDismiss","then","error","setDirection","navigate","paymentCard","forEach","selector","template","AddCardComponent","navParams","get","setupStripe","elements","style","base","color","lineHeight","fontFamily","fontSmoothing","fontSize","invalid","iconColor","hidePostalCode","mount","addEventListener","event","displayError","document","getElementById","textContent","message","form","preventDefault","createSource","result","errorElement","attachSourceToCustomer","source","sourceId","token","dismiss","presentToast","err","raw"],"mappings":"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","file":"dashboard-user-profile-setting-account-subscription-plans-stripe-manage-stripe-manage-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\">\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-title>\\n      Add New Card\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\" mode=\\\"md\\\">\\n      <ion-button mode=\\\"md\\\" (click)=\\\"dismiss()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" mode=\\\"ios\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <form action=\\\"/\\\" method=\\\"post\\\" id=\\\"payment-form\\\">\\n    <ion-grid>\\n      <ion-row class=\\\"ion-margin-top ion-margin-bottom ion-align-items-center ion-justify-content-center\\\">\\n        <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeMd=\\\"10\\\" sizeLg=\\\"10\\\" sizeXl=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"form-row\\\">\\n            <div id=\\\"card-element\\\">\\n              <!-- a Stripe Element will be inserted here. -->\\n            </div>\\n            <!-- Used to display Element errors -->\\n            <div class=\\\"c-red\\\" id=\\\"card-errors\\\" role=\\\"alert\\\"></div>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n        <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeMd=\\\"8\\\" sizeLg=\\\"6\\\" sizeXl=\\\"6\\\" class=\\\"ion-align-self-center\\\">\\n          <ion-button type=\\\"submit\\\" mode=\\\"ios\\\" color=\\\"danger\\\" fill=\\\"outline\\\" shape=\\\"round\\\" expand=\\\"block\\\"\\n            >Add Card\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\";","// import {FilterPaymentCardsByDatePipe} from '../../../../../../pipes/filter-payment-cards-by-date.pipe'\nimport {AddCardComponent} from './add-card/add-card.component'\nimport {SubscriptionService} from '../../../../../../services/subscription.service'\nimport {OnBoardingService} from '../../../../../../services/on-boarding.service'\nimport {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\nimport {Routes, RouterModule} from '@angular/router'\n\nimport {IonicModule} from '@ionic/angular'\n\nimport {StripeManagePage} from './stripe-manage.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StripeManagePage,\n  },\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [\n    StripeManagePage,\n    AddCardComponent,\n    // FilterPaymentCardsByDatePipe\n  ],\n  entryComponents: [AddCardComponent],\n  providers: [OnBoardingService, SubscriptionService],\n})\nexport class StripeManagePageModule {}\n","export default \"<ion-header mode=\\\"ios\\\">\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\" mode=\\\"md\\\">\\n      <ion-button mode=\\\"md\\\" (click)=\\\"back()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"chevron-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid class=\\\"ion-no-padding\\\">\\n    <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n      <ion-col\\n        sizeXs=\\\"12\\\"\\n        sizeSm=\\\"12\\\"\\n        sizeMd=\\\"6\\\"\\n        sizeLg=\\\"4\\\"\\n        sizeXl=\\\"4\\\"\\n        class=\\\"ion-no-padding ion-padding ion-align-self-center\\\"\\n      >\\n        <h1 class=\\\"ion-no-margin\\\">Payment options</h1>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n      <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeMd=\\\"6\\\" sizeLg=\\\"4\\\" sizeXl=\\\"4\\\" class=\\\"ion-no-padding ion-align-self-center\\\">\\n        <ion-list mode=\\\"md\\\" class=\\\"ion-no-padding\\\">\\n          <ion-list-header mode=\\\"md\\\">\\n            <ion-label>Credit / Debit Cards</ion-label>\\n          </ion-list-header>\\n          <ion-item mode=\\\"md\\\" *ngFor=\\\"let paymentCard of paymentCards\\\" (click)=\\\"onSetDefaultCard(paymentCard)\\\">\\n            <ion-label\\n              >{{ paymentCard.card.brand | uppercase }} <span>xxxx-xxxx-xxxx-</span>{{ paymentCard.card.last4 }}\\n            </ion-label>\\n            <ion-label>\\n              {{ paymentCard.card.exp_month | number: '2.0' }}/{{ paymentCard.card.exp_year % 100 | number: '2.0' }}\\n            </ion-label>\\n            <ion-icon\\n              *ngIf=\\\"paymentCard.default\\\"\\n              mode=\\\"ios\\\"\\n              color=\\\"success\\\"\\n              name=\\\"checkmark-circle\\\"\\n              size=\\\"large\\\"\\n              slot=\\\"end\\\"\\n            ></ion-icon>\\n          </ion-item>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n      <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeMd=\\\"6\\\" sizeLg=\\\"4\\\" sizeXl=\\\"4\\\" class=\\\"ion-padding-start ion-align-self-center\\\">\\n        <p (click)=\\\"onAddCard()\\\" class=\\\"pointer\\\">\\n          <ion-icon id=\\\"add-card-icon\\\" name=\\\"add-circle-outline\\\"></ion-icon> ADD NEW CARD\\n        </p>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n<ion-footer>\\n  <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n    <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeMd=\\\"6\\\" sizeLg=\\\"4\\\" sizeXl=\\\"4\\\" class=\\\"ion-align-self-center\\\">\\n      <!-- <ion-button\\n        mode=\\\"ios\\\"\\n        [disabled]=\\\"customerDetails === undefined\\\"\\n        (click)=\\\"onProcessedToPayUsingStripe()\\\"\\n        color=\\\"danger\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        >Process To Pay\\n      </ion-button> -->\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\\n\";","import {AddCardComponent} from './add-card/add-card.component'\nimport {Router} from '@angular/router'\nimport {NavController, ModalController, LoadingController} from '@ionic/angular'\nimport {SubscriptionService} from './../../../../../../services/subscription.service'\nimport {OnBoardingService} from './../../../../../../services/on-boarding.service'\nimport {SharedService} from './../../../../../../services/shared.service'\nimport {Component, OnInit, isDevMode} from '@angular/core'\nimport {environment} from '../../../../../../../environments/environment'\ndeclare var Stripe\n\n@Component({\n  selector: 'app-stripe-manage',\n  templateUrl: './stripe-manage.page.html',\n  styleUrls: ['./stripe-manage.page.scss'],\n})\nexport class StripeManagePage implements OnInit {\n  // Add Stripe Public Key\n  stripe = Stripe(environment.stripePublicKey)\n  card: any\n  paymentCards = []\n  customerDetails: any = undefined\n  isDevelopmentMode = true\n  stripeCustomerId: string\n\n  constructor(\n    public sharedService: SharedService,\n    private onBoardingService: OnBoardingService,\n    public navController: NavController,\n    private router: Router,\n    public modalController: ModalController,\n    public loadingController: LoadingController,\n    private subscriptionService: SubscriptionService,\n  ) {}\n\n  ngOnInit() {\n    if (isDevMode()) {\n      this.isDevelopmentMode = true\n    } else {\n      this.isDevelopmentMode = false\n    }\n    console.log('this.isDevelopmentMode', this.isDevelopmentMode)\n\n    this.getCustomer()\n  }\n\n  async getCustomer() {\n    try {\n      this.sharedService.presentLoader('Please wait...')\n\n      const profileRes = await this.onBoardingService.getUserProfile().toPromise()\n\n      if (profileRes.data) {\n        const profile = profileRes.data\n\n        const stripeCustomerId = this.isDevelopmentMode\n          ? profile.stripeSandBoxCustomerId\n          : profile.stripeLiveCustomerId\n\n        this.stripeCustomerId = stripeCustomerId\n\n        this.getAllPaymentMethods()\n      }\n    } catch (error) {\n      console.log(error)\n    } finally {\n      this.sharedService.dismissLoader()\n    }\n  }\n\n  async getAllPaymentMethods() {\n    try {\n      const stripeCustomerId = this.stripeCustomerId\n\n      const data = {\n        type: 'card',\n        customerId: stripeCustomerId,\n      }\n\n      const res = await this.subscriptionService\n        .getCustomerAllPaymentMethods(data)\n        .toPromise()\n\n      if (res.data.data.length) {\n        this.paymentCards = res.data.data\n\n        const customerDetails = await this.subscriptionService\n          .getCustomerDetails(stripeCustomerId)\n          .toPromise()\n\n        this.customerDetails = customerDetails.data\n\n        this.paymentCards.map((card: any) => {\n          card.default = card.id === this.customerDetails.default_source\n        })\n        console.log(this.paymentCards)\n      }\n    } catch (error) {\n      console.log(error)\n    } finally {\n      this.sharedService.dismissLoader()\n    }\n  }\n\n  async onAddCard() {\n    const modal = await this.modalController.create({\n      component: AddCardComponent,\n      componentProps: {stripeCustomerId: this.stripeCustomerId},\n      mode: 'md',\n    })\n    await modal.present()\n    await modal\n      .onDidDismiss()\n      .then(() => {\n        this.getAllPaymentMethods()\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  back() {\n    this.navController.setDirection('back')\n    this.router.navigate(['/subscription'])\n  }\n\n  onSetDefaultCard(paymentCard) {\n    this.customerDetails.default_source = paymentCard.id\n    this.paymentCards.forEach((card) => {\n      card.default = card.id === this.customerDetails.default_source\n    })\n  }\n}\n","export default \"ion-list-header {\\n  --background: lightgray;\\n}\\n\\nion-item ion-label span {\\n  font-size: 20px;\\n}\\n\\n#add-card-icon {\\n  font-size: 25px;\\n  margin-right: 5px;\\n  display: inline-flex;\\n  vertical-align: middle;\\n}\\n\\n.warning {\\n  --background: #bad9b5;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3N0cmlwZS1tYW5hZ2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQUE7QUFDRjs7QUFHSTtFQUNFLGVBQUE7QUFBTjs7QUFJQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUNBLG9CQUFBO0VBQ0Esc0JBQUE7QUFERjs7QUFHQTtFQUNFLHFCQUFBO0VBQ0EsZ0JBQUE7QUFBRiIsImZpbGUiOiJzdHJpcGUtbWFuYWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1saXN0LWhlYWRlciB7XG4gIC0tYmFja2dyb3VuZDogbGlnaHRncmF5O1xufVxuaW9uLWl0ZW0ge1xuICBpb24tbGFiZWwge1xuICAgIHNwYW4ge1xuICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgIH1cbiAgfVxufVxuI2FkZC1jYXJkLWljb24ge1xuICBmb250LXNpemU6IDI1cHg7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbi53YXJuaW5nIHtcbiAgLS1iYWNrZ3JvdW5kOiAjYmFkOWI1O1xuICBmb250LXdlaWdodDogNjAwO1xufVxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtY2FyZC5jb21wb25lbnQuc2NzcyJ9 */\";","import {ModalController, NavParams} from '@ionic/angular'\nimport {SubscriptionService} from './../../../../../../../services/subscription.service'\nimport {SharedService} from './../../../../../../../services/shared.service'\nimport {Component, OnInit} from '@angular/core'\nimport {environment} from '../../../../../../../../environments/environment'\ndeclare var Stripe\n@Component({\n  selector: 'app-add-card',\n  templateUrl: './add-card.component.html',\n  styleUrls: ['./add-card.component.scss'],\n})\nexport class AddCardComponent implements OnInit {\n  stripe = Stripe(environment.stripePublicKey)\n  card: any\n  stripeCustomerId\n\n  constructor(\n    private sharedService: SharedService,\n    private subscriptionService: SubscriptionService,\n    public modalController: ModalController,\n    private navParams: NavParams,\n  ) {\n    this.stripeCustomerId = this.navParams.get('stripeCustomerId')\n  }\n\n  ngOnInit() {\n    this.setupStripe()\n  }\n\n  setupStripe() {\n    const elements = this.stripe.elements()\n    const style = {\n      base: {\n        color: '#32325d',\n        lineHeight: '24px',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSmoothing: 'antialiased',\n        fontSize: '16px',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#fa755a',\n        iconColor: '#fa755a',\n      },\n    }\n\n    this.card = elements.create('card', {style, hidePostalCode: true})\n    // console.log( this.card );\n    this.card.mount('#card-element')\n\n    this.card.addEventListener('change', (event) => {\n      const displayError = document.getElementById('card-errors')\n      if (event.error) {\n        displayError.textContent = event.error.message\n      } else {\n        displayError.textContent = ''\n      }\n    })\n\n    const form = document.getElementById('payment-form')\n    form.addEventListener('submit', (event) => {\n      event.preventDefault()\n      // console.log( event );\n      this.sharedService.presentLoader('Please wait...')\n      // console.log( this.card );\n      this.stripe.createSource(this.card).then((result) => {\n        if (result.error) {\n          const errorElement = document.getElementById('card-errors')\n          errorElement.textContent = result.error.message\n          this.sharedService.dismissLoader()\n        } else {\n          this.attachSourceToCustomer(result.source.id)\n        }\n      })\n    })\n  }\n\n  async attachSourceToCustomer(sourceId) {\n    try {\n      const stripeCustomerId = this.stripeCustomerId\n      if (stripeCustomerId === undefined) {\n        return\n      }\n\n      const res = await this.subscriptionService\n        .attachSourceToCustomer({customerId: stripeCustomerId, token: sourceId})\n        .toPromise()\n      this.sharedService.dismissLoader()\n      this.dismiss()\n    } catch (error) {\n      console.log(error)\n      this.sharedService.dismissLoader()\n      this.sharedService.presentToast(error.err?.raw?.message)\n    } finally {\n    }\n  }\n\n  dismiss() {\n    this.modalController.dismiss()\n  }\n}\n"]}