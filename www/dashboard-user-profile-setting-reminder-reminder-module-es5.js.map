{"version":3,"sources":["webpack:///src/app/dashboard/user-profile/setting/reminder/reminder.page.html","webpack:///src/app/dashboard/user-profile/setting/reminder/reminder.page.scss","webpack:///src/app/dashboard/user-profile/setting/reminder/reminder.module.ts","webpack:///src/app/dashboard/user-profile/setting/reminder/reminder.page.ts"],"names":["routes","path","component","ReminderPageModule","imports","forChild","declarations","providers","LocalNotifications","ReminderPage","router","alertController","datePicker","datePipe","platform","sharedService","navController","reminder","isDesktop","isStart","requestPermission","Promise","all","getNativeStorage","then","data","reminderTime","Date","toISOString","setReminderTime","show","date","mode","androidTheme","ANDROID_THEMES","THEME_DEVICE_DEFAULT_LIGHT","setNativeStorage","getTime","create","header","message","transform","cssClass","buttons","alert","present","console","log","event","detail","checked","removeNativeStorage","undefined","cancel","notifications","id","setReminder","navigate","setDirection","time","schedule","title","body","repeats","every","on","hour","getHours","minute","getMinutes","sound","attachments","actionTypeId","extra","notifs","selector","template"],"mappings":"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","file":"dashboard-user-profile-setting-reminder-reminder-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\">\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\" mode=\\\"md\\\">\\n      <ion-button mode=\\\"md\\\" (click)=\\\"back()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"chevron-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button mode=\\\"md\\\" (click)=\\\"home()\\\">\\n        <ion-icon color=\\\"dark\\\" mode=\\\"md\\\" slot=\\\"icon-only\\\" src=\\\"../../../../../assets/images/home.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-grid>\\n    <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n      <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeLg=\\\"6\\\" sizeMd=\\\"7\\\" sizeXl=\\\"4\\\" class=\\\"ion-align-self-center\\\">\\n        <h1 class=\\\"ion-no-margin\\\"><strong>Reminder</strong></h1>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row class=\\\"reminder-block ion-align-items-center\\\">\\n      <ion-col class=\\\"ion-align-self-center\\\">\\n        <ion-row *ngIf=\\\"reminderTime === undefined; else gotReminder\\\"\\n          class=\\\"ion-align-items-center ion-justify-content-center ion-text-center\\\">\\n          <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeLg=\\\"6\\\" sizeMd=\\\"7\\\" sizeXl=\\\"4\\\" class=\\\"ion-align-self-center\\\">\\n            <ion-icon class=\\\"alarm\\\" src=\\\"../../../../../assets/images/alarm.svg\\\"></ion-icon>\\n            <h3 class=\\\"ion-text-center ion-margin-bottom\\\">\\n              Would you like to receive a reminder?\\n            </h3>\\n          </ion-col>\\n        </ion-row>\\n        <ng-template #gotReminder>\\n          <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n            <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeLg=\\\"6\\\" sizeMd=\\\"7\\\" sizeXl=\\\"4\\\"\\n              class=\\\"ion-align-self-center ion-text-center ion-margin-top\\\">\\n              <ion-icon class=\\\"alarm\\\" src=\\\"../../../../../assets/images/alarm.svg\\\"></ion-icon>\\n              <h3 class=\\\"ion-text-center ion-margin-bottom\\\">\\n                We will send you a nudge <br />\\n                at\\n                <ion-text class=\\\"c-orange\\\">\\n                  {{ reminderTime | date: 'shortTime' }}\\n                </ion-text>\\n                everyday\\n              </h3>\\n            </ion-col>\\n          </ion-row>\\n        </ng-template>\\n\\n        <ion-row *ngIf=\\\"reminderTime === undefined\\\" class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n          <ion-col sizeXs=\\\"10\\\" sizeSm=\\\"10\\\" sizeMd=\\\"7\\\" sizeLg=\\\"6\\\" sizeXl=\\\"4\\\" class=\\\"ion-align-self-center\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label color=\\\"danger\\\">Yes, set a reminder. <br />\\n                <ion-text color=\\\"medium\\\">(Push notification)</ion-text>\\n              </ion-label>\\n              <ion-toggle mode=\\\"ios\\\" checked=\\\"false\\\" (ionChange)=\\\"onChangeReminder($event)\\\">\\n              </ion-toggle>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row *ngIf=\\\"reminderTime !== undefined\\\" class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n          <ion-col sizeXs=\\\"4\\\" sizeSm=\\\"4\\\" sizeMd=\\\"7\\\" sizeLg=\\\"6\\\" sizeXl=\\\"4\\\" class=\\\"ion-text-center ion-align-self-center\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-toggle mode=\\\"ios\\\" checked=\\\"true\\\" (ionChange)=\\\"onChangeReminder($event)\\\"></ion-toggle>\\n            </ion-item>\\n            <a class=\\\"c-orange ion-margin-top\\\" (click)=\\\"setReminder()\\\">Edit</a>\\n          </ion-col>\\n        </ion-row>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","export default \".reminder-block {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  margin: auto;\\n  align-items: center;\\n  display: flex;\\n  justify-content: center;\\n}\\n.reminder-block ion-toggle {\\n  --background-checked: var(--color-orange);\\n  margin: 0 auto;\\n}\\n.reminder-block .alarm {\\n  font-size: 30px;\\n}\\n.reminder-block h3 {\\n  margin-top: 5px;\\n  font-weight: 400;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3JlbWluZGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLFNBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtBQUNGO0FBQ0U7RUFDRSx5Q0FBQTtFQUNBLGNBQUE7QUFDSjtBQUNFO0VBQ0UsZUFBQTtBQUNKO0FBQ0U7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7QUFDSiIsImZpbGUiOiJyZW1pbmRlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVtaW5kZXItYmxvY2sge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgbWFyZ2luOiBhdXRvO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuICBpb24tdG9nZ2xlIHtcbiAgICAtLWJhY2tncm91bmQtY2hlY2tlZDogdmFyKC0tY29sb3Itb3JhbmdlKTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxuICAuYWxhcm0ge1xuICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgfVxuICBoMyB7XG4gICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIH1cbn1cbiJdfQ== */\";","import {DatePicker} from '@ionic-native/date-picker/ngx'\nimport {NgModule} from '@angular/core'\nimport {CommonModule, DatePipe} from '@angular/common'\nimport {FormsModule} from '@angular/forms'\nimport {Routes, RouterModule} from '@angular/router'\n\nimport {IonicModule} from '@ionic/angular'\n\nimport {ReminderPage} from './reminder.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReminderPage,\n  },\n]\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, RouterModule.forChild(routes)],\n  declarations: [ReminderPage],\n  providers: [DatePicker, DatePipe],\n})\nexport class ReminderPageModule {}\n","import {DatePicker} from '@ionic-native/date-picker/ngx'\nimport {NavController, AlertController, Platform} from '@ionic/angular'\nimport {Router} from '@angular/router'\nimport {SharedService} from './../../../../services/shared.service'\nimport {Component, OnInit} from '@angular/core'\nimport {DatePipe} from '@angular/common'\nimport {Plugins} from '@capacitor/core'\nconst {LocalNotifications} = Plugins\n\n@Component({\n  selector: 'app-reminder',\n  templateUrl: './reminder.page.html',\n  styleUrls: ['./reminder.page.scss'],\n})\nexport class ReminderPage implements OnInit {\n  reminder: boolean = false\n  reminderTime\n  isDesktop = false\n  isStart = false\n\n  constructor(\n    public router: Router,\n    public alertController: AlertController,\n    private datePicker: DatePicker,\n    private datePipe: DatePipe,\n    public platform: Platform,\n    public sharedService: SharedService,\n    public navController: NavController,\n  ) {}\n  ngOnInit() {}\n\n  ionViewWillEnter() {\n    LocalNotifications.requestPermission()\n    Promise.all([this.sharedService.getNativeStorage('reminder')]).then(([reminder]) => {\n      if (reminder?.data) {\n        this.reminderTime = new Date(reminder.data).toISOString()\n        this.reminder = true\n        this.setReminderTime(new Date(reminder.data))\n      }\n    })\n  }\n\n  async setReminder() {\n    try {\n      const date = await this.datePicker.show({\n        date: new Date(),\n        mode: 'time',\n        androidTheme: this.datePicker.ANDROID_THEMES.THEME_DEVICE_DEFAULT_LIGHT,\n      })\n\n      this.sharedService.setNativeStorage('reminder', date.getTime())\n\n      await this.setReminderTime(date)\n      this.reminderTime = date.getTime()\n      this.reminder = true\n\n      const alert = await this.alertController.create({\n        header: 'Reminder is set!',\n        message:\n          'Perfect. We will send you a nudge at <strong>' +\n          this.datePipe.transform(date, 'h:mm a') +\n          '</strong> everyday',\n        cssClass: 'user-level-alert',\n        buttons: ['OK'],\n      })\n\n      await alert.present()\n    } catch (err) {\n      console.log('Error occurred while getting date: ', err)\n    }\n  }\n\n  onChangeReminder(event) {\n    console.log(event)\n    if (event.detail.checked === false) {\n      this.sharedService.removeNativeStorage('reminder')\n      this.reminder = false\n      this.reminderTime = undefined\n      LocalNotifications.cancel({notifications: [{id: '42'}]})\n    } else if (event.detail.checked) {\n      this.setReminder()\n    } else {\n      this.sharedService.removeNativeStorage('reminder')\n      this.reminderTime = undefined\n      LocalNotifications.cancel({notifications: [{id: '42'}]})\n    }\n  }\n\n  home() {\n    this.router.navigate(['/dashboard/lessons'])\n    this.navController.setDirection('root')\n  }\n\n  back() {\n    this.navController.setDirection('back')\n    this.router.navigate(['/setting'])\n  }\n\n  async setReminderTime(date) {\n    const time = new Date(date.getTime())\n    const notifs = await LocalNotifications.schedule({\n      notifications: [\n        {\n          id: 42,\n          title: 'SpeakyPeaky',\n          body: '20 mins a day = big gains in 3 months',\n          schedule: {\n            repeats: true,\n            every: 'day',\n            on: {\n              hour: time.getHours(),\n              minute: time.getMinutes(),\n            },\n          },\n          sound: null,\n          attachments: null,\n          actionTypeId: '',\n          extra: null,\n        },\n      ],\n    })\n\n    console.log('scheduled notifications', notifs)\n  }\n}\n"]}