{"version":3,"sources":["./src/reactapp/useStore.tsx","./src/reactapp/apollo-client.ts","fs (ignored)","./src/reactapp/types-and-hooks.tsx","./src/environments/environment.ts","./src/app/services/on-boarding.service.ts","./src/app/components/channel-io-mobile/channel-io-mobile.component.scss","./src/app/services/api.service.ts","./src/app/services/subscription.service.ts","./node_modules/@ionic/pwa-elements/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/components/channel-io-mobile/channel-io-mobile.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./node_modules/@ionic/angular/node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/services/auth.service.ts","./src/reactapp/typePolicies.ts","./src/app/services/lessons.service.ts","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/components/channel-io-mobile/channel-io-mobile.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/components/channel-io-mobile/channel-io-mobile.component.html","./src/app/services/shared.service.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {ActivatedRoute} from '@angular/router'\nimport {NavController, Platform} from '@ionic/angular'\nimport React from 'react'\nimport {MyDeviceInfo, SharedService} from 'src/app/services/shared.service'\nimport useFetch, {CachePolicies} from 'use-http'\nimport create from 'zustand'\nimport {client} from './apollo-client'\nimport {ApolloClient, NormalizedCacheObject} from '@apollo/client'\n\ntype State = {\n  client: ApolloClient<NormalizedCacheObject>\n  deviceInfo: MyDeviceInfo | null\n  navController: NavController | null\n  route: ActivatedRoute | null\n  platform: Platform | null\n  sharedService: SharedService | null\n  profile: any\n  setProfile: (profile: any) => void\n  // bears: number\n  // increase: (by: number) => void\n}\n\nexport const useStore = create<State>((set) => ({\n  // bears: 0,\n  deviceInfo: null,\n  client: client,\n  navController: null,\n  platform: null,\n  sharedService: null,\n  route: null,\n  profile: null,\n  setProfile: (profile: any) => set({profile}),\n\n  // increase: (by) => set((state) => ({bears: state.bears + by})),\n}))\n\nexport function useProfile() {\n  const profile = useStore((store) => store.profile)\n  const setProfile = useStore((store) => store.setProfile)\n\n  const {get, loading, error, cache} = useFetch(\n    '/user/get-profile',\n    {\n      cachePolicy: CachePolicies.NO_CACHE,\n      cacheLife: 1000,\n      onNewData: (curData, newData) => {\n        setProfile(newData?.data)\n      },\n    },\n    [],\n  )\n  function refetch() {\n    get()\n  }\n  // const profile = data?.data\n\n  return {profile, loading, error, get, cache, refetch}\n}\n","import {\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n  gql,\n  from,\n  makeVar,\n  TypePolicies,\n} from '@apollo/client'\nimport {setContext} from '@apollo/client/link/context'\nimport {onError} from '@apollo/client/link/error'\nimport {Plugins} from '@capacitor/core'\nimport {environment} from 'src/environments/environment'\n\nimport {localTypeDefs, typePolicies} from './typePolicies'\nexport {currentLessonIdVar, dictationsVar, recordsVar} from './typePolicies'\n\nconst {Storage} = Plugins\n\nasync function getNativeStorage(key) {\n  const ret = await Storage.get({key})\n  let value = JSON.parse(ret.value)\n  if (!value) {\n    value = {data: null}\n  }\n  return value\n}\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({message, locations, path}) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      ),\n    )\n\n  if (networkError) console.log(`[Network error]: ${networkError}`)\n})\n\nconst httpLink = createHttpLink({\n  // uri: 'http://localhost:4044/',\n  // uri: 'http://192.168.0.3:4044/',\n  uri: environment.GRAPHQL_URL,\n\n  //   uri: 'https://gql-dev.speakypeaky.com/',\n})\n\nconst authLink = setContext(async (_, {headers}) => {\n  // get the authentication token from local storage if it exists\n  const token = await getNativeStorage('token')\n\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token?.data ? token.data : '',\n    },\n  }\n})\n\nconst cache = new InMemoryCache({\n  typePolicies: typePolicies,\n})\n\nexport const client = new ApolloClient({\n  link: from([authLink, errorLink, httpLink]),\n  cache,\n  typeDefs: localTypeDefs,\n  // queryDeduplication: false,\n})\n","/* (ignored) */","import {gql} from '@apollo/client'\nimport * as Apollo from '@apollo/client'\nexport type Maybe<T> = T | null\nexport type Exact<T extends {[key: string]: unknown}> = {[K in keyof T]: T[K]}\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> &\n  {[SubKey in K]?: Maybe<T[SubKey]>}\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> &\n  {[SubKey in K]: Maybe<T[SubKey]>}\nconst defaultOptions = {}\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string\n  String: string\n  Boolean: boolean\n  Int: number\n  Float: number\n  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */\n  DateTime: any\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any\n}\n\nexport type AudioRecordResult = {\n  __typename?: 'AudioRecordResult'\n  audioAsBase64?: Maybe<Scalars['String']>\n  audioUrl?: Maybe<Scalars['String']>\n  sampleRate?: Maybe<Scalars['Int']>\n  stt?: Maybe<SpeechToTextResult>\n}\n\nexport type Course = {\n  __typename?: 'Course'\n  _id: Scalars['ID']\n  createdAt: Scalars['String']\n  introduction: Scalars['String']\n  isSingle: Scalars['String']\n  lessonCount: Scalars['Int']\n  lessonTopicId: Scalars['String']\n  lessons: Array<Lesson>\n  subLessons: Array<Scalars['JSON']>\n  tags: Scalars['String']\n  title?: Maybe<Scalars['String']>\n  topicDetails: Scalars['JSON']\n  topicTitle: Scalars['String']\n  updatedAt: Scalars['String']\n  videoLevel: LevelName\n  videoLevelLabel?: Maybe<Scalars['String']>\n  youtubeId: Scalars['String']\n}\n\nexport type Cred = {\n  userPlatform: Scalars['String']\n  email: Scalars['String']\n  password: Scalars['String']\n}\n\nexport type DictionaryResult = {\n  __typename?: 'DictionaryResult'\n  entry: Scalars['String']\n  meaning: DictionaryResultMeaning\n  ipa: Scalars['String']\n}\n\nexport type DictionaryResultMeaning = {\n  __typename?: 'DictionaryResultMeaning'\n  korean: Scalars['String']\n  noun: Scalars['String']\n  verb: Scalars['String']\n  adverb: Scalars['String']\n  adjective: Scalars['String']\n}\n\nexport type Lesson = {\n  __typename?: 'Lesson'\n  _id: Scalars['ID']\n  completedAt?: Maybe<Scalars['DateTime']>\n  course?: Maybe<Course>\n  courseId: Scalars['String']\n  createdAt: Scalars['String']\n  day?: Maybe<Scalars['String']>\n  endTime: Scalars['String']\n  introduction?: Maybe<Scalars['String']>\n  isCompleted?: Maybe<Scalars['Boolean']>\n  isDraft: Scalars['Boolean']\n  isMy?: Maybe<Scalars['Boolean']>\n  isSaved?: Maybe<Scalars['Boolean']>\n  isSingle?: Maybe<Scalars['String']>\n  lessonId: Scalars['String']\n  lessonName: Scalars['String']\n  lessonTopicId: Scalars['String']\n  phrases?: Maybe<Array<Phrase>>\n  savedCreatedAt?: Maybe<Scalars['String']>\n  scenes: Array<Scene>\n  /** @deprecated don't use anymore */\n  srtFile?: Maybe<Scalars['String']>\n  startTime: Scalars['String']\n  subCreatedAt: Scalars['String']\n  /** @deprecated wrong naming */\n  subLessonId: Scalars['String']\n  subUpdatedAt: Scalars['String']\n  tags?: Maybe<Scalars['String']>\n  title?: Maybe<Scalars['String']>\n  updatedAt: Scalars['String']\n  videoLevel?: Maybe<LevelName>\n  videoLevelLabel?: Maybe<Scalars['String']>\n  videoType?: Maybe<Scalars['String']>\n  youtubeId: Scalars['String']\n}\n\nexport type LessonCursorPage = {\n  __typename?: 'LessonCursorPage'\n  cursor?: Maybe<Scalars['String']>\n  hasMore?: Maybe<Scalars['Boolean']>\n  nodes: Array<Lesson>\n}\n\nexport type LessonPage = {\n  __typename?: 'LessonPage'\n  total: Scalars['Float']\n  totalLessons: Scalars['Float']\n  data: Array<Lesson>\n}\n\nexport type LessonProgress = {\n  __typename?: 'LessonProgress'\n  totalCount: Scalars['Int']\n  datetimes: Array<Scalars['DateTime']>\n  counts: Array<LessonProgressCount>\n}\n\nexport type LessonProgressCount = {\n  __typename?: 'LessonProgressCount'\n  type: Scalars['String']\n  count: Scalars['Int']\n  datetimes: Array<Scalars['DateTime']>\n}\n\nexport type LessonReport = {\n  message: Scalars['String']\n  scene: Scalars['Float']\n  step: Scalars['String']\n  lessonName: Scalars['String']\n  userPlatform: Scalars['String']\n}\n\nexport type Level = {\n  __typename?: 'Level'\n  _id: Scalars['ID']\n  name: Scalars['String']\n}\n\nexport enum LevelName {\n  UpperBeginner = 'UpperBeginner',\n  Intermediate = 'Intermediate',\n  Advanced = 'Advanced',\n}\n\nexport type Meaning = {\n  __typename?: 'Meaning'\n  lang: Scalars['String']\n  meaning: Scalars['String']\n}\n\nexport type Mutation = {\n  __typename?: 'Mutation'\n  addToMyLesson?: Maybe<Lesson>\n  /** return ID */\n  deleteNote: Scalars['String']\n  login?: Maybe<Scalars['String']>\n  reportLessonIssue?: Maybe<Scalars['Boolean']>\n  setLessonCompleted?: Maybe<Lesson>\n  setLessonSaved?: Maybe<Lesson>\n  setLevel: User\n  setNote?: Maybe<Scalars['String']>\n  updateDictation?: Maybe<Scalars['String']>\n  uploadProfilePicture: User\n}\n\nexport type MutationAddToMyLessonArgs = {\n  lessonId: Scalars['String']\n}\n\nexport type MutationDeleteNoteArgs = {\n  id: Scalars['String']\n}\n\nexport type MutationLoginArgs = {\n  cred: Cred\n}\n\nexport type MutationReportLessonIssueArgs = {\n  report: LessonReport\n}\n\nexport type MutationSetLessonCompletedArgs = {\n  lessonId: Scalars['String']\n}\n\nexport type MutationSetLessonSavedArgs = {\n  isSave: Scalars['Boolean']\n  lessonId: Scalars['String']\n}\n\nexport type MutationSetLevelArgs = {\n  levelName: LevelName\n}\n\nexport type MutationSetNoteArgs = {\n  wordData: WordData\n}\n\nexport type MutationUpdateDictationArgs = {\n  id: Scalars['ID']\n}\n\nexport type MutationUploadProfilePictureArgs = {\n  imageBase64: Scalars['String']\n}\n\nexport type NativeLanguage = {\n  __typename?: 'NativeLanguage'\n  _id: Scalars['ID']\n  languageKey: Scalars['String']\n  languageName: Scalars['String']\n}\n\nexport type Phrase = {\n  __typename?: 'Phrase'\n  word: Scalars['String']\n  meaning: Scalars['String']\n  meanings: Array<Meaning>\n}\n\nexport type Query = {\n  __typename?: 'Query'\n  completedLessons: Array<Lesson>\n  course?: Maybe<Course>\n  currentLessonId?: Maybe<Scalars['String']>\n  dictation?: Maybe<Scalars['String']>\n  dictionary?: Maybe<DictionaryResult>\n  draftLessons?: Maybe<LessonPage>\n  getNotes?: Maybe<WordNotePage>\n  healthCheck?: Maybe<Scalars['String']>\n  lesson?: Maybe<Lesson>\n  levels?: Maybe<Array<Level>>\n  moreCompletedLessons: LessonCursorPage\n  moreNotes?: Maybe<WordNoteCursorPage>\n  myCourses?: Maybe<Array<Course>>\n  newUploadLessons?: Maybe<LessonPage>\n  popularLessons?: Maybe<LessonPage>\n  profile?: Maybe<User>\n  progressState: LessonProgress\n  records?: Maybe<Array<Maybe<AudioRecordResult>>>\n  savedLessons?: Maybe<LessonPage>\n  subscription?: Maybe<Subscription>\n  todayLesson?: Maybe<Lesson>\n  user?: Maybe<User>\n  userGuide: UserGuide\n}\n\nexport type QueryCompletedLessonsArgs = {\n  end?: Maybe<Scalars['DateTime']>\n  start?: Maybe<Scalars['DateTime']>\n}\n\nexport type QueryCourseArgs = {\n  id: Scalars['String']\n}\n\nexport type QueryDictationArgs = {\n  sceneIdx: Scalars['Int']\n}\n\nexport type QueryDictionaryArgs = {\n  search: Scalars['String']\n}\n\nexport type QueryDraftLessonsArgs = {\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryGetNotesArgs = {\n  size?: Maybe<Scalars['Int']>\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryLessonArgs = {\n  id: Scalars['String']\n}\n\nexport type QueryMoreCompletedLessonsArgs = {\n  size: Scalars['Int']\n  cursor?: Maybe<Scalars['String']>\n}\n\nexport type QueryMoreNotesArgs = {\n  size: Scalars['Int']\n  cursor?: Maybe<Scalars['String']>\n}\n\nexport type QueryMyCoursesArgs = {\n  size?: Maybe<Scalars['Int']>\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryNewUploadLessonsArgs = {\n  videoLevel: LevelName\n  day: Scalars['String']\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryPopularLessonsArgs = {\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryRecordsArgs = {\n  sceneIdx: Scalars['Int']\n}\n\nexport type QuerySavedLessonsArgs = {\n  page?: Maybe<Scalars['Int']>\n}\n\nexport type QueryTodayLessonArgs = {\n  day: Scalars['String']\n}\n\nexport type QueryUserArgs = {\n  id: Scalars['String']\n}\n\nexport type Scene = {\n  __typename?: 'Scene'\n  start: Scalars['Float']\n  end: Scalars['Float']\n  langs: Scalars['JSON']\n}\n\nexport type SpeechToTextResult = {\n  __typename?: 'SpeechToTextResult'\n  error?: Maybe<Scalars['Boolean']>\n  confidence?: Maybe<Scalars['Float']>\n  transcript?: Maybe<Scalars['String']>\n  percent?: Maybe<Scalars['Float']>\n}\n\nexport type Subscription = {\n  __typename?: 'Subscription'\n  type: Scalars['String']\n}\n\nexport type User = {\n  __typename?: 'User'\n  _id: Scalars['ID']\n  status?: Maybe<Scalars['String']>\n  currentPackage?: Maybe<Scalars['String']>\n  subscriptionType?: Maybe<Scalars['String']>\n  completedLesson?: Maybe<Scalars['Int']>\n  subscriptionLesson?: Maybe<Scalars['Int']>\n  trialLessonLimit?: Maybe<Scalars['Int']>\n  extraSubscriptionLesson?: Maybe<Scalars['Int']>\n  isLevel?: Maybe<Scalars['Boolean']>\n  isAdmin?: Maybe<Scalars['Boolean']>\n  signupType?: Maybe<Scalars['String']>\n  fullName?: Maybe<Scalars['String']>\n  email?: Maybe<Scalars['String']>\n  platform?: Maybe<Scalars['String']>\n  userLevelId?: Maybe<Scalars['String']>\n  userLevelName?: Maybe<LevelName>\n  stripeSandBoxCustomerId?: Maybe<Scalars['String']>\n  stripeLiveCustomerId?: Maybe<Scalars['String']>\n  subscriptionProductId?: Maybe<Scalars['String']>\n  androidPurchaseToken?: Maybe<Scalars['String']>\n  iOSPurchaseToken?: Maybe<Scalars['String']>\n  subTitleLanguage?: Maybe<Scalars['String']>\n  userSubscriptionStartDate?: Maybe<Scalars['String']>\n  userSubscriptionEndDate?: Maybe<Scalars['String']>\n  profilePic?: Maybe<Scalars['String']>\n  nativeLanguage?: Maybe<NativeLanguage>\n  isPasswordExists?: Maybe<Scalars['Boolean']>\n  total?: Maybe<Scalars['Float']>\n}\n\nexport type UserGuide = {\n  __typename?: 'UserGuide'\n  introduction: Scalars['String']\n  youtubeId: Scalars['String']\n}\n\nexport type WordData = {\n  word: Scalars['String']\n  meaning: Scalars['String']\n  kor: Scalars['String']\n  noun: Scalars['String']\n  verb: Scalars['String']\n  adv: Scalars['String']\n  adj: Scalars['String']\n}\n\nexport type WordNote = {\n  __typename?: 'WordNote'\n  _id: Scalars['ID']\n  userId: Scalars['String']\n  word: Scalars['String']\n  meaning: Scalars['String']\n  kor: Scalars['String']\n  noun: Scalars['String']\n  verb: Scalars['String']\n  adv: Scalars['String']\n  adj: Scalars['String']\n  createdAt: Scalars['DateTime']\n}\n\nexport type WordNoteCursorPage = {\n  __typename?: 'WordNoteCursorPage'\n  cursor?: Maybe<Scalars['String']>\n  hasMore?: Maybe<Scalars['Boolean']>\n  nodes: Array<WordNote>\n}\n\nexport type WordNotePage = {\n  __typename?: 'WordNotePage'\n  page: Scalars['Float']\n  size: Scalars['Float']\n  total: Scalars['Float']\n  totalPage: Scalars['Float']\n  data: Array<WordNote>\n}\n\nexport type GetProfileQueryVariables = Exact<{[key: string]: never}>\n\nexport type GetProfileQuery = {__typename?: 'Query'} & {\n  profile?: Maybe<\n    {__typename?: 'User'} & Pick<\n      User,\n      | '_id'\n      | 'status'\n      | 'completedLesson'\n      | 'subscriptionLesson'\n      | 'currentPackage'\n      | 'subscriptionType'\n      | 'trialLessonLimit'\n      | 'isLevel'\n      | 'isAdmin'\n      | 'signupType'\n      | 'fullName'\n      | 'email'\n      | 'platform'\n      | 'userLevelId'\n      | 'userLevelName'\n      | 'stripeSandBoxCustomerId'\n      | 'stripeLiveCustomerId'\n      | 'extraSubscriptionLesson'\n      | 'subscriptionProductId'\n      | 'subTitleLanguage'\n      | 'userSubscriptionStartDate'\n      | 'userSubscriptionEndDate'\n      | 'profilePic'\n      | 'total'\n    > & {\n        nativeLanguage?: Maybe<\n          {__typename?: 'NativeLanguage'} & Pick<\n            NativeLanguage,\n            '_id' | 'languageKey' | 'languageName'\n          >\n        >\n      }\n  >\n}\n\nexport type PopularLessonsQueryVariables = Exact<{[key: string]: never}>\n\nexport type PopularLessonsQuery = {__typename?: 'Query'} & {\n  popularLessons?: Maybe<\n    {__typename?: 'LessonPage'} & Pick<LessonPage, 'total' | 'totalLessons'> & {\n        data: Array<\n          {__typename?: 'Lesson'} & Pick<\n            Lesson,\n            | 'subLessonId'\n            | 'lessonName'\n            | 'srtFile'\n            | 'startTime'\n            | 'endTime'\n            | 'createdAt'\n            | 'updatedAt'\n            | 'lessonId'\n            | 'videoLevel'\n            | 'videoLevelLabel'\n            | 'youtubeId'\n            | 'title'\n            | 'introduction'\n            | 'tags'\n            | 'isSingle'\n            | 'day'\n            | 'savedCreatedAt'\n            | 'isCompleted'\n          >\n        >\n      }\n  >\n}\n\nexport type LessonFieldsFragment = {__typename?: 'Lesson'} & Pick<\n  Lesson,\n  | '_id'\n  | 'subLessonId'\n  | 'lessonName'\n  | 'srtFile'\n  | 'startTime'\n  | 'endTime'\n  | 'createdAt'\n  | 'updatedAt'\n  | 'lessonId'\n  | 'videoLevel'\n  | 'videoLevelLabel'\n  | 'videoType'\n  | 'youtubeId'\n  | 'title'\n  | 'introduction'\n  | 'tags'\n  | 'isSingle'\n  | 'day'\n  | 'savedCreatedAt'\n  | 'isCompleted'\n>\n\nexport type DashboardLessonFieldsFragment = {__typename?: 'Lesson'} & Pick<\n  Lesson,\n  '_id' | 'lessonName' | 'videoLevel' | 'videoLevelLabel' | 'videoType' | 'youtubeId'\n>\n\nexport type MyCoursesQueryVariables = Exact<{\n  page: Scalars['Int']\n}>\n\nexport type MyCoursesQuery = {__typename?: 'Query'} & {\n  myCourses?: Maybe<\n    Array<\n      {__typename?: 'Course'} & Pick<\n        Course,\n        | '_id'\n        | 'title'\n        | 'introduction'\n        | 'youtubeId'\n        | 'videoLevel'\n        | 'videoLevelLabel'\n        | 'topicTitle'\n        | 'lessonCount'\n      >\n    >\n  >\n}\n\nexport type GetDashboardQueryVariables = Exact<{\n  day: Scalars['String']\n  videoLevel: LevelName\n}>\n\nexport type GetDashboardQuery = {__typename?: 'Query'} & {\n  todayLesson?: Maybe<{__typename?: 'Lesson'} & DashboardLessonFieldsFragment>\n  popularLessons?: Maybe<\n    {__typename?: 'LessonPage'} & Pick<LessonPage, 'total' | 'totalLessons'> & {\n        data: Array<{__typename?: 'Lesson'} & DashboardLessonFieldsFragment>\n      }\n  >\n  savedLessons?: Maybe<\n    {__typename?: 'LessonPage'} & Pick<LessonPage, 'total' | 'totalLessons'> & {\n        data: Array<{__typename?: 'Lesson'} & DashboardLessonFieldsFragment>\n      }\n  >\n  myCourses?: Maybe<\n    Array<\n      {__typename?: 'Course'} & Pick<\n        Course,\n        | '_id'\n        | 'title'\n        | 'introduction'\n        | 'youtubeId'\n        | 'videoLevel'\n        | 'videoLevelLabel'\n        | 'topicTitle'\n        | 'lessonCount'\n      >\n    >\n  >\n  newUploadLessons?: Maybe<\n    {__typename?: 'LessonPage'} & Pick<LessonPage, 'total' | 'totalLessons'> & {\n        data: Array<{__typename?: 'Lesson'} & DashboardLessonFieldsFragment>\n      }\n  >\n}\n\nexport type GetDashboardDraftLessonsQueryVariables = Exact<{[key: string]: never}>\n\nexport type GetDashboardDraftLessonsQuery = {__typename?: 'Query'} & {\n  draftLessons?: Maybe<\n    {__typename?: 'LessonPage'} & Pick<LessonPage, 'total' | 'totalLessons'> & {\n        data: Array<{__typename?: 'Lesson'} & LessonFieldsFragment>\n      }\n  >\n}\n\nexport type GetLessonDeatilQueryVariables = Exact<{\n  id: Scalars['String']\n}>\n\nexport type GetLessonDeatilQuery = {__typename?: 'Query'} & Pick<\n  Query,\n  'currentLessonId'\n> & {\n    lesson?: Maybe<\n      {__typename?: 'Lesson'} & Pick<\n        Lesson,\n        | '_id'\n        | 'lessonId'\n        | 'courseId'\n        | 'youtubeId'\n        | 'lessonName'\n        | 'isSaved'\n        | 'isCompleted'\n        | 'title'\n        | 'tags'\n        | 'videoLevel'\n        | 'videoLevelLabel'\n        | 'introduction'\n        | 'isMy'\n      > & {\n          scenes: Array<{__typename?: 'Scene'} & Pick<Scene, 'start' | 'end' | 'langs'>>\n          phrases?: Maybe<\n            Array<\n              {__typename?: 'Phrase'} & Pick<Phrase, 'word' | 'meaning'> & {\n                  meanings: Array<\n                    {__typename?: 'Meaning'} & Pick<Meaning, 'lang' | 'meaning'>\n                  >\n                }\n            >\n          >\n        }\n    >\n  }\n\nexport type SetLessonSavedMutationVariables = Exact<{\n  id: Scalars['String']\n  isSave: Scalars['Boolean']\n}>\n\nexport type SetLessonSavedMutation = {__typename?: 'Mutation'} & {\n  setLessonSaved?: Maybe<{__typename?: 'Lesson'} & Pick<Lesson, '_id' | 'isSaved'>>\n}\n\nexport type SetLessonCompletedMutationVariables = Exact<{\n  lessonId: Scalars['String']\n}>\n\nexport type SetLessonCompletedMutation = {__typename?: 'Mutation'} & {\n  setLessonCompleted?: Maybe<\n    {__typename?: 'Lesson'} & Pick<Lesson, '_id' | 'isCompleted'>\n  >\n}\n\nexport type GetCourseQueryVariables = Exact<{\n  id: Scalars['String']\n}>\n\nexport type GetCourseQuery = {__typename?: 'Query'} & {\n  course?: Maybe<\n    {__typename?: 'Course'} & Pick<\n      Course,\n      | '_id'\n      | 'tags'\n      | 'title'\n      | 'introduction'\n      | 'topicTitle'\n      | 'videoLevel'\n      | 'videoLevelLabel'\n      | 'youtubeId'\n    > & {\n        lessons: Array<\n          {__typename?: 'Lesson'} & Pick<Lesson, '_id' | 'lessonName' | 'completedAt'> & {\n              scenes: Array<{__typename?: 'Scene'} & Pick<Scene, 'start' | 'end'>>\n            }\n        >\n      }\n  >\n}\n\nexport type AddToMyLessonMutationVariables = Exact<{\n  lessonId: Scalars['String']\n}>\n\nexport type AddToMyLessonMutation = {__typename?: 'Mutation'} & {\n  addToMyLesson?: Maybe<{__typename?: 'Lesson'} & Pick<Lesson, '_id' | 'isMy'>>\n}\n\nexport type SetNoteMutationVariables = Exact<{\n  wordData: WordData\n}>\n\nexport type SetNoteMutation = {__typename?: 'Mutation'} & Pick<Mutation, 'setNote'>\n\nexport type ReportLessonIssueMutationVariables = Exact<{\n  report: LessonReport\n}>\n\nexport type ReportLessonIssueMutation = {__typename?: 'Mutation'} & Pick<\n  Mutation,\n  'reportLessonIssue'\n>\n\nexport type SearchDictionaryQueryVariables = Exact<{\n  search: Scalars['String']\n}>\n\nexport type SearchDictionaryQuery = {__typename?: 'Query'} & {\n  dictionary?: Maybe<\n    {__typename?: 'DictionaryResult'} & Pick<DictionaryResult, 'entry' | 'ipa'> & {\n        meaning: {__typename?: 'DictionaryResultMeaning'} & Pick<\n          DictionaryResultMeaning,\n          'korean' | 'noun' | 'verb' | 'adverb' | 'adjective'\n        >\n      }\n  >\n}\n\nexport type GetDictationQueryVariables = Exact<{\n  sceneIdx: Scalars['Int']\n}>\n\nexport type GetDictationQuery = {__typename?: 'Query'} & Pick<Query, 'dictation'>\n\nexport type GetRecordsQueryVariables = Exact<{\n  sceneIdx: Scalars['Int']\n}>\n\nexport type GetRecordsQuery = {__typename?: 'Query'} & {\n  records?: Maybe<\n    Array<\n      Maybe<\n        {__typename?: 'AudioRecordResult'} & Pick<\n          AudioRecordResult,\n          'audioAsBase64' | 'audioUrl' | 'sampleRate'\n        > & {\n            stt?: Maybe<\n              {__typename?: 'SpeechToTextResult'} & Pick<\n                SpeechToTextResult,\n                'error' | 'confidence' | 'transcript' | 'percent'\n              >\n            >\n          }\n      >\n    >\n  >\n}\n\nexport type GetNotesQueryVariables = Exact<{\n  size: Scalars['Int']\n  page: Scalars['Int']\n}>\n\nexport type GetNotesQuery = {__typename?: 'Query'} & {\n  getNotes?: Maybe<\n    {__typename?: 'WordNotePage'} & Pick<\n      WordNotePage,\n      'page' | 'size' | 'total' | 'totalPage'\n    > & {\n        data: Array<\n          {__typename?: 'WordNote'} & Pick<WordNote, '_id' | 'word' | 'meaning'>\n        >\n      }\n  >\n}\n\nexport type MoreNotesQueryVariables = Exact<{\n  cursor?: Maybe<Scalars['String']>\n  size: Scalars['Int']\n}>\n\nexport type MoreNotesQuery = {__typename?: 'Query'} & {\n  moreNotes?: Maybe<\n    {__typename?: 'WordNoteCursorPage'} & Pick<\n      WordNoteCursorPage,\n      'cursor' | 'hasMore'\n    > & {\n        nodes: Array<\n          {__typename?: 'WordNote'} & Pick<\n            WordNote,\n            '_id' | 'word' | 'meaning' | 'kor' | 'noun' | 'verb' | 'adv' | 'adj'\n          >\n        >\n      }\n  >\n}\n\nexport type DeleteNoteMutationVariables = Exact<{\n  id: Scalars['String']\n}>\n\nexport type DeleteNoteMutation = {__typename?: 'Mutation'} & Pick<Mutation, 'deleteNote'>\n\nexport type GerReviewCompletedLessonsQueryVariables = Exact<{\n  cursor?: Maybe<Scalars['String']>\n  size: Scalars['Int']\n}>\n\nexport type GerReviewCompletedLessonsQuery = {__typename?: 'Query'} & {\n  moreCompletedLessons: {__typename?: 'LessonCursorPage'} & Pick<\n    LessonCursorPage,\n    'cursor' | 'hasMore'\n  > & {\n      nodes: Array<\n        {__typename?: 'Lesson'} & Pick<\n          Lesson,\n          | '_id'\n          | 'lessonName'\n          | 'completedAt'\n          | 'videoLevel'\n          | 'videoLevelLabel'\n          | 'videoType'\n          | 'youtubeId'\n        >\n      >\n    }\n}\n\nexport type UploadProfilePictureMutationVariables = Exact<{\n  imageBase64: Scalars['String']\n}>\n\nexport type UploadProfilePictureMutation = {__typename?: 'Mutation'} & {\n  uploadProfilePicture: {__typename?: 'User'} & Pick<User, '_id' | 'profilePic'>\n}\n\nexport type GetUserProgressQueryVariables = Exact<{[key: string]: never}>\n\nexport type GetUserProgressQuery = {__typename?: 'Query'} & {\n  progressState: {__typename?: 'LessonProgress'} & Pick<\n    LessonProgress,\n    'totalCount' | 'datetimes'\n  > & {\n      counts: Array<\n        {__typename?: 'LessonProgressCount'} & Pick<LessonProgressCount, 'type' | 'count'>\n      >\n    }\n}\n\nexport type GetLevelsQueryVariables = Exact<{[key: string]: never}>\n\nexport type GetLevelsQuery = {__typename?: 'Query'} & {\n  levels?: Maybe<Array<{__typename?: 'Level'} & Pick<Level, '_id' | 'name'>>>\n}\n\nexport type SetLevelMutationVariables = Exact<{\n  levelName: LevelName\n}>\n\nexport type SetLevelMutation = {__typename?: 'Mutation'} & {\n  setLevel: {__typename?: 'User'} & Pick<User, '_id' | 'userLevelId' | 'userLevelName'>\n}\n\nexport type GetUserGuideQueryVariables = Exact<{[key: string]: never}>\n\nexport type GetUserGuideQuery = {__typename?: 'Query'} & {\n  userGuide: {__typename?: 'UserGuide'} & Pick<UserGuide, 'introduction' | 'youtubeId'>\n}\n\nexport const LessonFieldsFragmentDoc = gql`\n  fragment LessonFields on Lesson {\n    _id\n    subLessonId\n    lessonName\n    srtFile\n    startTime\n    endTime\n    createdAt\n    updatedAt\n    lessonId\n    videoLevel\n    videoLevelLabel @client\n    videoType\n    youtubeId\n    title\n    introduction\n    tags\n    isSingle\n    day\n    savedCreatedAt\n    isCompleted\n  }\n`\nexport const DashboardLessonFieldsFragmentDoc = gql`\n  fragment DashboardLessonFields on Lesson {\n    _id\n    lessonName\n    videoLevel\n    videoLevelLabel @client\n    videoType\n    youtubeId\n  }\n`\nexport const GetProfileDocument = gql`\n  query getProfile {\n    profile {\n      _id\n      status\n      completedLesson\n      subscriptionLesson\n      currentPackage\n      subscriptionType\n      trialLessonLimit\n      isLevel\n      isAdmin\n      signupType\n      fullName\n      email\n      platform\n      userLevelId\n      userLevelName\n      stripeSandBoxCustomerId\n      stripeLiveCustomerId\n      extraSubscriptionLesson\n      subscriptionProductId\n      subTitleLanguage\n      userSubscriptionStartDate\n      userSubscriptionEndDate\n      profilePic\n      nativeLanguage {\n        _id\n        languageKey\n        languageName\n      }\n      total\n    }\n  }\n`\n\n/**\n * __useGetProfileQuery__\n *\n * To run a query within a React component, call `useGetProfileQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetProfileQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetProfileQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetProfileQuery(\n  baseOptions?: Apollo.QueryHookOptions<GetProfileQuery, GetProfileQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetProfileQuery, GetProfileQueryVariables>(\n    GetProfileDocument,\n    options,\n  )\n}\nexport function useGetProfileLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetProfileQuery, GetProfileQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetProfileQuery, GetProfileQueryVariables>(\n    GetProfileDocument,\n    options,\n  )\n}\nexport type GetProfileQueryHookResult = ReturnType<typeof useGetProfileQuery>\nexport type GetProfileLazyQueryHookResult = ReturnType<typeof useGetProfileLazyQuery>\nexport type GetProfileQueryResult = Apollo.QueryResult<\n  GetProfileQuery,\n  GetProfileQueryVariables\n>\nexport const PopularLessonsDocument = gql`\n  query popularLessons {\n    popularLessons {\n      total\n      totalLessons\n      data {\n        subLessonId\n        lessonName\n        srtFile\n        startTime\n        endTime\n        createdAt\n        updatedAt\n        lessonId\n        videoLevel\n        videoLevelLabel @client\n        youtubeId\n        title\n        introduction\n        tags\n        isSingle\n        day\n        savedCreatedAt\n        isCompleted\n      }\n    }\n  }\n`\n\n/**\n * __usePopularLessonsQuery__\n *\n * To run a query within a React component, call `usePopularLessonsQuery` and pass it any options that fit your needs.\n * When your component renders, `usePopularLessonsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePopularLessonsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function usePopularLessonsQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    PopularLessonsQuery,\n    PopularLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<PopularLessonsQuery, PopularLessonsQueryVariables>(\n    PopularLessonsDocument,\n    options,\n  )\n}\nexport function usePopularLessonsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    PopularLessonsQuery,\n    PopularLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<PopularLessonsQuery, PopularLessonsQueryVariables>(\n    PopularLessonsDocument,\n    options,\n  )\n}\nexport type PopularLessonsQueryHookResult = ReturnType<typeof usePopularLessonsQuery>\nexport type PopularLessonsLazyQueryHookResult = ReturnType<\n  typeof usePopularLessonsLazyQuery\n>\nexport type PopularLessonsQueryResult = Apollo.QueryResult<\n  PopularLessonsQuery,\n  PopularLessonsQueryVariables\n>\nexport const MyCoursesDocument = gql`\n  query myCourses($page: Int!) {\n    myCourses(page: $page) {\n      _id\n      title\n      introduction\n      youtubeId\n      videoLevel\n      videoLevelLabel @client\n      topicTitle\n      lessonCount\n    }\n  }\n`\n\n/**\n * __useMyCoursesQuery__\n *\n * To run a query within a React component, call `useMyCoursesQuery` and pass it any options that fit your needs.\n * When your component renders, `useMyCoursesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMyCoursesQuery({\n *   variables: {\n *      page: // value for 'page'\n *   },\n * });\n */\nexport function useMyCoursesQuery(\n  baseOptions: Apollo.QueryHookOptions<MyCoursesQuery, MyCoursesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<MyCoursesQuery, MyCoursesQueryVariables>(\n    MyCoursesDocument,\n    options,\n  )\n}\nexport function useMyCoursesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<MyCoursesQuery, MyCoursesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<MyCoursesQuery, MyCoursesQueryVariables>(\n    MyCoursesDocument,\n    options,\n  )\n}\nexport type MyCoursesQueryHookResult = ReturnType<typeof useMyCoursesQuery>\nexport type MyCoursesLazyQueryHookResult = ReturnType<typeof useMyCoursesLazyQuery>\nexport type MyCoursesQueryResult = Apollo.QueryResult<\n  MyCoursesQuery,\n  MyCoursesQueryVariables\n>\nexport const GetDashboardDocument = gql`\n  query getDashboard($day: String!, $videoLevel: LevelName!) {\n    todayLesson(day: $day) {\n      ...DashboardLessonFields\n    }\n    popularLessons {\n      total\n      totalLessons\n      data {\n        ...DashboardLessonFields\n      }\n    }\n    savedLessons {\n      total\n      totalLessons\n      data {\n        ...DashboardLessonFields\n      }\n    }\n    myCourses(size: 3) {\n      _id\n      title\n      introduction\n      youtubeId\n      videoLevel\n      videoLevelLabel @client\n      topicTitle\n      lessonCount\n    }\n    newUploadLessons(day: $day, videoLevel: $videoLevel) {\n      total\n      totalLessons\n      data {\n        ...DashboardLessonFields\n      }\n    }\n  }\n  ${DashboardLessonFieldsFragmentDoc}\n`\n\n/**\n * __useGetDashboardQuery__\n *\n * To run a query within a React component, call `useGetDashboardQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetDashboardQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetDashboardQuery({\n *   variables: {\n *      day: // value for 'day'\n *      videoLevel: // value for 'videoLevel'\n *   },\n * });\n */\nexport function useGetDashboardQuery(\n  baseOptions: Apollo.QueryHookOptions<GetDashboardQuery, GetDashboardQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetDashboardQuery, GetDashboardQueryVariables>(\n    GetDashboardDocument,\n    options,\n  )\n}\nexport function useGetDashboardLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetDashboardQuery,\n    GetDashboardQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetDashboardQuery, GetDashboardQueryVariables>(\n    GetDashboardDocument,\n    options,\n  )\n}\nexport type GetDashboardQueryHookResult = ReturnType<typeof useGetDashboardQuery>\nexport type GetDashboardLazyQueryHookResult = ReturnType<typeof useGetDashboardLazyQuery>\nexport type GetDashboardQueryResult = Apollo.QueryResult<\n  GetDashboardQuery,\n  GetDashboardQueryVariables\n>\nexport const GetDashboardDraftLessonsDocument = gql`\n  query getDashboardDraftLessons {\n    draftLessons {\n      total\n      totalLessons\n      data {\n        ...LessonFields\n      }\n    }\n  }\n  ${LessonFieldsFragmentDoc}\n`\n\n/**\n * __useGetDashboardDraftLessonsQuery__\n *\n * To run a query within a React component, call `useGetDashboardDraftLessonsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetDashboardDraftLessonsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetDashboardDraftLessonsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetDashboardDraftLessonsQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    GetDashboardDraftLessonsQuery,\n    GetDashboardDraftLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<\n    GetDashboardDraftLessonsQuery,\n    GetDashboardDraftLessonsQueryVariables\n  >(GetDashboardDraftLessonsDocument, options)\n}\nexport function useGetDashboardDraftLessonsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetDashboardDraftLessonsQuery,\n    GetDashboardDraftLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<\n    GetDashboardDraftLessonsQuery,\n    GetDashboardDraftLessonsQueryVariables\n  >(GetDashboardDraftLessonsDocument, options)\n}\nexport type GetDashboardDraftLessonsQueryHookResult = ReturnType<\n  typeof useGetDashboardDraftLessonsQuery\n>\nexport type GetDashboardDraftLessonsLazyQueryHookResult = ReturnType<\n  typeof useGetDashboardDraftLessonsLazyQuery\n>\nexport type GetDashboardDraftLessonsQueryResult = Apollo.QueryResult<\n  GetDashboardDraftLessonsQuery,\n  GetDashboardDraftLessonsQueryVariables\n>\nexport const GetLessonDeatilDocument = gql`\n  query getLessonDeatil($id: String!) {\n    currentLessonId @client\n    lesson(id: $id) {\n      _id\n      lessonId\n      courseId\n      youtubeId\n      lessonName\n      isSaved\n      isCompleted\n      title\n      tags\n      videoLevel\n      videoLevelLabel @client\n      introduction\n      isMy\n      scenes {\n        start\n        end\n        langs\n      }\n      phrases {\n        word\n        meaning\n        meanings {\n          lang\n          meaning\n        }\n      }\n    }\n  }\n`\n\n/**\n * __useGetLessonDeatilQuery__\n *\n * To run a query within a React component, call `useGetLessonDeatilQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetLessonDeatilQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetLessonDeatilQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useGetLessonDeatilQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    GetLessonDeatilQuery,\n    GetLessonDeatilQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetLessonDeatilQuery, GetLessonDeatilQueryVariables>(\n    GetLessonDeatilDocument,\n    options,\n  )\n}\nexport function useGetLessonDeatilLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetLessonDeatilQuery,\n    GetLessonDeatilQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetLessonDeatilQuery, GetLessonDeatilQueryVariables>(\n    GetLessonDeatilDocument,\n    options,\n  )\n}\nexport type GetLessonDeatilQueryHookResult = ReturnType<typeof useGetLessonDeatilQuery>\nexport type GetLessonDeatilLazyQueryHookResult = ReturnType<\n  typeof useGetLessonDeatilLazyQuery\n>\nexport type GetLessonDeatilQueryResult = Apollo.QueryResult<\n  GetLessonDeatilQuery,\n  GetLessonDeatilQueryVariables\n>\nexport const SetLessonSavedDocument = gql`\n  mutation setLessonSaved($id: String!, $isSave: Boolean!) {\n    setLessonSaved(lessonId: $id, isSave: $isSave) {\n      _id\n      isSaved\n    }\n  }\n`\nexport type SetLessonSavedMutationFn = Apollo.MutationFunction<\n  SetLessonSavedMutation,\n  SetLessonSavedMutationVariables\n>\n\n/**\n * __useSetLessonSavedMutation__\n *\n * To run a mutation, you first call `useSetLessonSavedMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSetLessonSavedMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [setLessonSavedMutation, { data, loading, error }] = useSetLessonSavedMutation({\n *   variables: {\n *      id: // value for 'id'\n *      isSave: // value for 'isSave'\n *   },\n * });\n */\nexport function useSetLessonSavedMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    SetLessonSavedMutation,\n    SetLessonSavedMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<SetLessonSavedMutation, SetLessonSavedMutationVariables>(\n    SetLessonSavedDocument,\n    options,\n  )\n}\nexport type SetLessonSavedMutationHookResult = ReturnType<\n  typeof useSetLessonSavedMutation\n>\nexport type SetLessonSavedMutationResult = Apollo.MutationResult<SetLessonSavedMutation>\nexport type SetLessonSavedMutationOptions = Apollo.BaseMutationOptions<\n  SetLessonSavedMutation,\n  SetLessonSavedMutationVariables\n>\nexport const SetLessonCompletedDocument = gql`\n  mutation setLessonCompleted($lessonId: String!) {\n    setLessonCompleted(lessonId: $lessonId) {\n      _id\n      isCompleted\n    }\n  }\n`\nexport type SetLessonCompletedMutationFn = Apollo.MutationFunction<\n  SetLessonCompletedMutation,\n  SetLessonCompletedMutationVariables\n>\n\n/**\n * __useSetLessonCompletedMutation__\n *\n * To run a mutation, you first call `useSetLessonCompletedMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSetLessonCompletedMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [setLessonCompletedMutation, { data, loading, error }] = useSetLessonCompletedMutation({\n *   variables: {\n *      lessonId: // value for 'lessonId'\n *   },\n * });\n */\nexport function useSetLessonCompletedMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    SetLessonCompletedMutation,\n    SetLessonCompletedMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<\n    SetLessonCompletedMutation,\n    SetLessonCompletedMutationVariables\n  >(SetLessonCompletedDocument, options)\n}\nexport type SetLessonCompletedMutationHookResult = ReturnType<\n  typeof useSetLessonCompletedMutation\n>\nexport type SetLessonCompletedMutationResult = Apollo.MutationResult<SetLessonCompletedMutation>\nexport type SetLessonCompletedMutationOptions = Apollo.BaseMutationOptions<\n  SetLessonCompletedMutation,\n  SetLessonCompletedMutationVariables\n>\nexport const GetCourseDocument = gql`\n  query getCourse($id: String!) {\n    course(id: $id) {\n      _id\n      tags\n      title\n      introduction\n      topicTitle\n      videoLevel\n      videoLevelLabel @client\n      youtubeId\n      lessons {\n        _id\n        lessonName\n        completedAt\n        scenes {\n          start\n          end\n        }\n      }\n    }\n  }\n`\n\n/**\n * __useGetCourseQuery__\n *\n * To run a query within a React component, call `useGetCourseQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetCourseQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetCourseQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useGetCourseQuery(\n  baseOptions: Apollo.QueryHookOptions<GetCourseQuery, GetCourseQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetCourseQuery, GetCourseQueryVariables>(\n    GetCourseDocument,\n    options,\n  )\n}\nexport function useGetCourseLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetCourseQuery, GetCourseQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetCourseQuery, GetCourseQueryVariables>(\n    GetCourseDocument,\n    options,\n  )\n}\nexport type GetCourseQueryHookResult = ReturnType<typeof useGetCourseQuery>\nexport type GetCourseLazyQueryHookResult = ReturnType<typeof useGetCourseLazyQuery>\nexport type GetCourseQueryResult = Apollo.QueryResult<\n  GetCourseQuery,\n  GetCourseQueryVariables\n>\nexport const AddToMyLessonDocument = gql`\n  mutation addToMyLesson($lessonId: String!) {\n    addToMyLesson(lessonId: $lessonId) {\n      _id\n      isMy\n    }\n  }\n`\nexport type AddToMyLessonMutationFn = Apollo.MutationFunction<\n  AddToMyLessonMutation,\n  AddToMyLessonMutationVariables\n>\n\n/**\n * __useAddToMyLessonMutation__\n *\n * To run a mutation, you first call `useAddToMyLessonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddToMyLessonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addToMyLessonMutation, { data, loading, error }] = useAddToMyLessonMutation({\n *   variables: {\n *      lessonId: // value for 'lessonId'\n *   },\n * });\n */\nexport function useAddToMyLessonMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    AddToMyLessonMutation,\n    AddToMyLessonMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<AddToMyLessonMutation, AddToMyLessonMutationVariables>(\n    AddToMyLessonDocument,\n    options,\n  )\n}\nexport type AddToMyLessonMutationHookResult = ReturnType<typeof useAddToMyLessonMutation>\nexport type AddToMyLessonMutationResult = Apollo.MutationResult<AddToMyLessonMutation>\nexport type AddToMyLessonMutationOptions = Apollo.BaseMutationOptions<\n  AddToMyLessonMutation,\n  AddToMyLessonMutationVariables\n>\nexport const SetNoteDocument = gql`\n  mutation setNote($wordData: WordData!) {\n    setNote(wordData: $wordData)\n  }\n`\nexport type SetNoteMutationFn = Apollo.MutationFunction<\n  SetNoteMutation,\n  SetNoteMutationVariables\n>\n\n/**\n * __useSetNoteMutation__\n *\n * To run a mutation, you first call `useSetNoteMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSetNoteMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [setNoteMutation, { data, loading, error }] = useSetNoteMutation({\n *   variables: {\n *      wordData: // value for 'wordData'\n *   },\n * });\n */\nexport function useSetNoteMutation(\n  baseOptions?: Apollo.MutationHookOptions<SetNoteMutation, SetNoteMutationVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<SetNoteMutation, SetNoteMutationVariables>(\n    SetNoteDocument,\n    options,\n  )\n}\nexport type SetNoteMutationHookResult = ReturnType<typeof useSetNoteMutation>\nexport type SetNoteMutationResult = Apollo.MutationResult<SetNoteMutation>\nexport type SetNoteMutationOptions = Apollo.BaseMutationOptions<\n  SetNoteMutation,\n  SetNoteMutationVariables\n>\nexport const ReportLessonIssueDocument = gql`\n  mutation reportLessonIssue($report: LessonReport!) {\n    reportLessonIssue(report: $report)\n  }\n`\nexport type ReportLessonIssueMutationFn = Apollo.MutationFunction<\n  ReportLessonIssueMutation,\n  ReportLessonIssueMutationVariables\n>\n\n/**\n * __useReportLessonIssueMutation__\n *\n * To run a mutation, you first call `useReportLessonIssueMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReportLessonIssueMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reportLessonIssueMutation, { data, loading, error }] = useReportLessonIssueMutation({\n *   variables: {\n *      report: // value for 'report'\n *   },\n * });\n */\nexport function useReportLessonIssueMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    ReportLessonIssueMutation,\n    ReportLessonIssueMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<\n    ReportLessonIssueMutation,\n    ReportLessonIssueMutationVariables\n  >(ReportLessonIssueDocument, options)\n}\nexport type ReportLessonIssueMutationHookResult = ReturnType<\n  typeof useReportLessonIssueMutation\n>\nexport type ReportLessonIssueMutationResult = Apollo.MutationResult<ReportLessonIssueMutation>\nexport type ReportLessonIssueMutationOptions = Apollo.BaseMutationOptions<\n  ReportLessonIssueMutation,\n  ReportLessonIssueMutationVariables\n>\nexport const SearchDictionaryDocument = gql`\n  query searchDictionary($search: String!) {\n    dictionary(search: $search) {\n      entry\n      meaning {\n        korean\n        noun\n        verb\n        adverb\n        adjective\n      }\n      ipa\n    }\n  }\n`\n\n/**\n * __useSearchDictionaryQuery__\n *\n * To run a query within a React component, call `useSearchDictionaryQuery` and pass it any options that fit your needs.\n * When your component renders, `useSearchDictionaryQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSearchDictionaryQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useSearchDictionaryQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    SearchDictionaryQuery,\n    SearchDictionaryQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<SearchDictionaryQuery, SearchDictionaryQueryVariables>(\n    SearchDictionaryDocument,\n    options,\n  )\n}\nexport function useSearchDictionaryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    SearchDictionaryQuery,\n    SearchDictionaryQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<SearchDictionaryQuery, SearchDictionaryQueryVariables>(\n    SearchDictionaryDocument,\n    options,\n  )\n}\nexport type SearchDictionaryQueryHookResult = ReturnType<typeof useSearchDictionaryQuery>\nexport type SearchDictionaryLazyQueryHookResult = ReturnType<\n  typeof useSearchDictionaryLazyQuery\n>\nexport type SearchDictionaryQueryResult = Apollo.QueryResult<\n  SearchDictionaryQuery,\n  SearchDictionaryQueryVariables\n>\nexport const GetDictationDocument = gql`\n  query getDictation($sceneIdx: Int!) {\n    dictation(sceneIdx: $sceneIdx) @client\n  }\n`\n\n/**\n * __useGetDictationQuery__\n *\n * To run a query within a React component, call `useGetDictationQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetDictationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetDictationQuery({\n *   variables: {\n *      sceneIdx: // value for 'sceneIdx'\n *   },\n * });\n */\nexport function useGetDictationQuery(\n  baseOptions: Apollo.QueryHookOptions<GetDictationQuery, GetDictationQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetDictationQuery, GetDictationQueryVariables>(\n    GetDictationDocument,\n    options,\n  )\n}\nexport function useGetDictationLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetDictationQuery,\n    GetDictationQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetDictationQuery, GetDictationQueryVariables>(\n    GetDictationDocument,\n    options,\n  )\n}\nexport type GetDictationQueryHookResult = ReturnType<typeof useGetDictationQuery>\nexport type GetDictationLazyQueryHookResult = ReturnType<typeof useGetDictationLazyQuery>\nexport type GetDictationQueryResult = Apollo.QueryResult<\n  GetDictationQuery,\n  GetDictationQueryVariables\n>\nexport const GetRecordsDocument = gql`\n  query getRecords($sceneIdx: Int!) {\n    records(sceneIdx: $sceneIdx) @client {\n      audioAsBase64\n      audioUrl\n      sampleRate\n      stt {\n        error\n        confidence\n        transcript\n        percent\n      }\n    }\n  }\n`\n\n/**\n * __useGetRecordsQuery__\n *\n * To run a query within a React component, call `useGetRecordsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetRecordsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetRecordsQuery({\n *   variables: {\n *      sceneIdx: // value for 'sceneIdx'\n *   },\n * });\n */\nexport function useGetRecordsQuery(\n  baseOptions: Apollo.QueryHookOptions<GetRecordsQuery, GetRecordsQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetRecordsQuery, GetRecordsQueryVariables>(\n    GetRecordsDocument,\n    options,\n  )\n}\nexport function useGetRecordsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetRecordsQuery, GetRecordsQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetRecordsQuery, GetRecordsQueryVariables>(\n    GetRecordsDocument,\n    options,\n  )\n}\nexport type GetRecordsQueryHookResult = ReturnType<typeof useGetRecordsQuery>\nexport type GetRecordsLazyQueryHookResult = ReturnType<typeof useGetRecordsLazyQuery>\nexport type GetRecordsQueryResult = Apollo.QueryResult<\n  GetRecordsQuery,\n  GetRecordsQueryVariables\n>\nexport const GetNotesDocument = gql`\n  query getNotes($size: Int!, $page: Int!) {\n    getNotes(size: $size, page: $page) {\n      page\n      size\n      total\n      totalPage\n      data {\n        _id\n        word\n        meaning\n      }\n    }\n  }\n`\n\n/**\n * __useGetNotesQuery__\n *\n * To run a query within a React component, call `useGetNotesQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetNotesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetNotesQuery({\n *   variables: {\n *      size: // value for 'size'\n *      page: // value for 'page'\n *   },\n * });\n */\nexport function useGetNotesQuery(\n  baseOptions: Apollo.QueryHookOptions<GetNotesQuery, GetNotesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetNotesQuery, GetNotesQueryVariables>(GetNotesDocument, options)\n}\nexport function useGetNotesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetNotesQuery, GetNotesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetNotesQuery, GetNotesQueryVariables>(\n    GetNotesDocument,\n    options,\n  )\n}\nexport type GetNotesQueryHookResult = ReturnType<typeof useGetNotesQuery>\nexport type GetNotesLazyQueryHookResult = ReturnType<typeof useGetNotesLazyQuery>\nexport type GetNotesQueryResult = Apollo.QueryResult<\n  GetNotesQuery,\n  GetNotesQueryVariables\n>\nexport const MoreNotesDocument = gql`\n  query moreNotes($cursor: String, $size: Int!) {\n    moreNotes(cursor: $cursor, size: $size) {\n      cursor\n      hasMore @client\n      nodes {\n        _id\n        word\n        meaning\n        kor\n        noun\n        verb\n        adv\n        adj\n      }\n    }\n  }\n`\n\n/**\n * __useMoreNotesQuery__\n *\n * To run a query within a React component, call `useMoreNotesQuery` and pass it any options that fit your needs.\n * When your component renders, `useMoreNotesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMoreNotesQuery({\n *   variables: {\n *      cursor: // value for 'cursor'\n *      size: // value for 'size'\n *   },\n * });\n */\nexport function useMoreNotesQuery(\n  baseOptions: Apollo.QueryHookOptions<MoreNotesQuery, MoreNotesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<MoreNotesQuery, MoreNotesQueryVariables>(\n    MoreNotesDocument,\n    options,\n  )\n}\nexport function useMoreNotesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<MoreNotesQuery, MoreNotesQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<MoreNotesQuery, MoreNotesQueryVariables>(\n    MoreNotesDocument,\n    options,\n  )\n}\nexport type MoreNotesQueryHookResult = ReturnType<typeof useMoreNotesQuery>\nexport type MoreNotesLazyQueryHookResult = ReturnType<typeof useMoreNotesLazyQuery>\nexport type MoreNotesQueryResult = Apollo.QueryResult<\n  MoreNotesQuery,\n  MoreNotesQueryVariables\n>\nexport const DeleteNoteDocument = gql`\n  mutation deleteNote($id: String!) {\n    deleteNote(id: $id)\n  }\n`\nexport type DeleteNoteMutationFn = Apollo.MutationFunction<\n  DeleteNoteMutation,\n  DeleteNoteMutationVariables\n>\n\n/**\n * __useDeleteNoteMutation__\n *\n * To run a mutation, you first call `useDeleteNoteMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteNoteMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteNoteMutation, { data, loading, error }] = useDeleteNoteMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteNoteMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    DeleteNoteMutation,\n    DeleteNoteMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<DeleteNoteMutation, DeleteNoteMutationVariables>(\n    DeleteNoteDocument,\n    options,\n  )\n}\nexport type DeleteNoteMutationHookResult = ReturnType<typeof useDeleteNoteMutation>\nexport type DeleteNoteMutationResult = Apollo.MutationResult<DeleteNoteMutation>\nexport type DeleteNoteMutationOptions = Apollo.BaseMutationOptions<\n  DeleteNoteMutation,\n  DeleteNoteMutationVariables\n>\nexport const GerReviewCompletedLessonsDocument = gql`\n  query gerReviewCompletedLessons($cursor: String, $size: Int!) {\n    moreCompletedLessons(cursor: $cursor, size: $size) {\n      cursor\n      hasMore @client\n      nodes {\n        _id\n        lessonName\n        completedAt\n        videoLevel\n        videoLevelLabel @client\n        videoType\n        youtubeId\n      }\n    }\n  }\n`\n\n/**\n * __useGerReviewCompletedLessonsQuery__\n *\n * To run a query within a React component, call `useGerReviewCompletedLessonsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGerReviewCompletedLessonsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGerReviewCompletedLessonsQuery({\n *   variables: {\n *      cursor: // value for 'cursor'\n *      size: // value for 'size'\n *   },\n * });\n */\nexport function useGerReviewCompletedLessonsQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    GerReviewCompletedLessonsQuery,\n    GerReviewCompletedLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<\n    GerReviewCompletedLessonsQuery,\n    GerReviewCompletedLessonsQueryVariables\n  >(GerReviewCompletedLessonsDocument, options)\n}\nexport function useGerReviewCompletedLessonsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GerReviewCompletedLessonsQuery,\n    GerReviewCompletedLessonsQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<\n    GerReviewCompletedLessonsQuery,\n    GerReviewCompletedLessonsQueryVariables\n  >(GerReviewCompletedLessonsDocument, options)\n}\nexport type GerReviewCompletedLessonsQueryHookResult = ReturnType<\n  typeof useGerReviewCompletedLessonsQuery\n>\nexport type GerReviewCompletedLessonsLazyQueryHookResult = ReturnType<\n  typeof useGerReviewCompletedLessonsLazyQuery\n>\nexport type GerReviewCompletedLessonsQueryResult = Apollo.QueryResult<\n  GerReviewCompletedLessonsQuery,\n  GerReviewCompletedLessonsQueryVariables\n>\nexport const UploadProfilePictureDocument = gql`\n  mutation uploadProfilePicture($imageBase64: String!) {\n    uploadProfilePicture(imageBase64: $imageBase64) {\n      _id\n      profilePic\n    }\n  }\n`\nexport type UploadProfilePictureMutationFn = Apollo.MutationFunction<\n  UploadProfilePictureMutation,\n  UploadProfilePictureMutationVariables\n>\n\n/**\n * __useUploadProfilePictureMutation__\n *\n * To run a mutation, you first call `useUploadProfilePictureMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUploadProfilePictureMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [uploadProfilePictureMutation, { data, loading, error }] = useUploadProfilePictureMutation({\n *   variables: {\n *      imageBase64: // value for 'imageBase64'\n *   },\n * });\n */\nexport function useUploadProfilePictureMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    UploadProfilePictureMutation,\n    UploadProfilePictureMutationVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<\n    UploadProfilePictureMutation,\n    UploadProfilePictureMutationVariables\n  >(UploadProfilePictureDocument, options)\n}\nexport type UploadProfilePictureMutationHookResult = ReturnType<\n  typeof useUploadProfilePictureMutation\n>\nexport type UploadProfilePictureMutationResult = Apollo.MutationResult<UploadProfilePictureMutation>\nexport type UploadProfilePictureMutationOptions = Apollo.BaseMutationOptions<\n  UploadProfilePictureMutation,\n  UploadProfilePictureMutationVariables\n>\nexport const GetUserProgressDocument = gql`\n  query getUserProgress {\n    progressState {\n      totalCount\n      datetimes\n      counts {\n        type\n        count\n      }\n    }\n  }\n`\n\n/**\n * __useGetUserProgressQuery__\n *\n * To run a query within a React component, call `useGetUserProgressQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetUserProgressQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetUserProgressQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetUserProgressQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    GetUserProgressQuery,\n    GetUserProgressQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetUserProgressQuery, GetUserProgressQueryVariables>(\n    GetUserProgressDocument,\n    options,\n  )\n}\nexport function useGetUserProgressLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetUserProgressQuery,\n    GetUserProgressQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetUserProgressQuery, GetUserProgressQueryVariables>(\n    GetUserProgressDocument,\n    options,\n  )\n}\nexport type GetUserProgressQueryHookResult = ReturnType<typeof useGetUserProgressQuery>\nexport type GetUserProgressLazyQueryHookResult = ReturnType<\n  typeof useGetUserProgressLazyQuery\n>\nexport type GetUserProgressQueryResult = Apollo.QueryResult<\n  GetUserProgressQuery,\n  GetUserProgressQueryVariables\n>\nexport const GetLevelsDocument = gql`\n  query getLevels {\n    levels {\n      _id\n      name\n    }\n  }\n`\n\n/**\n * __useGetLevelsQuery__\n *\n * To run a query within a React component, call `useGetLevelsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetLevelsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetLevelsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetLevelsQuery(\n  baseOptions?: Apollo.QueryHookOptions<GetLevelsQuery, GetLevelsQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetLevelsQuery, GetLevelsQueryVariables>(\n    GetLevelsDocument,\n    options,\n  )\n}\nexport function useGetLevelsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetLevelsQuery, GetLevelsQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetLevelsQuery, GetLevelsQueryVariables>(\n    GetLevelsDocument,\n    options,\n  )\n}\nexport type GetLevelsQueryHookResult = ReturnType<typeof useGetLevelsQuery>\nexport type GetLevelsLazyQueryHookResult = ReturnType<typeof useGetLevelsLazyQuery>\nexport type GetLevelsQueryResult = Apollo.QueryResult<\n  GetLevelsQuery,\n  GetLevelsQueryVariables\n>\nexport const SetLevelDocument = gql`\n  mutation setLevel($levelName: LevelName!) {\n    setLevel(levelName: $levelName) {\n      _id\n      userLevelId\n      userLevelName\n    }\n  }\n`\nexport type SetLevelMutationFn = Apollo.MutationFunction<\n  SetLevelMutation,\n  SetLevelMutationVariables\n>\n\n/**\n * __useSetLevelMutation__\n *\n * To run a mutation, you first call `useSetLevelMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSetLevelMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [setLevelMutation, { data, loading, error }] = useSetLevelMutation({\n *   variables: {\n *      levelName: // value for 'levelName'\n *   },\n * });\n */\nexport function useSetLevelMutation(\n  baseOptions?: Apollo.MutationHookOptions<SetLevelMutation, SetLevelMutationVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useMutation<SetLevelMutation, SetLevelMutationVariables>(\n    SetLevelDocument,\n    options,\n  )\n}\nexport type SetLevelMutationHookResult = ReturnType<typeof useSetLevelMutation>\nexport type SetLevelMutationResult = Apollo.MutationResult<SetLevelMutation>\nexport type SetLevelMutationOptions = Apollo.BaseMutationOptions<\n  SetLevelMutation,\n  SetLevelMutationVariables\n>\nexport const GetUserGuideDocument = gql`\n  query getUserGuide {\n    userGuide {\n      introduction\n      youtubeId\n    }\n  }\n`\n\n/**\n * __useGetUserGuideQuery__\n *\n * To run a query within a React component, call `useGetUserGuideQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetUserGuideQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetUserGuideQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetUserGuideQuery(\n  baseOptions?: Apollo.QueryHookOptions<GetUserGuideQuery, GetUserGuideQueryVariables>,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useQuery<GetUserGuideQuery, GetUserGuideQueryVariables>(\n    GetUserGuideDocument,\n    options,\n  )\n}\nexport function useGetUserGuideLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    GetUserGuideQuery,\n    GetUserGuideQueryVariables\n  >,\n) {\n  const options = {...defaultOptions, ...baseOptions}\n  return Apollo.useLazyQuery<GetUserGuideQuery, GetUserGuideQueryVariables>(\n    GetUserGuideDocument,\n    options,\n  )\n}\nexport type GetUserGuideQueryHookResult = ReturnType<typeof useGetUserGuideQuery>\nexport type GetUserGuideLazyQueryHookResult = ReturnType<typeof useGetUserGuideLazyQuery>\nexport type GetUserGuideQueryResult = Apollo.QueryResult<\n  GetUserGuideQuery,\n  GetUserGuideQueryVariables\n>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'https://api.speakypeaky.com/api/v1',\n  GRAPHQL_URL: 'https://api.speakypeaky.com/graphql',\n  // API_URL: 'https://api-dev.speakypeaky.com/api/v1',\n  // GRAPHQL_URL: 'https://api-dev.speakypeaky.com/graphql',\n  // GRAPHQL_URL: 'http://localhost:4044/',\n  // GRAPHQL_URL: 'http://192.168.0.3:4044/',\n  // API_URL: 'http://localhost:4043/api/v1',\n  // API_URL: 'http://localhost:4044/dev/api/v1',\n\n  // S3 Bucket\n  accessKeyId: 'AKIAIQV2FPU2ROUJB2QA',\n  secretAccessKey: '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',\n  region: 'us-east-1',\n  bucket: 'start-english-learning',\n  assetBaseUrl: 'https://asset.speakypeaky.com/',\n\n  // This is for Speaky Peaky\n  validatorURL:\n    'https://validator.fovea.cc/v1/validate?appName=com.summer.startenglishnow&apiKey=f8ba72c1-7125-4f97-9c57-da5ae62fbc45',\n\n  stripePublicKey: 'pk_test_J2UsK5W9xq4swWJN0ZdhEn0W00uGeII06q',\n\n  firebase: {\n    apiKey: 'AIzaSyBcuf15jDOG-Q6pIyc2ZNYCjiV1u5pTLHU',\n    authDomain: 'start-english-now-android.firebaseapp.com',\n    databaseURL: 'https://start-english-now-android.firebaseio.com',\n    projectId: 'start-english-now-android',\n    storageBucket: 'start-english-now-android.appspot.com',\n    messagingSenderId: '73688891988',\n    appId: '1:73688891988:web:74a17a3e4bf8a063',\n  },\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core'\nimport {Observable, of} from 'rxjs'\nimport {catchError, tap, map, shareReplay, switchMap} from 'rxjs/operators'\nimport {ApiService} from './api.service'\n\n@Injectable()\nexport class OnBoardingService {\n  token: any\n  public profileCache: any\n\n  constructor(public apiService: ApiService) {}\n\n  userGuid(data): Observable<any> {\n    return this.apiService.post('/static/user-guide', data)\n  }\n\n  levelList(): Observable<any> {\n    return this.apiService.get('/changelevel/list')\n  }\n\n  changeLevel(data): Observable<any> {\n    return this.apiService.post('/changelevel/update', data)\n  }\n\n  getUserProfile(noCache: boolean = false): Observable<any> {\n    const self = this\n    const req = this.apiService.get('/user/get-profile').pipe(\n      tap((e) => {\n        self.profileCache = {\n          timestamp: +new Date(),\n          profile: e.data,\n        }\n      }),\n    )\n    if (noCache) {\n      return req\n    }\n    if (this.profileCache) {\n      if (+new Date() - this.profileCache.timestamp < 5000) {\n        return of({data: this.profileCache.profile})\n      }\n    }\n    return req\n  }\n\n  verifyEmail(email): Observable<any> {\n    return this.apiService.post('/user/resend-email', {email})\n  }\n\n  updateUserName(data): Observable<any> {\n    return this.apiService.post('/user/update-name', data)\n  }\n\n  updateUserEmail(data): Observable<any> {\n    return this.apiService.post('/user/update-email', data)\n  }\n\n  updateUserPassword(data): Observable<any> {\n    return this.apiService.post('/user/update-password', data)\n  }\n\n  contactToAdmin(data): Observable<any> {\n    return this.apiService.post('/contactus/user/set-contact-us', data)\n  }\n\n  getSubTitleLanguages(): Observable<any> {\n    return this.apiService.get('/subTitleLanguages/list')\n  }\n\n  setUserSubTitleLanguage(data): Observable<any> {\n    return this.apiService.post('/user/set-subtitleLanguage', data)\n  }\n\n  uploadProfilePicture(data): Observable<any> {\n    return this.apiService.post('/user/uploadProfilePicture', data)\n  }\n\n  getUserSubTitleLanguage(subTitleLanguageId): Observable<any> {\n    return this.apiService.get('/subTitleLanguages/details/' + subTitleLanguageId)\n  }\n}\n","export default \".chat {\\n  z-index: 10;\\n  display: inline;\\n  position: fixed;\\n  bottom: 1%;\\n  right: 1%;\\n}\\n.chat.hasTabbar {\\n  bottom: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NoYW5uZWwtaW8tbW9iaWxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7QUFDRjtBQUFFO0VBQ0UsV0FBQTtBQUVKIiwiZmlsZSI6ImNoYW5uZWwtaW8tbW9iaWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXQge1xuICB6LWluZGV4OiAxMDtcbiAgZGlzcGxheTogaW5saW5lO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMSU7XG4gIHJpZ2h0OiAxJTtcbiAgJi5oYXNUYWJiYXIge1xuICAgIGJvdHRvbTogMTAlO1xuICB9XG59XG4iXX0= */\";","import {Injectable} from '@angular/core'\nimport {HttpClient, HttpHeaders} from '@angular/common/http'\nimport {Observable, throwError, from} from 'rxjs'\nimport {environment} from './../../environments/environment'\nimport {catchError, retry, map, shareReplay, switchMap} from 'rxjs/operators'\nimport {SharedService} from './shared.service'\nimport {Router} from '@angular/router'\n\n@Injectable({providedIn: 'root'})\nexport class ApiService {\n  constructor(\n    private router: Router,\n    private httpClient: HttpClient,\n    public sharedService: SharedService,\n  ) {}\n\n  post(path: string, data: object): Observable<any> {\n    return from(this.sharedService.getNativeStorage('token')).pipe(\n      switchMap((token) => {\n        const url = environment.API_URL + path\n        return this.httpClient.post(url, data, {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            accesstoken: token?.data,\n          }),\n        })\n      }),\n      // shareReplay(1),\n      // map((res) => res),\n      // retry(1),\n      catchError((err) => {\n        console.log(err)\n\n        this.sharedService.presentAlert('Alert', err.error)\n\n        if (err.error.status === 502) {\n          this.sharedService.removeNativeStorage('token')\n          this.router.navigate(['/login'])\n\n          return throwError(err.error)\n        } else {\n          return throwError(err.error)\n        }\n      }),\n    )\n  }\n\n  postWithoutToken(path: string, data: object): Observable<any> {\n    const url = environment.API_URL + path\n    return this.httpClient\n      .post(url, data, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n        }),\n      })\n      .pipe(\n        catchError((err) => {\n          // this.sharedService.presentAlert('Alert', err.error)\n          return throwError(err.error)\n        }),\n      )\n  }\n\n  get(path: string, data?: object): Observable<any> {\n    return from(this.sharedService.getNativeStorage('token')).pipe(\n      switchMap((token) => {\n        const options = {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            accesstoken: token?.data,\n          }),\n          data,\n        }\n        const url = environment.API_URL + path\n        return this.httpClient.get(url, options)\n      }),\n      catchError((err) => {\n        this.sharedService.presentAlert('Alert', '', err.error.error)\n\n        return throwError(err.error)\n        // if (err.error.status === 502 || err.error.error === ERR_TOKEN_EXP) {\n        //   // this.sharedService.removeNativeStorage('token')\n        //   // this.router.navigate(['/login'])\n\n        //   return throwError(err.error)\n        // } else {\n        //   return throwError(err.error)\n        // }\n      }),\n    )\n  }\n\n  getWithoutToken(path: string, data?: object): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n      data,\n    }\n    const url = environment.API_URL + path\n    return this.httpClient.get(url, options).pipe(\n      catchError((err) => {\n        console.log(err)\n        // this.sharedService.presentAlert('Alert', err.error)\n        return throwError(err.error)\n      }),\n    )\n  }\n}\n","import {Injectable} from '@angular/core'\nimport {ApiService} from './api.service'\n\n@Injectable()\nexport class SubscriptionService {\n  constructor(public apiService: ApiService) {}\n\n  getAllStripePlans() {\n    return this.apiService.get('/payments/get_all_plans')\n  }\n\n  getCustomerDetails(customerId) {\n    return this.apiService.get('/payments/get_user/' + customerId)\n  }\n\n  createStripeCustomer(data) {\n    return this.apiService.post('/payments/create_user', data)\n  }\n\n  attachSourceToCustomer(data) {\n    return this.apiService.post('/payments/create_card_method', data)\n  }\n\n  getCustomerAllPaymentMethods(data) {\n    return this.apiService.post('/payments/get_payment_methods', data)\n  }\n\n  processedToPayUsingStripe(data) {\n    return this.apiService.post('/payments/create_subscription', data)\n  }\n\n  turnOffAutoRenewalForStripe(subscriptionId) {\n    return this.apiService.get('/payments/updateSubscription/' + subscriptionId)\n  }\n\n  getStripeSubscriptionDetails(subscriptionId) {\n    return this.apiService.get('/payments/subscription-details/' + subscriptionId)\n  }\n\n  setUserSubscription(data) {\n    return this.apiService.post('/userSubscription/setUserSubscription', data)\n  }\n\n  getUserSubscription(data) {\n    return this.apiService.post('/userSubscription/getUserSubscription', data)\n  }\n\n  verifySubscription(data) {\n    return this.apiService.post('/userSubscription/userV2', data)\n  }\n\n  setStripeCustomerId(data) {\n    return this.apiService.post('/user/setStripeCustomerId', data)\n  }\n}\n","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t\"jDxf\",\n\t\t90\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t\"37vE\",\n\t\t91\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t\"cJxf\",\n\t\t92\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t\"eGHz\",\n\t\t93\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t\"fHjd\",\n\t\t94\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"KwcL\";\nmodule.exports = webpackAsyncContext;","import {ChannelIoMobileComponent} from './channel-io-mobile.component'\nimport {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {IonicModule} from '@ionic/angular'\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [ChannelIoMobileComponent],\n  exports: [ChannelIoMobileComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class ChannelIoMobileModule {}\n","import {LessonsService} from './services/lessons.service'\nimport {SwUpdate} from '@angular/service-worker'\nimport {SubscriptionService} from './services/subscription.service'\nimport {OnBoardingService} from './services/on-boarding.service'\nimport {ActivatedRoute, Router} from '@angular/router'\nimport {AuthService} from './services/auth.service'\nimport {SharedService} from './services/shared.service'\nimport {Component, ViewChild} from '@angular/core'\n\nimport {\n  Platform,\n  NavController,\n  ModalController,\n  IonRouterOutlet,\n  AlertController,\n} from '@ionic/angular'\nimport {Plugins, StatusBarStyle, AppState, Capacitor} from '@capacitor/core'\nconst {SplashScreen, StatusBar, App, Device} = Plugins\nimport {SwPush} from '@angular/service-worker'\nimport Cookies from 'js-cookie'\nimport {useStore} from 'src/reactapp/useStore'\nimport {environment} from 'src/environments/environment'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n})\nexport class AppComponent {\n  // isOnBoarding = false\n  // set up hardware back button event.\n\n  lastTimeBackPress = 0\n  timePeriodToExit = 2000\n  deferredPrompt\n  @ViewChild(IonRouterOutlet, {static: false}) routerOutlet: IonRouterOutlet\n\n  constructor(\n    private platform: Platform,\n    private sharedService: SharedService,\n    private authService: AuthService,\n    private navController: NavController,\n    public modalCtrl: ModalController,\n    public alertController: AlertController,\n    private onBoardingService: OnBoardingService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private swUpdate: SwUpdate,\n    readonly swPush: SwPush,\n  ) {\n    SplashScreen.show({\n      showDuration: 3000,\n      autoHide: true,\n    })\n    sharedService.getDeviceInfo().then((info) => {\n      useStore.setState({navController, route, deviceInfo: info, platform, sharedService})\n      if (info.platform === 'web') {\n        if (\n          document.location.hostname !== 'localhost' &&\n          document.location.protocol === 'http:'\n        ) {\n          // document.location.href = document.location.href.replace('http:', 'https:')\n        }\n      }\n\n      window.addEventListener('beforeinstallprompt', (e) => {\n        console.log('beforeinstallprompt Event fired')\n        // Prevent Chrome 67 and earlier from automatically showing the prompt\n        e.preventDefault()\n        // Stash the event so it can be triggered later.\n        this.deferredPrompt = e\n        this.addToHome()\n      })\n\n      this.initializeApp()\n\n      this.platform.backButton.subscribe(this.handleBackButton)\n      SplashScreen.hide()\n    })\n  }\n\n  async handleBackButton() {\n    // close modal\n    try {\n      const element = await this.modalCtrl.getTop()\n      if (element) {\n        element.dismiss()\n        return\n      }\n    } catch (error) {}\n    if (this.routerOutlet && this.routerOutlet.canGoBack()) {\n      this.routerOutlet.pop()\n    } else if (this.router.url === '/dashboard/lessons' || this.router.url === '/login') {\n      if (new Date().getTime() - this.lastTimeBackPress < this.timePeriodToExit) {\n        // navigator.app.exitApp(); // work for ionic 4\n      } else {\n        this.lastTimeBackPress = new Date().getTime()\n      }\n    }\n  }\n\n  updateServiceWorker() {\n    if (this.swUpdate.isEnabled) {\n      this.swUpdate.available.subscribe(() => {\n        if (confirm('New version available. Load New Version?')) {\n          window.location.reload()\n        }\n      })\n\n      this.swPush.notificationClicks.subscribe(({action, notification}) => {\n        console.log('====================================')\n        console.log(action)\n        console.log(notification)\n        console.log('====================================')\n        // TODO: Do something in response to notification click.\n      })\n    }\n  }\n\n  async suggestDownload() {\n    const alert = await this.alertController.create({\n      header: 'Hey there,',\n      message: 'For better experience, would you like to download the Speaky Peaky app?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          handler: () => {\n            Cookies.set('did-suggest-app', 'yes', {expires: 7})\n          },\n        },\n        {\n          text: 'Download',\n          handler: () => {\n            Cookies.set('did-suggest-app', 'yes', {expires: 7})\n            window.open('https://speakypeaky.page.link/home')\n          },\n        },\n      ],\n    })\n\n    await alert.present()\n  }\n\n  async initializeApp() {\n    this.updateServiceWorker()\n\n    const info = await this.sharedService.getDeviceInfo()\n    if (info.isApp) {\n      StatusBar.setStyle({\n        style: StatusBarStyle.Dark,\n      })\n    }\n    if (info.isMobileWeb && !Cookies.get('did-suggest-app')) {\n      this.suggestDownload()\n    }\n\n    try {\n      const token = await this.sharedService.getNativeStorage('token')\n\n      if (token?.data) {\n        try {\n          const profile = await this.getUserProfile()\n          console.log({profile})\n          if (profile.data) {\n            if (info.isApp) {\n              // if(|| document.location.hostname !== 'localhost')\n            }\n            if (environment.production) {\n              this.navController.navigateRoot('/dashboard')\n            } else {\n              // this.navController.navigateRoot('/dashboard')\n            }\n            return\n          }\n        } catch {}\n\n        this.authService.authSubject.next(false)\n        this.navController.navigateRoot('/login')\n      } else {\n        const isOnBoarding = await this.sharedService.getNativeStorage('isOnBoarding')\n        if (isOnBoarding?.data === true) {\n          this.authService.authSubject.next(false)\n          this.navController.navigateRoot('/login')\n          return\n        }\n      }\n    } catch (error) {\n      console.error(error)\n    }\n    this.authService.authSubject.next(false)\n    this.navController.navigateRoot('/on-boarding')\n  }\n\n  ionViewWillEnter() {\n    // button click event to show the promt\n\n    window.addEventListener('appinstalled', (event) => {\n      alert('installed')\n    })\n\n    if (window.matchMedia('(display-mode: standalone)').matches) {\n      alert('display-mode is standalone')\n    }\n  }\n\n  addToHome() {\n    if (this.deferredPrompt !== undefined && this.deferredPrompt !== null) {\n      // Show the prompt\n      this.deferredPrompt.prompt()\n      // Wait for the user to respond to the prompt\n      this.deferredPrompt.userChoice.then((choiceResult) => {\n        if (choiceResult.outcome === 'accepted') {\n          console.log('User accepted the A2HS prompt')\n        } else {\n          console.log('User dismissed the A2HS prompt')\n        }\n        // We no longer need the prompt.  Clear it up.\n        this.deferredPrompt = null\n      })\n    }\n  }\n\n  getUserProfile() {\n    return this.onBoardingService.getUserProfile().toPromise()\n  }\n}\n","export default \"<ion-app>\\n  <ion-router-outlet></ion-router-outlet>\\n  <app-channel-io-mobile></app-channel-io-mobile>\\n</ion-app>\";","import {LessonsService} from './services/lessons.service'\nimport {SubscriptionService} from './services/subscription.service'\nimport {OnBoardingService} from './services/on-boarding.service'\nimport {NgModule} from '@angular/core'\nimport {BrowserModule} from '@angular/platform-browser'\nimport {RouteReuseStrategy} from '@angular/router'\n\nimport {IonicModule, IonicRouteStrategy} from '@ionic/angular'\n\nimport {AppComponent} from './app.component'\nimport {AppRoutingModule} from './app-routing.module'\nimport {HttpClientModule} from '@angular/common/http'\n\nimport {ServiceWorkerModule} from '@angular/service-worker'\nimport {environment} from '../environments/environment'\nimport {PushNotificationsModule} from 'ng-push'\nimport {GoogleAnalytics} from '@ionic-native/google-analytics/ngx'\nimport {ChannelIoMobileModule} from './components/channel-io-mobile/channel-io-mobile.module'\nimport {Base64} from '@ionic-native/base64/ngx'\n@NgModule({\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production}),\n    PushNotificationsModule,\n    ChannelIoMobileModule,\n  ],\n  declarations: [AppComponent],\n  providers: [\n    {provide: RouteReuseStrategy, useClass: IonicRouteStrategy},\n    OnBoardingService,\n    SubscriptionService,\n    LessonsService,\n    GoogleAnalytics,\n    Base64,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dBYC\",\n\t\t\"common\",\n\t\t42\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"dd9K\",\n\t\t\"common\",\n\t\t43\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"w3/4\",\n\t\t\"common\",\n\t\t44\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"IJvw\",\n\t\t\"common\",\n\t\t45\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Bzea\",\n\t\t\"common\",\n\t\t46\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"XUvO\",\n\t\t47\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"EZXS\",\n\t\t\"common\",\n\t\t48\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"35tz\",\n\t\t\"common\",\n\t\t49\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"CwRq\",\n\t\t\"common\",\n\t\t50\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"13mQ\",\n\t\t\"common\",\n\t\t51\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"Vw/N\",\n\t\t52\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"FaZn\",\n\t\t\"common\",\n\t\t53\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"4jfp\",\n\t\t\"common\",\n\t\t54\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"Fmwn\",\n\t\t55\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"pVu2\",\n\t\t56\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"osmV\",\n\t\t\"common\",\n\t\t57\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"BeVK\",\n\t\t\"common\",\n\t\t58\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"0sPl\",\n\t\t\"common\",\n\t\t59\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"L19J\",\n\t\t\"common\",\n\t\t60\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"/uLI\",\n\t\t\"common\",\n\t\t61\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"Tfpq\",\n\t\t\"common\",\n\t\t62\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"a/9b\",\n\t\t\"common\",\n\t\t63\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"PLk7\",\n\t\t\"common\",\n\t\t64\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"9iIR\",\n\t\t\"common\",\n\t\t65\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"NkB0\",\n\t\t\"common\",\n\t\t66\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"+K8/\",\n\t\t\"common\",\n\t\t67\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"XcmX\",\n\t\t\"common\",\n\t\t68\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"Up0A\",\n\t\t\"common\",\n\t\t69\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"vQEB\",\n\t\t70\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"DXEm\",\n\t\t\"common\",\n\t\t71\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"tv4E\",\n\t\t\"common\",\n\t\t72\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"q+qH\",\n\t\t\"common\",\n\t\t73\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"pS87\",\n\t\t\"common\",\n\t\t74\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"dLII\",\n\t\t75\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"Lnq6\",\n\t\t\"common\",\n\t\t76\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"n4jw\",\n\t\t77\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"+gxd\",\n\t\t\"common\",\n\t\t78\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"DdnD\",\n\t\t\"common\",\n\t\t79\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"zwDB\",\n\t\t\"common\",\n\t\t80\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"RwqG\",\n\t\t\"common\",\n\t\t81\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"CHyx\",\n\t\t\"common\",\n\t\t82\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"8yey\",\n\t\t\"common\",\n\t\t83\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"A/r9\",\n\t\t84\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"ZNya\";\nmodule.exports = webpackAsyncContext;","import {Injectable} from '@angular/core'\nimport {Observable, BehaviorSubject} from 'rxjs'\nimport {first} from 'rxjs/operators'\nimport {SharedService} from './shared.service'\nimport {ApiService} from './api.service'\n\n@Injectable({providedIn: 'root'})\nexport class AuthService {\n  token: any\n  authSubject = new BehaviorSubject(true)\n  token$: BehaviorSubject<any>\n\n  constructor(public sharedService: SharedService, public apiService: ApiService) {}\n\n  login(user): Observable<any> {\n    return this.apiService.postWithoutToken('/user/authenticate', user)\n  }\n\n  signUp(user): Observable<any> {\n    return this.apiService.postWithoutToken('/user/signup', user)\n  }\n\n  forgotPassword(email): Observable<any> {\n    return this.apiService.postWithoutToken('/user/requestPasswordURL', email)\n  }\n\n  get isLoggedIn(): Observable<boolean> {\n    return this.authSubject.pipe(first())\n  }\n}\n","import {gql, makeVar, TypePolicies} from '@apollo/client'\nimport {LevelName} from './types-and-hooks'\n\nexport const localTypeDefs = gql`\n  extend type Query {\n    currentLessonId: String\n    dictation(lessonId: Int!, sceneIdx: Int!): String\n  }\n  extend type Mutation {\n    updateDictation(id: ID!): String\n  }\n  extend type WordNoteCursorPage {\n    hasMore: Boolean\n  }\n  extend type LessonCursorPage {\n    hasMore: Boolean\n  }\n  extend type Lesson {\n    videoLevelLabel: String\n  }\n  extend type Course {\n    videoLevelLabel: String\n  }\n`\n\nexport const currentLessonIdVar = makeVar<any>(null)\nexport const dictationsVar = makeVar<any>({})\nexport const recordsVar = makeVar<any>({})\n\nexport const typePolicies: TypePolicies = {\n  Query: {\n    fields: {\n      currentLessonId: {\n        read(_, {variables}) {\n          if (variables.id) {\n            return variables.id\n          }\n\n          return currentLessonIdVar()\n        },\n      },\n      dictation: {\n        read(_, {variables}) {\n          console.log({variables})\n\n          const {sceneIdx} = variables\n          const lessonId = currentLessonIdVar()\n\n          return dictationsVar()[`${lessonId}:${sceneIdx}`] || ''\n        },\n      },\n      records: {\n        read(_, {variables}) {\n          console.log({variables})\n\n          const {sceneIdx} = variables\n          const lessonId = currentLessonIdVar()\n\n          return recordsVar()[`${lessonId}:${sceneIdx}`] || []\n        },\n      },\n      moreNotes: {\n        merge(existing, incoming, {readField, args}) {\n          const nodes = args.cursor && existing ? {...existing.nodes} : {}\n          incoming.nodes.forEach((node) => {\n            const idx = readField('_id', node)\n            nodes[idx as number] = node\n          })\n\n          return {\n            cursor: incoming.cursor,\n            hasMore: incoming.nodes.length === args.size,\n            nodes,\n          }\n        },\n\n        read(existing) {\n          if (existing) {\n            return {\n              cursor: existing.cursor,\n              hasMore: existing.hasMore,\n              nodes: Object.values(existing.nodes),\n            }\n          }\n        },\n      },\n      moreCompletedLessons: {\n        merge(existing, incoming, {readField, args}) {\n          const nodes = args.cursor && existing ? {...existing.nodes} : {}\n          incoming.nodes.forEach((node) => {\n            const idx = readField('_id', node)\n            nodes[idx as number] = node\n          })\n\n          return {\n            cursor: incoming.cursor,\n            hasMore: incoming.nodes.length === args.size,\n            nodes,\n          }\n        },\n\n        read(existing) {\n          if (existing) {\n            return {\n              cursor: existing.cursor,\n              hasMore: existing.hasMore,\n              nodes: Object.values(existing.nodes),\n            }\n          }\n        },\n      },\n    },\n  },\n  Mutation: {\n    fields: {\n      updateDictation: {\n        read(...args) {\n          console.log('read', args)\n        },\n        merge(...args) {\n          console.log('merge', args)\n        },\n      },\n    },\n  },\n  LessonProgress: {\n    fields: {\n      datetimes: {\n        read(datetimes) {\n          return datetimes.map((d) => new Date(d))\n        },\n      },\n    },\n  },\n  User: {\n    fields: {\n      // userLevelName: {\n      //   read(userLevelName) {\n      //     return levelMap[userLevelName]\n      //   },\n      // },\n    },\n  },\n  Lesson: {\n    fields: {\n      videoLevelLabel: {\n        read(_, {readField}) {\n          const level = readField('videoLevel') as LevelName\n          return levelLabel[level]\n          // return levelLabel[userLevelName]\n        },\n      },\n    },\n  },\n  Course: {\n    fields: {\n      videoLevelLabel: {\n        read(_, {readField}) {\n          const level = readField('videoLevel') as LevelName\n          return levelLabel[level]\n        },\n      },\n    },\n  },\n}\n\nconst levelMap = {\n  UpperBeginner: 'UpperBeginner',\n  'Upper-beginner': 'UpperBeginner',\n  Elementary: 'UpperBeginner',\n  Intermediate: 'Intermediate',\n  Advanced: 'Advanced',\n}\nconst levelLabel = {\n  [LevelName.UpperBeginner]: 'Upper-beginner',\n  [LevelName.Intermediate]: 'Intermediate',\n  [LevelName.Advanced]: 'Advanced',\n}\n","import {Injectable} from '@angular/core'\nimport {HttpClient, HttpHeaders} from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs'\nimport {catchError, retry, map} from 'rxjs/operators'\nimport {ApiService} from './api.service'\nimport {OnBoardingService} from './on-boarding.service'\n\n@Injectable()\nexport class LessonsService {\n  constructor(\n    private httpClient: HttpClient,\n    private apiService: ApiService,\n    private onBoardingService: OnBoardingService,\n  ) {}\n  weekdays = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ]\n\n  getTodaysLessons(data): Observable<any> {\n    return this.apiService.get(`/lesson/recommendation/${data}`)\n  }\n\n  getNewUploadsLessons(page): Observable<any> {\n    const today = this.weekdays[new Date().getDay()]\n    const profile = this.onBoardingService.profileCache.profile\n    const payload = {\n      day: today === 'Saturday' || today === 'Sunday' ? 'Weekend' : today,\n      videoLevel: profile.userLevelName,\n    }\n    return this.apiService.post(`/lesson/get-newUploadLessons/${page}`, payload)\n  }\n\n  getTodaysLesson(): Observable<any> {\n    const day = this.weekdays[new Date().getDay()]\n    return this.getSubLessonDetails({day}, false)\n  }\n\n  getSubLessonDetails(data, isDraft) {\n    if (isDraft === true) {\n      return this.apiService.post(`/lesson/drafted-lesson-details`, data)\n    } else {\n      return this.apiService.post(`/lesson/details-lessons`, data)\n    }\n  }\n\n  getDraftLessonsForAdmin(page) {\n    return this.apiService.get(`/lesson/drafted-lessons/${page}`)\n  }\n\n  getDraftSubLessonDetails(data) {\n    return this.apiService.get(`/lesson/drafted-lesson-details`, data)\n  }\n\n  saveLesson(data) {\n    return this.apiService.post(`/lesson/add-savedLesson`, data)\n  }\n\n  removeSavedLesson(data) {\n    return this.apiService.post(`/lesson/remove-savedLesson`, data)\n  }\n\n  getSavedLessons(page) {\n    return this.apiService.get(`/lesson/savedLessons/${page}`)\n  }\n\n  getPopularLessons(page) {\n    return this.apiService.get(`/lesson/popularLessons/${page}`)\n  }\n\n  getCourseList(page, data) {\n    return this.apiService.post(`/lesson/course-list/${page}`, data)\n  }\n\n  getMyCourse() {\n    return this.apiService.get(`/lesson/my-course`)\n  }\n\n  getCompletedLessons() {\n    return this.apiService.get(`/lesson/completedLessons`)\n  }\n\n  getCourseDetails(lessonId, type) {\n    return this.apiService.get(`/lesson/course-details/${lessonId}/${type}`)\n  }\n\n  completeLesson(data) {\n    return this.apiService.post(`/lesson/completed`, data)\n  }\n\n  addMyCourseLesson(data) {\n    return this.apiService.post(`/lesson/add-course-lesson`, data)\n  }\n\n  completedLessonsWithTimeRange(data) {\n    return this.apiService.post(`/lesson/completedLessons-within-timeRange`, data)\n  }\n\n  reportAnIssueToAdmin(data) {\n    return this.apiService.post(`/reportIssues/user/set-report-issue`, data)\n  }\n\n  setUserNotes(data) {\n    return this.apiService.post(`/user/set-notes`, data)\n  }\n\n  getUserNotes(page) {\n    return this.apiService.get(`/user/get-notes/${page}`)\n  }\n\n  deleteUserNotes(data) {\n    return this.apiService.post(`/user/delete-notes`, data)\n  }\n\n  getAcronymsList() {\n    return this.apiService.get(`/user/acronyms-list`)\n  }\n\n  // Find a meaning for word\n  findWordMeaning(entry: string): Observable<any> {\n    const url = `https://twinword-word-graph-dictionary.p.rapidapi.com/definition_kr/?entry=${entry}`\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'x-rapidapi-key': 'cRKV2Kl60tmshr5Yw1eForDx52Fdp19YCpQjsn0SpP4r1sNWol',\n      }),\n    }\n\n    return this.httpClient.get(url, options).pipe(\n      map((res) => res),\n      retry(1),\n      catchError((err) => {\n        console.log(err)\n\n        return throwError(err)\n      }),\n    )\n  }\n}\n","import {NavController} from '@ionic/angular'\nimport {AuthService} from './services/auth.service'\nimport {Injectable} from '@angular/core'\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  CanActivate,\n  Router,\n} from '@angular/router'\nimport {Observable} from 'rxjs'\nimport {map, catchError, retry} from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private navController: NavController,\n    private router: Router,\n    private authService: AuthService,\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.authService.isLoggedIn.pipe(\n      map((res) => {\n        if (res) {\n          return true\n        } else {\n          this.navController.setDirection('root')\n          this.router.navigate(['/login'])\n          return false\n        }\n      }),\n    )\n  }\n}\n","import {AuthGuard} from './auth.guard'\nimport {NgModule} from '@angular/core'\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router'\n\nconst routes: Routes = [\n  // {\n  //   path: '',\n  //   redirectTo: 'on-boarding',\n  //   pathMatch: 'full',\n  // },\n  {\n    path: 'sign-up',\n    loadChildren: () =>\n      import('./sign-up/sign-up.module').then((m) => m.SignUpPageModule),\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./login/login.module').then((m) => m.LoginPageModule),\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () =>\n      import('./dashboard/dashboard.module').then((m) => m.DashboardPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'on-boarding',\n    loadChildren: () =>\n      import('./on-boarding/on-boarding.module').then((m) => m.OnBoardingPageModule),\n  },\n  {\n    path: 'forgot-password',\n    loadChildren: () =>\n      import('./forgot-password/forgot-password.module').then(\n        (m) => m.ForgotPasswordPageModule,\n      ),\n  },\n  {\n    path: 'on-boarding-level',\n    loadChildren: () =>\n      import('./on-boarding/on-boarding-level/on-boarding-level.module').then(\n        (m) => m.OnBoardingLevelPageModule,\n      ),\n  },\n  {\n    path: 'on-boarding-language',\n    loadChildren: () =>\n      import('./on-boarding/on-boarding-language/on-boarding-language.module').then(\n        (m) => m.OnBoardingLanguagePageModule,\n      ),\n  },\n  {\n    path: 'on-boarding-reminder',\n    loadChildren: () =>\n      import('./on-boarding/on-boarding-reminder/on-boarding-reminder.module').then(\n        (m) => m.OnBoardingReminderPageModule,\n      ),\n  },\n  {\n    path: 'lesson-details/:subLessonId/:isCompleted/:isDraft',\n    loadChildren: () =>\n      import('./dashboard/lessons/lesson-details/lesson-details.module').then(\n        (m) => m.LessonDetailsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'lesson-steps/:subLessonId/:isDraft',\n    pathMatch: 'prefix',\n    loadChildren: () =>\n      import('./dashboard/lessons/lesson-details/lesson-steps/lesson-steps.module').then(\n        (m) => m.LessonStepsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'lesson-complete',\n    loadChildren: () =>\n      import(\n        './dashboard/lessons/lesson-details/lesson-complete/lesson-complete.module'\n      ).then((m) => m.LessonCompletePageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'payment/manage',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/subscription-plans/stripe-manage/stripe-manage.module'\n      ).then((m) => m.StripeManagePageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'payment/:productId',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/subscription-plans/stripe-payment/stripe-payment.module'\n      ).then((m) => m.StripePaymentPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'popular',\n    loadChildren: () =>\n      import('./dashboard/lessons/popular-lessons/popular-lessons.module').then(\n        (m) => m.PopularLessonsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'new-uploads',\n    loadChildren: () =>\n      import('./dashboard/lessons/new-uploads/new-uploads.module').then(\n        (m) => m.NewUploadsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'draft-lessons',\n    loadChildren: () =>\n      import('./dashboard/lessons/draft-lessons/draft-lessons.module').then(\n        (m) => m.DraftLessonsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'saved-lessons',\n    loadChildren: () =>\n      import('./dashboard/lessons/saved-lessons/saved-lessons.module').then(\n        (m) => m.SavedLessonsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path:\n      'search-list/:suggestedCurriculumId/:suggestedCurriculumTitle/:suggestedCurriculumDay',\n    loadChildren: () =>\n      import('./dashboard/search-lessons/search-list/search-list.module').then(\n        (m) => m.SearchListPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'my-courses',\n    loadChildren: () =>\n      import('./dashboard/lessons/my-courses/my-courses.module').then(\n        (m) => m.MyCoursesPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'course-details/:lessonId/:type',\n    loadChildren: () =>\n      import('./dashboard/lessons/my-courses/course-details/course-details.module').then(\n        (m) => m.CourseDetailsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'setting',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/setting.module').then(\n        (m) => m.SettingPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'account',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/account/account.module').then(\n        (m) => m.AccountPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'edit-email',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/edit-email/edit-email.module'\n      ).then((m) => m.EditEmailPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'edit-name',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/account/edit-name/edit-name.module').then(\n        (m) => m.EditNamePageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'edit-password',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/edit-password/edit-password.module'\n      ).then((m) => m.EditPasswordPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'reminder',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/reminder/reminder.module').then(\n        (m) => m.ReminderPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'delete-account',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/delete-account/delete-account.module'\n      ).then((m) => m.DeleteAccountPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'support',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/support/support.module').then(\n        (m) => m.SupportPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'language',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/account/language/language.module').then(\n        (m) => m.LanguagePageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'share-app',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/share-app/share-app.module').then(\n        (m) => m.ShareAppPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'app-info',\n    loadChildren: () =>\n      import('./dashboard/user-profile/setting/app-info/app-info.module').then(\n        (m) => m.AppInfoPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'subscription',\n    pathMatch: 'full',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/subscription/subscription.module'\n      ).then((m) => m.SubscriptionPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'subscriptionplans',\n    loadChildren: () =>\n      import(\n        './dashboard/user-profile/setting/account/subscription-plans/subscription-plans.module'\n      ).then((m) => m.SubscriptionPlansPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'faqs/:type',\n    loadChildren: () =>\n      import('././dashboard/user-profile/setting/support/faqs/faqs.module').then(\n        (m) => m.FaqsPageModule,\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'email-the-team',\n    loadChildren: () =>\n      import(\n        '././dashboard/user-profile/setting/support/email-the-team/email-the-team.module'\n      ).then((m) => m.EmailTheTeamPageModule),\n    canActivate: [AuthGuard],\n  },\n  {path: '**', redirectTo: ''},\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {preloadingStrategy: PreloadAllModules})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {Component} from '@angular/core'\nimport {NavigationEnd, Router} from '@angular/router'\nimport {Platform} from '@ionic/angular'\n\n@Component({\n  selector: 'app-channel-io-mobile',\n  templateUrl: './channel-io-mobile.component.html',\n  styleUrls: ['./channel-io-mobile.component.scss'],\n})\nexport class ChannelIoMobileComponent {\n  public showChat: boolean = false\n  public hasTabbar: boolean = false\n  private paths = [\n    '/dashboard/profile',\n    '/setting',\n    '/account',\n    '/edit-email',\n    '/edit-name',\n    '/edit-password',\n    '/reminder',\n    '/delete-account',\n    '/support',\n    '/language',\n    '/share-app',\n    '/app-info',\n    '/subscription',\n    '/subscriptionplans',\n    '/faqs/',\n    '/email-the-team',\n  ]\n\n  constructor(private platform: Platform, private router: Router) {\n    router.events.subscribe((val) => {\n      if (val instanceof NavigationEnd) {\n        if (\n          this.platform.is('mobileweb') ||\n          this.platform.is('ios') ||\n          this.platform.is('android')\n        ) {\n          this.showChat = this.paths.some((path) => val.url.startsWith(path))\n          this.hasTabbar = val.url.startsWith('/dashboard/profile')\n        } else if (this.platform.is('desktop')) {\n          this.showChat = false\n        }\n      }\n    })\n  }\n\n  // triggers redirect to channel.io on mobile and tablet devices only\n  async viewChat() {\n    window.location.href = 'https://speakypeaky.channel.io/'\n  }\n}\n","import {enableProdMode} from '@angular/core'\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic'\nimport {defineCustomElements} from '@ionic/pwa-elements/loader'\nimport {AppModule} from './app/app.module'\nimport {environment} from './environments/environment'\nimport 'hammerjs' // HAMMER TIME\nif (environment.production) {\n  enableProdMode()\n}\ndefineCustomElements(window)\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err))\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export default \"<!-- Floating chat widget -->\\n<div *ngIf=\\\"showChat\\\" class=\\\"chat ion-text-end\\\" [class.hasTabbar]=\\\"hasTabbar\\\">\\n  <img src=\\\"../../../../assets/images/user-progress/chat.svg\\\" alt=\\\"chat\\\" (click)=\\\"viewChat()\\\" />\\n</div>\";","import {environment} from './../../environments/environment'\nimport {Injectable} from '@angular/core'\nimport {\n  ActionSheetController,\n  LoadingController,\n  NavController,\n  Platform,\n} from '@ionic/angular'\nimport {ToastController} from '@ionic/angular'\nimport {AlertController} from '@ionic/angular'\nimport {DeviceInfo, Plugins} from '@capacitor/core'\nconst {Storage, Toast, Device} = Plugins\nimport {Router} from '@angular/router'\nimport {BehaviorSubject} from 'rxjs'\nimport {chunk, fromPairs} from 'lodash'\nimport * as S3 from 'aws-sdk/clients/s3'\nimport {GoogleAnalytics} from '@ionic-native/google-analytics/ngx'\nimport * as Driver from 'driver.js'\n\nconst ERR_TOKEN_EXP = 'Your session has expired, please login again'\n\ninterface ReactNativeWebView {\n  postMessage: (data: string) => {}\n}\n\nexport interface MyDeviceInfo extends DeviceInfo {\n  isApp: boolean\n  isMobileWeb: boolean\n  isDesktop: boolean\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SharedService {\n  loadingPromise: Promise<HTMLIonLoadingElement>\n  loading: HTMLIonLoadingElement\n  alertShow: boolean\n  video = new BehaviorSubject<any>({})\n  storageCache = {}\n  deviceInfo\n  rnWebview: ReactNativeWebView\n\n  constructor(\n    public loadingController: LoadingController,\n    public alertController: AlertController,\n    public router: Router,\n    public platform: Platform,\n    public toastController: ToastController,\n    public actionSheetController: ActionSheetController,\n    public navController: NavController,\n    private ga: GoogleAnalytics,\n  ) {\n    this.alertShow = false\n    this.getDeviceInfo().then((info) => console.log({info}))\n    this.rnWebview = window['ReactNativeWebView']\n  }\n\n  async getDeviceInfo(): Promise<MyDeviceInfo> {\n    if (!this.deviceInfo) {\n      const info = await Device.getInfo()\n\n      const isApp = ['ios', 'android'].includes(info.platform)\n      const isMobileWeb =\n        info.platform === 'web' && ['ios', 'android'].includes(info.operatingSystem)\n      const isDesktop = info.platform === 'web' && !isMobileWeb\n\n      this.deviceInfo = {...info, isApp, isMobileWeb, isDesktop}\n    }\n    return this.deviceInfo\n  }\n\n  gaTrackView(title) {\n    this.getDeviceInfo().then((info) => {\n      if (info.isApp) {\n        this.ga\n          .startTrackerWithId('UA-118705303-1')\n          .then(() => {\n            console.log('Google analytics is ready now')\n            this.ga.trackView(title)\n          })\n          .catch((e) => console.log('Error starting GoogleAnalytics', e))\n      }\n    })\n  }\n  gaTrackEvent(category, action) {\n    this.getDeviceInfo().then((info) => {\n      if (info.isApp) {\n        this.ga.trackEvent(category, action)\n      }\n    })\n  }\n\n  async presentLoader(message) {\n    if (!this.loading) {\n      this.loadingPromise = this.loadingController.create({message})\n      this.loading = await this.loadingPromise\n      this.loadingPromise = null\n      await this.loading.present()\n    }\n  }\n\n  dismissLoader() {\n    if (this.loading) {\n      return this.loading.dismiss().then(() => {\n        this.loading = null\n      })\n    }\n    if (!this.loading && this.loadingPromise) {\n      return this.loadingPromise.then((loading) => {\n        loading.dismiss().then(() => {\n          this.loading = null\n        })\n      })\n    }\n  }\n\n  async presentToast(text) {\n    if (this.platform.is('capacitor')) {\n      await Toast.show({\n        text,\n        duration: 'long',\n      })\n    } else {\n      const toast = await this.toastController.create({\n        message: text,\n        duration: 2000,\n      })\n      toast.present()\n    }\n  }\n\n  async setNativeStorage(key, value) {\n    this.rnWebview?.postMessage(JSON.stringify({method: 'set', key, value}))\n    this.storageCache[key] = {data: value}\n    return await Storage.set({\n      key,\n      value: JSON.stringify({\n        data: value,\n      }),\n    })\n  }\n\n  async getNativeStorage(key) {\n    if (this.storageCache[key]) {\n      return this.storageCache[key]\n    }\n    const ret = await Storage.get({key})\n    let value = JSON.parse(ret.value)\n    if (!value) {\n      value = {data: null}\n    }\n    this.storageCache[key] = value\n    return value\n  }\n\n  async removeNativeStorage(key) {\n    this.rnWebview?.postMessage(JSON.stringify({method: 'remove', key}))\n    delete this.storageCache[key]\n    return await Storage.remove({key})\n  }\n\n  async presentAlert(header, subHeader?, message?) {\n    const self = this\n\n    console.log({message})\n    if (!self.alertShow) {\n      self.alertShow = true\n      const alert = await this.alertController.create({\n        header,\n        subHeader,\n        message,\n        buttons: [\n          {\n            text: 'Ok',\n            handler: () => {\n              self.alertShow = false\n              if (message === ERR_TOKEN_EXP) {\n                this.removeNativeStorage('token')\n                this.router.navigate(['/login'])\n              }\n            },\n          },\n        ],\n      })\n\n      await alert.present()\n    }\n  }\n\n  removeDuplicatesByProperty(myArr, prop) {\n    return myArr.filter((obj, pos, arr) => {\n      return arr.map((mapObj) => mapObj[prop]).indexOf(obj[prop]) === pos\n    })\n  }\n\n  getS3Bucket(): any {\n    const bucket = new S3({\n      accessKeyId: environment.accessKeyId,\n      secretAccessKey: environment.secretAccessKey,\n      region: environment.region,\n      // apiVersion: '2010-12-01'\n      // ,\n      // signatureVersion: 'v2',\n      // endpoint: 's3-us-east-1.amazonaws.com/'\n    })\n\n    return bucket\n  }\n\n  acronymsWordParser(subTitle) {\n    const meaning = subTitle\n    let [_, ...rs] = meaning.split(/\\((?<key>[A-Z][a-z]{2})\\)/).map((s) => s.trim())\n    let obj = fromPairs(chunk(rs, 2))\n    return obj\n  }\n\n  compareAndHighlight(newElem, oldElem) {\n    const old = oldElem.text().trim().split(' ')\n    let text = ''\n    newElem\n      .text()\n      .trim()\n      .split(' ')\n      .forEach((word, i) => {\n        const oldText = old[i].toLowerCase().replace(/[^a-zA-Z ]/g, '')\n        const newText = word.toLowerCase().replace(/[^a-zA-Z ]/g, '')\n\n        if (newText !== oldText) {\n          text += \" <span class='highlight-difference'>\" + word + '</span>'\n        } else {\n          text += ' ' + word\n        }\n      })\n    newElem.html(text)\n  }\n\n  showHelpGuide({steps, onClose, delay = 1000}) {\n    setTimeout(() => {\n      const driver = new Driver({\n        // animate: false, // Whether to animate or not\n        // opacity: 0,\n        allowClose: false, // Whether the click on overlay should close or not\n        overlayClickNext: true, // Whether the click on overlay should move next\n        doneBtnText: 'Done', // Text on the final button\n        closeBtnText: 'Skip', // Text on the close button for this step\n        // stageBackground: '#ffffff', // Background color for the staged behind highlighted element\n        nextBtnText: 'Next', // Next button text for this step\n        prevBtnText: 'Previous', // Previous button text for this step\n        keyboardControl: false, // Allow controlling through keyboard (escape to close, arrow keys to move)\n        // onNext: (Element) => {},\n        onHighlightStarted: (Element) => {\n          const node = Element.getNode() as HTMLElement\n          node.scrollIntoView(false)\n        },\n        onDeselected: (Element) => {\n          console.log('onDeselected')\n          if (!driver.isActivated) {\n            onClose()\n          }\n        },\n      })\n\n      driver.defineSteps(steps)\n\n      driver.start()\n    }, delay)\n  }\n}\n"],"sourceRoot":"webpack:///"}