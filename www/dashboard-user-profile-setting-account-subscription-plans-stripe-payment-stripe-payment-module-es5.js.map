{"version":3,"sources":["webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-payment/add-card/add-card.component.ts","webpack:///src/app/pipes/filter-payment-cards-by-date.pipe.ts","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-payment/stripe-payment.page.scss","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-payment/add-card/add-card.component.html","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-payment/stripe-payment.module.ts","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-payment/stripe-payment.page.ts","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-payment/add-card/add-card.component.scss","webpack:///src/app/dashboard/user-profile/setting/account/subscription-plans/stripe-payment/stripe-payment.page.html"],"names":["AddCardComponent","sharedService","subscriptionService","modalController","onBoardingService","navParams","stripe","Stripe","stripePublicKey","getUserProfile","toPromise","then","res","profile","data","stripeCustomerId","stripeSandBoxCustomerId","stripeLiveCustomerId","undefined","dismiss","err","setupStripe","elements","style","base","color","lineHeight","fontFamily","fontSmoothing","fontSize","invalid","iconColor","card","create","hidePostalCode","mount","addEventListener","event","displayError","document","getElementById","error","textContent","message","form","preventDefault","presentLoader","createSource","result","errorElement","dismissLoader","attachSourceToCustomer","source","id","sourceId","customerId","token","console","log","presentToast","raw","selector","template","FilterPaymentCardsByDatePipe","value","args","length","sort","a","b","created","name","routes","path","component","StripePaymentPageModule","imports","forChild","declarations","entryComponents","providers","StripePaymentPage","navController","router","route","loadingController","paymentCards","customerDetails","isDevelopmentMode","isProcessing","params","subscribe","productId","getCustomer","getProfile","createCustomer","email","getCustomerDetails","createStripeCustomer","setStripeCustomerId","type","getCustomerAllPaymentMethods","map","default_source","getAllPaymentMethods","componentProps","mode","modal","present","onDidDismiss","planId","noCoupon","processedToPayUsingStripe","setUserSubscription","rawType","setDirection","navigate","userSubscription","orderId","packageName","userSubscriptionStartDate","current_period_start","userSubscriptionEndDate","current_period_end","plan","productType","paymentCard","forEach"],"mappings":"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","file":"dashboard-user-profile-setting-account-subscription-plans-stripe-payment-stripe-payment-module-es5.js","sourcesContent":["import {ModalController, NavParams} from '@ionic/angular'\nimport {SubscriptionService} from './../../../../../../../services/subscription.service'\nimport {OnBoardingService} from './../../../../../../../services/on-boarding.service'\nimport {SharedService} from './../../../../../../../services/shared.service'\nimport {Component, OnInit, isDevMode} from '@angular/core'\nimport {environment} from '../../../../../../../../environments/environment'\ndeclare var Stripe\n@Component({\n  selector: 'app-add-card',\n  templateUrl: './add-card.component.html',\n  styleUrls: ['./add-card.component.scss'],\n})\nexport class AddCardComponent implements OnInit {\n  stripe = Stripe(environment.stripePublicKey)\n  card: any\n  profile\n  stripeCustomerId\n\n  constructor(\n    private sharedService: SharedService,\n    private subscriptionService: SubscriptionService,\n    public modalController: ModalController,\n    private onBoardingService: OnBoardingService,\n    private navParams: NavParams,\n  ) {\n    this.onBoardingService\n      .getUserProfile()\n      .toPromise()\n      .then((res) => {\n        const profile = res.data //this.navParams.get('profile')\n\n        const stripeCustomerId = isDevMode()\n          ? profile.stripeSandBoxCustomerId\n          : profile.stripeLiveCustomerId\n\n        if (stripeCustomerId === undefined) {\n          this.dismiss()\n        }\n        this.stripeCustomerId = stripeCustomerId\n      })\n      .catch((err) => {\n        this.dismiss()\n      })\n  }\n\n  ngOnInit() {\n    this.setupStripe()\n  }\n\n  setupStripe() {\n    const elements = this.stripe.elements()\n    const style = {\n      base: {\n        color: '#32325d',\n        lineHeight: '24px',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSmoothing: 'antialiased',\n        fontSize: '16px',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#fa755a',\n        iconColor: '#fa755a',\n      },\n    }\n\n    this.card = elements.create('card', {style, hidePostalCode: true})\n    // console.log( this.card );\n    this.card.mount('#card-element')\n\n    this.card.addEventListener('change', (event) => {\n      const displayError = document.getElementById('card-errors')\n      if (event.error) {\n        displayError.textContent = event.error.message\n      } else {\n        displayError.textContent = ''\n      }\n    })\n\n    const form = document.getElementById('payment-form')\n    form.addEventListener('submit', (event) => {\n      event.preventDefault()\n      // console.log( event );\n      this.sharedService.presentLoader('Please wait...')\n      // console.log( this.card );\n      this.stripe.createSource(this.card).then((result) => {\n        if (result.error) {\n          const errorElement = document.getElementById('card-errors')\n          errorElement.textContent = result.error.message\n          this.sharedService.dismissLoader()\n        } else {\n          this.attachSourceToCustomer(result.source.id)\n        }\n      })\n    })\n  }\n\n  async attachSourceToCustomer(sourceId) {\n    try {\n      const stripeCustomerId = this.stripeCustomerId\n      if (stripeCustomerId === undefined) {\n        return\n      }\n\n      const res = await this.subscriptionService\n        .attachSourceToCustomer({customerId: stripeCustomerId, token: sourceId})\n        .toPromise()\n      this.sharedService.dismissLoader()\n      this.dismiss()\n    } catch (error) {\n      console.log(error)\n      this.sharedService.dismissLoader()\n      this.sharedService.presentToast(error.err?.raw?.message)\n    } finally {\n    }\n  }\n\n  dismiss() {\n    this.modalController.dismiss()\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core'\n\n@Pipe({\n  name: 'filterPaymentCardsByDate',\n})\nexport class FilterPaymentCardsByDatePipe implements PipeTransform {\n  transform(value: Array<any>, args?: any): any {\n    if (value.length) {\n      return value.sort((a, b) => {\n        // Turn your strings into dates, and then subtract them\n        // to get a value that is either negative, positive, or zero.\n        return a.created - b.created\n      })\n    } else {\n      return null\n    }\n  }\n}\n","export default \"ion-list-header {\\n  --background: lightgray;\\n}\\n\\nion-item ion-label span {\\n  font-size: 20px;\\n}\\n\\n#add-card-icon {\\n  font-size: 25px;\\n  margin-right: 5px;\\n  display: inline-flex;\\n  vertical-align: middle;\\n}\\n\\n.warning {\\n  --background: #bad9b5;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3N0cmlwZS1wYXltZW50LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHVCQUFBO0FBQ0Y7O0FBR0k7RUFDRSxlQUFBO0FBQU47O0FBSUE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLHNCQUFBO0FBREY7O0FBR0E7RUFDRSxxQkFBQTtFQUNBLGdCQUFBO0FBQUYiLCJmaWxlIjoic3RyaXBlLXBheW1lbnQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWxpc3QtaGVhZGVyIHtcbiAgLS1iYWNrZ3JvdW5kOiBsaWdodGdyYXk7XG59XG5pb24taXRlbSB7XG4gIGlvbi1sYWJlbCB7XG4gICAgc3BhbiB7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuICB9XG59XG4jYWRkLWNhcmQtaWNvbiB7XG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuLndhcm5pbmcge1xuICAtLWJhY2tncm91bmQ6ICNiYWQ5YjU7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG4iXX0= */\";","export default \"<ion-header mode=\\\"ios\\\">\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-title>\\n      Add New Card\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\" mode=\\\"md\\\">\\n      <ion-button mode=\\\"md\\\" (click)=\\\"dismiss()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" mode=\\\"ios\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <form action=\\\"/\\\" method=\\\"post\\\" id=\\\"payment-form\\\">\\n    <ion-grid>\\n      <ion-row class=\\\"ion-margin-top ion-margin-bottom ion-align-items-center ion-justify-content-center\\\">\\n        <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeMd=\\\"10\\\" sizeLg=\\\"10\\\" sizeXl=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"form-row\\\">\\n            <div id=\\\"card-element\\\">\\n              <!-- a Stripe Element will be inserted here. -->\\n            </div>\\n            <!-- Used to display Element errors -->\\n            <div class=\\\"c-red\\\" id=\\\"card-errors\\\" role=\\\"alert\\\"></div>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n        <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeMd=\\\"8\\\" sizeLg=\\\"6\\\" sizeXl=\\\"6\\\" class=\\\"ion-align-self-center\\\">\\n          <ion-button type=\\\"submit\\\" mode=\\\"ios\\\" color=\\\"danger\\\" fill=\\\"outline\\\" shape=\\\"round\\\" expand=\\\"block\\\"\\n            >Add Card\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\";","import {FilterPaymentCardsByDatePipe} from './../../../../../../pipes/filter-payment-cards-by-date.pipe'\nimport {AddCardComponent} from './add-card/add-card.component'\nimport {SubscriptionService} from './../../../../../../services/subscription.service'\nimport {OnBoardingService} from './../../../../../../services/on-boarding.service'\nimport {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\nimport {Routes, RouterModule} from '@angular/router'\n\nimport {IonicModule} from '@ionic/angular'\n\nimport {StripePaymentPage} from './stripe-payment.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StripePaymentPage,\n  },\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [StripePaymentPage, AddCardComponent, FilterPaymentCardsByDatePipe],\n  entryComponents: [AddCardComponent],\n  providers: [OnBoardingService, SubscriptionService],\n})\nexport class StripePaymentPageModule {}\n","import {AddCardComponent} from './add-card/add-card.component'\nimport {Router, ActivatedRoute} from '@angular/router'\nimport {NavController, ModalController, LoadingController} from '@ionic/angular'\nimport {SubscriptionService} from './../../../../../../services/subscription.service'\nimport {OnBoardingService} from './../../../../../../services/on-boarding.service'\nimport {SharedService} from './../../../../../../services/shared.service'\nimport {Component, OnInit, isDevMode} from '@angular/core'\nimport {environment} from '../../../../../../../environments/environment'\ndeclare var Stripe\n\n@Component({\n  selector: 'app-stripe-payment',\n  templateUrl: './stripe-payment.page.html',\n  styleUrls: ['./stripe-payment.page.scss'],\n})\nexport class StripePaymentPage implements OnInit {\n  // Add Stripe Public Key\n  stripe = Stripe(environment.stripePublicKey)\n  card: any\n  paymentCards = []\n  customerDetails: any = undefined\n  profile: any\n  isDevelopmentMode = false\n  isProcessing = false\n  productId: any\n\n  constructor(\n    public sharedService: SharedService,\n    private onBoardingService: OnBoardingService,\n    public navController: NavController,\n    private router: Router,\n    private route: ActivatedRoute,\n    public modalController: ModalController,\n    public loadingController: LoadingController,\n    private subscriptionService: SubscriptionService,\n  ) {}\n\n  ngOnInit() {\n    if (isDevMode()) {\n      this.isDevelopmentMode = true\n    } else {\n      this.isDevelopmentMode = false\n    }\n    console.log('this.isDevelopmentMode', this.isDevelopmentMode)\n\n    this.route.params.subscribe(\n      (params) => {\n        if (params.productId) {\n          this.productId = params.productId\n        }\n      },\n      (error) => {\n        console.log(error)\n      },\n    )\n    this.getCustomer()\n  }\n  async getProfile() {\n    try {\n      const res = await this.onBoardingService.getUserProfile(true).toPromise()\n      return res.data\n    } catch {}\n  }\n\n  async getCustomer() {\n    try {\n      this.sharedService.presentLoader('Please wait...')\n\n      const profile = await this.getProfile()\n\n      if (profile) {\n        this.profile = profile\n        const stripeCustomerId = this.isDevelopmentMode\n          ? profile.stripeSandBoxCustomerId\n          : profile.stripeLiveCustomerId\n\n        if (!stripeCustomerId) {\n          await this.createCustomer(profile.email)\n        } else {\n          await this.getCustomerDetails(stripeCustomerId)\n        }\n      }\n    } catch (error) {\n      this.sharedService.dismissLoader()\n      console.log(error)\n    }\n  }\n\n  async createCustomer(email) {\n    console.log('createCustomer', email)\n\n    try {\n      const res = await this.subscriptionService.createStripeCustomer({email}).toPromise()\n\n      this.setStripeCustomerId(res.data.id)\n    } catch (error) {\n      console.log(error)\n      this.sharedService.presentToast(error)\n    } finally {\n      this.sharedService.dismissLoader()\n    }\n  }\n\n  async setStripeCustomerId(stripeCustomerId) {\n    try {\n      const data = {\n        customerId: stripeCustomerId,\n        type: this.isDevelopmentMode ? 'sandbox' : 'production',\n      }\n\n      await this.subscriptionService.setStripeCustomerId(data).toPromise()\n      const profile = await this.getProfile()\n      this.profile = profile\n    } catch (error) {\n      console.log(error)\n      this.sharedService.presentToast(error)\n    } finally {\n      this.sharedService.dismissLoader()\n    }\n  }\n\n  async getAllPaymentMethods() {\n    try {\n      const profile = await this.getProfile()\n      const stripeCustomerId = this.isDevelopmentMode\n        ? profile.stripeSandBoxCustomerId\n        : profile.stripeLiveCustomerId\n\n      const data = {\n        type: 'card',\n        customerId: stripeCustomerId,\n      }\n\n      const res = await this.subscriptionService\n        .getCustomerAllPaymentMethods(data)\n        .toPromise()\n\n      console.log('getAllPaymentMethods', res)\n      if (res.data.data.length) {\n        this.paymentCards = res.data.data\n\n        console.log('getCustomerDetails')\n        const customerDetails = await this.subscriptionService\n          .getCustomerDetails(stripeCustomerId)\n          .toPromise()\n        console.log({customerDetails})\n        this.customerDetails = customerDetails.data\n\n        this.paymentCards.map((card: any) => {\n          if (card.id === this.customerDetails.default_source) {\n            card.default = true\n          } else {\n            card.default = false\n          }\n        })\n      }\n    } catch (error) {\n      console.log(error)\n    } finally {\n      this.sharedService.dismissLoader()\n    }\n  }\n\n  async getCustomerDetails(customerId) {\n    try {\n      const res = await this.subscriptionService\n        .getCustomerDetails(customerId)\n        .toPromise()\n\n      this.customerDetails = res.data\n      this.getAllPaymentMethods()\n    } catch (error) {\n      console.log(error)\n    } finally {\n      this.sharedService.dismissLoader()\n    }\n  }\n\n  async onAddCard() {\n    const modal = await this.modalController.create({\n      component: AddCardComponent,\n      componentProps: {profile: this.profile},\n      mode: 'md',\n    })\n    await modal.present()\n    await modal\n      .onDidDismiss()\n      .then(() => {\n        this.getAllPaymentMethods()\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  async onProcessedToPayUsingStripe() {\n    if (this.customerDetails.default_source === null || this.productId === undefined) {\n      this.sharedService.presentToast('Please enter card details')\n      return\n    }\n\n    try {\n      const data = {\n        planId: this.productId,\n        default_source: this.customerDetails.default_source,\n        customerId: this.customerDetails.id,\n        noCoupon: true,\n      }\n      this.isProcessing = true\n      this.sharedService.presentLoader('Please wait...')\n\n      this.subscriptionService.processedToPayUsingStripe(data).subscribe(\n        (res) => {\n          this.setUserSubscription(res.data)\n        },\n        (error) => {\n          console.log(error)\n          this.sharedService.dismissLoader()\n          this.isProcessing = true\n          this.sharedService.presentToast(error.err.rawType)\n        },\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  back() {\n    this.navController.setDirection('back')\n    this.router.navigate(['/subscriptionplans'])\n  }\n\n  setUserSubscription(data) {\n    const userSubscription = {\n      type: 'Stripe',\n      orderId: data.id,\n      packageName: 'com.summer.startenglishnow',\n      userSubscriptionStartDate: data.current_period_start * 1000,\n      userSubscriptionEndDate: data.current_period_end * 1000,\n      productId: data.plan.id,\n      productType: this.productId,\n    }\n\n    try {\n      this.subscriptionService.setUserSubscription(userSubscription).subscribe(\n        (res) => {\n          this.sharedService.presentToast(res.message)\n          this.sharedService.dismissLoader()\n          this.navController.setDirection('root')\n          this.getProfile().then(() => {\n            this.router.navigate(['/dashboard/lessons'])\n          })\n        },\n        (error) => {\n          console.log(error)\n          this.sharedService.dismissLoader()\n        },\n      )\n    } catch (error) {\n      this.sharedService.dismissLoader()\n      console.log(error)\n    }\n  }\n\n  onSetDefaultCard(paymentCard) {\n    this.customerDetails.default_source = paymentCard.id\n    this.paymentCards.forEach((card) => {\n      card.default = card.id === this.customerDetails.default_source\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtY2FyZC5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<ion-header mode=\\\"ios\\\">\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\" mode=\\\"md\\\">\\n      <ion-button mode=\\\"md\\\" (click)=\\\"back()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"chevron-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid class=\\\"ion-no-padding\\\">\\n    <ion-row *ngIf=\\\"isProcessing\\\" class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n      <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeMd=\\\"6\\\" sizeLg=\\\"4\\\" sizeXl=\\\"4\\\" class=\\\"ion-align-self-center\\\">\\n        <ion-card mode=\\\"ios\\\" class=\\\"ion-no-margin ion-margin-top warning\\\">\\n          <ion-card-content>\\n            Your order Is being processed. Please DO NOT close the page or click the back or refresh buttons.\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n      <ion-col\\n        sizeXs=\\\"12\\\"\\n        sizeSm=\\\"12\\\"\\n        sizeMd=\\\"6\\\"\\n        sizeLg=\\\"4\\\"\\n        sizeXl=\\\"4\\\"\\n        class=\\\"ion-no-padding ion-padding ion-align-self-center\\\"\\n      >\\n        <h1 class=\\\"ion-no-margin\\\">Payment options</h1>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n      <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeMd=\\\"6\\\" sizeLg=\\\"4\\\" sizeXl=\\\"4\\\" class=\\\"ion-no-padding ion-align-self-center\\\">\\n        <ion-list mode=\\\"md\\\" class=\\\"ion-no-padding\\\">\\n          <ion-list-header mode=\\\"md\\\">\\n            <ion-label>Credit / Debit Cards</ion-label>\\n          </ion-list-header>\\n          <ion-item\\n            mode=\\\"md\\\"\\n            *ngFor=\\\"let paymentCard of paymentCards | filterPaymentCardsByDate\\\"\\n            (click)=\\\"onSetDefaultCard(paymentCard)\\\"\\n          >\\n            <ion-label> <span>xxxx-xxxx-xxxx-</span>{{ paymentCard.card.last4 }} </ion-label>\\n            <ion-icon\\n              *ngIf=\\\"paymentCard.default\\\"\\n              mode=\\\"ios\\\"\\n              color=\\\"success\\\"\\n              name=\\\"checkmark-circle\\\"\\n              size=\\\"large\\\"\\n              slot=\\\"end\\\"\\n            ></ion-icon>\\n          </ion-item>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n      <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeMd=\\\"6\\\" sizeLg=\\\"4\\\" sizeXl=\\\"4\\\" class=\\\"ion-padding-start ion-align-self-center\\\">\\n        <p (click)=\\\"onAddCard()\\\" class=\\\"pointer\\\">\\n          <ion-icon id=\\\"add-card-icon\\\" name=\\\"add-circle-outline\\\"></ion-icon> ADD NEW CARD\\n        </p>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n<ion-footer>\\n  <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n    <ion-col sizeXs=\\\"12\\\" sizeSm=\\\"12\\\" sizeMd=\\\"6\\\" sizeLg=\\\"4\\\" sizeXl=\\\"4\\\" class=\\\"ion-align-self-center\\\">\\n      <ion-button\\n        mode=\\\"ios\\\"\\n        [disabled]=\\\"customerDetails === undefined\\\"\\n        (click)=\\\"onProcessedToPayUsingStripe()\\\"\\n        color=\\\"danger\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        >Process To Pay\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\\n\";"]}